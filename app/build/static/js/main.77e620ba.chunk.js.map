{"version":3,"sources":["images/logo.png","images/waiting_approval.png","images/families.png","components/header.js","components/footer.js","components/privateroute.js","components/autocomplete.js","components/checkboxTermofUse.js","pages/Register.js","components/communitycard.js","pages/MyCommunities.js","pages/JoinCommunities.js","components/checkboxfield.js","pages/CreateCommunity.js","pages/Login.js","components/communityNavbar.js","pages/CommunityAbout.js","pages/Welcome.js","pages/ForgotPassword.js","pages/ResetPassword.js","components/sideNavAccount.js","pages/AccountSettings.js","pages/EmailSettings.js","components/customSections.js","pages/CalendarPage.js","pages/ForgotPasswordConfirm.js","pages/ResetPasswordConfirm.js","components/sidebar.js","pages/CreateNewActivity.js","components/postCard.js","pages/Announcements.js","pages/CreateAnnouncement.js","pages/CommunityOneMember.js","pages/CommunityAddMember.js","pages/CommunityEdit.js","pages/CommunityPeople.js","pages/CommunityHome.js","pages/WaysToHelp.js","pages/WellWishes.js","pages/CreateCustomSection.js","components/activityPDF.js","pages/ActivityReport.js","pages/CustomGeneral.js","pages/PhotoGallery.js","pages/MessageBoard.js","pages/PasswordSettings.js","pages/ActivityEdit.js","components/editCustomSection.js","components/deleteCustomSection.js","pages/ManageCustomSections.js","pages/JoinRequests.js","pages/EmailMembers.js","pages/ManageActivities.js","App.js","index.js"],"names":["module","exports","Header","props","useState","active","setActive","logged_out_header","Container","position","className","to","size","logged_in_header","localStorage","getItem","onClick","handle_logout","color","Brand","style","display","alignItems","href","logged_in","src","logo","alt","width","Burger","role","ariaLabel","ariaExpanded","dataTarget","e","ariaHidden","Menu","id","AppFooter","Head","renderAs","Footer","textAlign","PrivateRoute","Component","component","rest","isLoggedIn","undefined","render","pathname","state","from","location","Autocomplete","onChange","suggestions","userInput","currentTarget","value","filteredSuggestions","filter","suggestion","toLowerCase","indexOf","setState","activeSuggestion","showSuggestions","innerText","set_who","onKeyDown","keyCode","length","suggestionsListComponent","this","class","map","index","key","type","defaultProps","CheckboxTermofUse","justifyContent","marginRight","target","Register","firstName","setFirstName","lastName","setLastName","addressLine1","setAddressLine1","addressLine2","setAddressLine2","city","setCity","country","setCountry","zipcode","setZipcode","phoneNumber1","setPhoneNumber1","phoneNumber1Type","setPhoneNumber1Type","phoneNumber2","setPhoneNumber2","phoneNumber2Type","setPhoneNumber2Type","email","setEmail","password","setPassword","confirmEmail","setConfirmEmail","confirmPassword","setConfirmPassword","who","setWho","howLearn","setHowLearn","howHelp","setHowHelp","howKnow","setHowKnow","skillsToOffer","setSkillsToOffer","validForm","setValidForm","communities","setCommunities","history","useHistory","useEffect","formValues","notValidForm","some","formVal","formdata","FormData","append","fetch","process","method","body","redirect","then","response","text","result","push","catch","error","console","log","axios","get","suggestedCommunities","i","data","name","margin","maxWidth","padding","border","borderRadius","Column","placeholder","countryList","getLabels","c","marginTop","fullwidth","disabled","handle_signup","backgroundColor","Card","styled","div","CommunityLabel","CommunityCard","photo","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","height","MyCommunities","search","setSearch","approvedCommunityIds","setApprovedCommunityIds","token","loading","setLoading","headers","Authorization","params","user_email","approvedCommunities","is_approved","community","setCommunityInfoInLocalStorage","useCallback","is_closed","setItem","minHeight","hidden","isMultiline","includes","photo_file","ApprovalCover","fontStyle","JoinCommunities","newCommunities","setNewCommunities","myCommunities","setMyCommunities","selectedId","setSelectedId","addVolunteer","param","JSON","stringify","parseInt","user","post","Array","communitiesUserIsIn","maxHeight","checked","String","marginBottom","CheckboxField","CreateCommunity","setName","description","setDescription","isClosed","setIsClosed","photoFile","setPhotoFile","photoURL","setPhotoURL","handleSubmit","myHeaders","Headers","fontSize","icon","URL","createObjectURL","files","Login","rememberMe","setRememberMe","invalid","handle_login","Bar","links","CommunityNavbar","overflow","whiteSpace","title","CommunityAbout","pk","BackgroundWrapper","HighLight","p","ButtonBg","Wave","WaveContainer","Welcome","aboutCard","boxShadow","paddingBottom","outlined","families","Content","Item","ForgotPassword","handle_forgot_password","ResetPassword","passwordConfirm","setPasswordConfirm","setToken","uid","setUid","url","window","URLSearchParams","handleChangePassword","new_password1","new_password2","SideNavAccount","List","componentClass","AccountSettings","phone1","setPhone1","phone1Type","setPhone1Type","phone2","setPhone2","phone2Type","setPhone2Type","setPk","res","json","first_name","last_name","phone_number_1","phone_number_1_type","phone_number_2","phone_number_2_type","address_line_1","address_line_2","editInformation","reload","infoAboutH2S","setInfoAboutH2S","newsletter","setNewsLetter","handleOnCheckInformationAboutH2S","handleOnCheckNewsLetter","CustomSections","sections","setSections","setUserRole","section","link","CalendarPage","moment","format","selectedMonth","setSelectedMonth","selectedYear","setSelectedYear","date","setDate","years","keys","events","setEvents","selectedEvent","setSelectedEvent","isSelectingEvent","setIsSelectingEvent","showRemoveModal","setShowRemoveModel","isDeactivate","setIsDeactivate","localizer","momentLocalizer","selectedMember","setSelectedMember","members","setMembers","selectedCategories","setSelectedCategories","originalEvents","setOriginalEvents","selectedStatuses","setSelectedStatuses","deactivate","getEventInfo","event","goBackToCalendar","addSelectedStatus","status","isChecked","newSelectedStatuses","concat","splice","filteredEvents","splitNames","split","member_object","forEach","activity","tempData","timezone_offset","Date","getTimezoneOffset","add","toDate","processEvents","people","removeActivity","deactivateActivity","patch","err","isRideActivity","activity_type","isMealActivity","start_time","end_time","rel","pickup_location","destination_location","delivery_location","dietary_restrictions","r","num_volunteers_needed","volunteers","person","coordinators","show","onClose","closeOnBlur","Title","Foot","member","filterMember","m","t","category","newSelectedCategories","addSelectedCategories","month","year","onNavigate","startAccessor","endAccessor","allDayAccessor","popup","onSelectEvent","eventPropGetter","ForgotPasswordConfirm","ResetPasswordConfirm","SideBar","CreateNewActivity","formContainerStyle","borderTop","noteStyle","checkboxStyle","y","getFullYear","months","times","count","slice","activeTab","setActiveTab","setCategory","activityName","setActivityName","notes","setNotes","startTime","setStartTime","endTime","setEndTime","noEndTime","setNoEndTime","allDay","setAllDay","getMonth","startMonth","setStartMonth","getDate","startDay","setStartDay","startYear","setStartYear","endMonth","setEndMonth","endDay","setEndDay","endYear","setEndYear","selectedDays","setSelectedDays","pickupLocation","setPickupLocation","destination","setDestination","setLocation","estimatedHours","setEstimatedHours","estimatedMinutes","setEstimatedMinutes","numVolunteers","setNumVolunteers","setCoordinators","selectedCoordinators","setSelectedCoordinators","dietaryRestrictions","setDietaryRestrictions","daysOfWeek","setDaysOfWeek","getDaysBetweenDates","start","end","dayName","day","sun","mon","tue","wed","thu","fri","sat","substr","current","getDay","containsDay","array","d","DateUtils","isSameDay","isNaN","options","item","label","dietaryRestrictionStatus","restriction","dates","est_hours","est_minutes","all_day","no_end_time","Tab","cat","maxLength","addDays","newSelectedDays","handleWeekdayToggle","onDayClick","modifiers","selected","selectedDay","numberOfMonths","d1","d2","monthDiff","disabledDays","after","before","valueRenderer","onSelectedChanged","PostCard","subject","message","dateTime","showMenu","setShowMenu","showModal","setShowModal","isEditing","setIsEditing","newSubject","setNewSubject","newMessage","setNewMessage","deletePost","editPost","userStyle","fontWeight","dateStyle","initialValue","init","menubar","plugins","toolbar","file_browser_callback_types","file_picker_callback","callback","meta","filetype","input","document","getElementById","click","onchange","file","reader","FileReader","onload","readAsDataURL","paste_data_images","onEditorChange","content","editor","zIndex","right","dangerouslySetInnerHTML","__html","Announcements","announcements","setAnnouncements","reverse","a","date_time","author_name","CreateAnnouncement","setSubject","setMessage","whenPost","setWhenPost","setMonth","setDay","setYear","time","setTime","showHome","setShowHome","sendEmail","setSendEmail","toLocaleDateString","toLocaleTimeString","hour","minute","hour12","show_on_page","toString","CommunityOneMember","containerStyle","isRemoving","setIsRemoving","newFirstName","setNewFirstName","newLastName","setNewLastName","newEmail","setNewEmail","newPhoneNumber1","setNewPhoneNumber1","newPhoneNumber1Type","setNewPhoneNumber1Type","newPhoneNumber2","setNewPhoneNumber2","newPhoneNumber2Type","setNewPhoneNumber2Type","newAddressLine1","setNewAddressLine1","newAddressLine2","setNewAddressLine2","newCity","setNewCity","newState","setNewState","newZipcode","setNewZipcode","newCountry","setNewCountry","newRole","setNewRole","roleMap","removeMember","editRole","editMember","requestOptions","subtitle","CommunityAddMembers","inputEmail","setInputEmail","allEmails","setAllEmails","success","setSuccess","addEmail","fromEmail","toEmails","sender","from_email","to_emails","CommunityEdit","communityName","setCommunityName","communityDescription","setCommunityDescription","communityZipcode","setCommunityZipcode","homePageHighlight","setHomePageHighlight","showLeaders","setShowLeaders","communityTimezone","setCommunityTimezone","communityVisibility","setCommunityVisibility","home_page_highlight","display_leaders_on_home_page","community_time_zone","editCommunity","zone","CommunityPeople","setPeople","user_role","CommunityHome","profilePhoto","setProfilePhoto","showWelcomeCard","setShowWelcomeCard","displayCalendar","setDisplayCalendar","displayFamilyUpdates","setDisplayFamilyUpdates","displayWaysToHelp","setDisplayWaystoHelp","setDisplayMessageBoard","displayPhotoGallery","setDisplayPhotoGallery","displayWellWishes","setDisplayWellWishes","wellWishes","setWellWishes","familyUpdates","setFamilyUpdates","waystoHelp","setWaysToHelp","photoGallery","setPhotoGallery","userRole","showLeaveCommunityModal","setShowLeaveCommunityModal","linkStyle","removeCommunityMember","ways_to_help","gallery","original","thumbnail","originalTitle","thumbnailTitle","phone","WelcomeCardStaff","remove","Body","WelcomeCardMember","calendar","wellWishesContainer","waysToHelpContainer","familyUpdatesContainer","photoGalleryContainer","items","thumbnailPosition","autoPlay","WaysToHelp","setContent","newContent","setNewContent","editWaysToHelp","WellWishes","showForm","setShowForm","wellwishes","CreateCustomSection","setTitle","setType","setLink","general_content","PDF","styles","StyleSheet","create","paddingTop","paddingHorizontal","fontFamily","helpText","header","table","borderStyle","borderColor","borderWidth","borderRightWidth","borderBottomWidth","tableRow","flexDirection","tableCol1Header","COL1_WIDTH","borderBottomColor","borderLeftWidth","borderTopWidth","tableColHeader","COLN_WIDTH","tableCol1","tableCol","tableCellHeader","tableCell","activities","setActivities","extendMoment","Moment","monthMap","Map","fixed","start_month","start_day","start_year","end_month","end_day","end_year","range","contains","est_hours_per_volunteer","Math","round","est_minutes_per_volunteer","actual_hours_per_volunteer","actual_minutes_per_volunteer","ActivityReport","selectedActivityType","setSelectedActivityType","isDateWithinRange","dateFormatted","startDate","endDate","fileName","is_active","CustomGeneral","showDPForm","setShowDPForm","newTitle","setNewTitle","newDescription","setNewDescription","discussionPosts","setDiscussionPosts","section_id","editCustomSection","PhotoGallery","setFile","fileURL","setFileURL","photos","setPhotos","addPhoto","MessageBoard","messages","setMessages","PasswordSettings","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","ActivityEdit","activityPk","setVolunteers","parseDate","isStartDate","splitDate","YYYY","MM","splitDDTHMSZ","DD","Time","tempSelectedDays","selected_days","initDietaryRestrictions","j","coordinatorIds","coordinator","volunteerIds","volunteer","labelledBy","EditCustomSection","showEdit","setShowEdit","newName","setNewName","newLink","setNewLink","DeleteCustomSection","showDelete","setShowDelete","deleteSection","ManageCustomSections","s","Coordinator","EmailMembers","selectedMembers","setSelectedMembers","ManageActivities","selectedActivityId","setSelectedActivityId","selectedActivityTitle","setSelectedActivityTitle","App","loggedIn","setLoggedIn","handleLogin","is_staff","request","handleSignup","require","config","handleLogout","clear","handleForgotPassword","path","exact","SelectCommunities","EmailSettings","OneCommunityMember","JoinRequests","ReactDOM"],"mappings":"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","file":"static/js/main.77e620ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3fc9e322.png\";","module.exports = __webpack_public_path__ + \"static/media/waiting_approval.21c98c5f.png\";","module.exports = __webpack_public_path__ + \"static/media/families.fce57c76.png\";","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport logo from '../images/logo.png'\n\nimport Navbar from 'react-bulma-components/lib/components/navbar'\nimport Box from 'react-bulma-components/lib/components/box'\nimport Heading from 'react-bulma-components/lib/components/heading'\nimport '../stylesheets/App.sass'\n\nconst Header = (props) => {\n  const [active, setActive] = useState(false)\n\n  const logged_out_header = (\n    <Navbar.Container position='end'>\n      <Link className={'navbar-item'} to='/'>\n        <Heading size={6}>Home</Heading>\n      </Link>\n      <Link className={'navbar-item'} to='/login'>\n        <Heading size={6}>Login</Heading>\n      </Link>\n    </Navbar.Container>\n  )\n\n  const logged_in_header = (\n    <Navbar.Container position='end'>\n      <Link className={'navbar-item'} to='/my-communities'>\n        <Heading size={6}>My Communities</Heading>\n      </Link>\n      {/* Only admin can create new communities */}\n      {localStorage.getItem('is-staff') === 'true' ? \n        (<Link className={'navbar-item'} to='/create-community'>\n          <Heading size={6}>Create Community</Heading>\n        </Link>)\n        :\n        (<></>)\n      }\n      <Link className={'navbar-item'} to='/account-settings'>\n        <Heading size={6}>My Account</Heading>\n      </Link>\n      <Link className={'navbar-item'} to='/' onClick={() => props.handle_logout()}>\n        <Heading size={6}>Logout</Heading>\n      </Link>\n    </Navbar.Container>\n  )\n\n  return (\n    <div>\n      <Box>\n        <Navbar color='white'>\n          <Navbar.Brand style={{ display: 'flex', alignItems: 'center' }}>\n            <a href={props.logged_in ? '/my-communities' : '/'}>\n              <img src={logo} alt='logo' width='160' />\n            </a>\n            <Navbar.Burger\n              role='button'\n              ariaLabel='menu'\n              ariaExpanded='false'\n              dataTarget='navItems'\n              onClick={(e) => setActive(!active)}\n              className={active && 'is-active'}\n            >\n              <span ariaHidden='true'></span>\n              <span ariaHidden='true'></span>\n              <span ariaHidden='true'></span>\n            </Navbar.Burger>\n          </Navbar.Brand>\n          <Navbar.Menu id='navItems' className={active && 'is-active'}>\n            {props.logged_in ? logged_in_header : logged_out_header}\n          </Navbar.Menu>\n        </Navbar>\n      </Box>\n    </div>\n  )\n}\n\nexport default Header\n\nHeader.propTypes = {\n  logged_in: PropTypes.bool.isRequired,\n  handle_logout: PropTypes.func.isRequired\n}\n","import React from 'react'\n\nimport Footer from 'react-bulma-components/lib/components/footer'\nimport Container from 'react-bulma-components/lib/components/container'\nimport Content from 'react-bulma-components/lib/components/content'\nimport Hero from 'react-bulma-components/lib/components/hero'\n\nexport default function AppFooter() {\n  return (\n    <Hero size='medium'>\n      <Hero.Head renderAs='header' />\n      <Hero.Footer>\n        <Footer>\n          <Container>\n            <Content\n              style={{ textAlign: 'center' }}\n              className='has-text-grey-darker'\n            >\n              <p>\n                © 2020 Made by{' '}\n                <a href='https://hack4impact.org/'>Hack4Impact</a>\n              </p>\n            </Content>\n          </Container>\n        </Footer>\n      </Hero.Footer>\n    </Hero>\n  )\n}\n","// This is used to determine if a user is authenticated and\n// if they are allowed to visit the page they navigated to.\n\n// If they are: they proceed to the page\n// If not: they are redirected to the login page.\nimport React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n\n  // Add your own authentication on the below line.\n  const isLoggedIn = localStorage.getItem('token') && \n                     localStorage.getItem('token') !== 'undefined' && \n                     localStorage.getItem('token') !== undefined ?\n                        true : false\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n        )\n      }\n    />\n  )\n}\n\nexport default PrivateRoute","import React, { Component, Fragment } from 'react'\nimport PropTypes from 'prop-types'\n\n// Base code from: https://alligator.io/react/react-autocomplete/\nclass Autocomplete extends Component {\n  static propTypes = {\n    suggestions: PropTypes.instanceOf(Array),\n    set_who: PropTypes.instanceOf(Function),\n  }\n  static defaultProps = {\n    suggestions: [],\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      // The active selection's index\n      activeSuggestion: 0,\n      // The suggestions that match the user's input\n      filteredSuggestions: [],\n      // Whether or not the suggestion list is shown\n      showSuggestions: false,\n      // What the user has entered\n      userInput: '',\n    }\n  }\n\n  // Event fired when the input value is changed\n  onChange = (e) => {\n    const { suggestions } = this.props\n    const userInput = e.currentTarget.value\n\n    // Filter our suggestions that don't contain the user's input\n    const filteredSuggestions = suggestions.filter(\n      (suggestion) =>\n        suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n    )\n\n    // Update the user input and filtered suggestions, reset the active\n    // suggestion and make sure the suggestions are shown\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions,\n      showSuggestions: true,\n      userInput: e.currentTarget.value,\n    })\n  }\n\n  // Event fired when the user clicks on a suggestion\n  onClick = (e) => {\n    // Update the user input and reset the rest of the state\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: e.currentTarget.innerText,\n    })\n    this.props.set_who(e.currentTarget.innerText)\n  }\n\n  // Event fired when the user presses a key down\n  onKeyDown = (e) => {\n    const { activeSuggestion, filteredSuggestions } = this.state\n\n    // User pressed the enter key, update the input and close the\n    // suggestions\n    if (e.keyCode === 13) {\n      this.setState({\n        activeSuggestion: 0,\n        showSuggestions: false,\n        userInput: filteredSuggestions[activeSuggestion],\n      })\n    }\n    // User pressed the up arrow, decrement the index\n    else if (e.keyCode === 38) {\n      if (activeSuggestion === 0) {\n        return\n      }\n\n      this.setState({ activeSuggestion: activeSuggestion - 1 })\n    }\n    // User pressed the down arrow, increment the index\n    else if (e.keyCode === 40) {\n      if (activeSuggestion - 1 === filteredSuggestions.length) {\n        return\n      }\n      this.setState({ activeSuggestion: activeSuggestion + 1 })\n    }\n    this.props.set_who(filteredSuggestions[activeSuggestion])\n  }\n\n  render() {\n    const {\n      onChange,\n      onClick,\n      onKeyDown,\n      state: {\n        activeSuggestion,\n        filteredSuggestions,\n        showSuggestions,\n        userInput,\n      },\n    } = this\n\n    let suggestionsListComponent\n\n    if (showSuggestions && userInput) {\n      if (filteredSuggestions.length) {\n        suggestionsListComponent = (\n          <ul class='suggestions'>\n            {filteredSuggestions.map((suggestion, index) => {\n              let className\n\n              // Flag the active suggestion with a class\n              if (index === activeSuggestion) {\n                className = 'suggestion-active'\n              }\n\n              return (\n                <li className={className} key={suggestion} onClick={onClick}>\n                  {suggestion}\n                </li>\n              )\n            })}\n          </ul>\n        )\n      } else {\n        suggestionsListComponent = (\n          <div class='no-suggestions'>\n            <em>No community matches your search.</em>\n          </div>\n        )\n      }\n    }\n\n    return (\n      <Fragment>\n        <input\n          class='autocomplete'\n          type='text'\n          onChange={onChange}\n          onKeyDown={onKeyDown}\n          value={userInput}\n        />\n        {suggestionsListComponent}\n      </Fragment>\n    )\n  }\n}\n\nexport default Autocomplete\n","import React from 'react'\nimport { Checkbox } from 'react-bulma-components/lib/components/form'\n\nconst CheckboxTermofUse = () => (\n    <div style={{ display: 'flex', justifyContent: 'flex-start' }}>\n        <Checkbox style={{ marginRight: '10px' }} />\n        <p>I have agreed to the <a target=\"_blank\" href='https://lotsahelpinghands.com/terms/'>Terms of Use</a>.</p>\n    </div>  \n)\n\nexport default CheckboxTermofUse","import React, { useState, useEffect } from 'react'\nimport countryList from 'react-select-country-list'\nimport { useHistory } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport axios from 'axios'\n\nimport Container from 'react-bulma-components/lib/components/container'\nimport Heading from 'react-bulma-components/lib/components/heading'\nimport Columns from 'react-bulma-components/lib/components/columns'\nimport Button from 'react-bulma-components/lib/components/button'\nimport Notification from 'react-bulma-components/lib/components/notification'\nimport {\n  Field,\n  Control,\n  Input,\n  Select,\n  Label,\n} from 'react-bulma-components/lib/components/form'\nimport Autocomplete from '../components/autocomplete'\n\nimport CheckboxTermofUse from '../components/checkboxTermofUse'\n\nexport default function Register(props) {\n  // Non-bulma styles\n  var containerStyle = {\n    margin: '5% auto',\n    maxWidth: '700px',\n    padding: '4rem',\n    border: '0.1rem solid #E5E5E5',\n    borderRadius: '1rem',\n  }\n  var notifStyle = {\n    backgroundColor: 'white',\n    padding: '.25rem .5rem .25rem .5rem',\n    marginTop: '10px',\n    textAlign: 'center',\n  }\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [addressLine1, setAddressLine1] = useState('')\n  const [addressLine2, setAddressLine2] = useState('')\n  const [city, setCity] = useState('')\n  const [country, setCountry] = useState('United States')\n  const [state, setState] = useState('')\n  const [zipcode, setZipcode] = useState('')\n  const [phoneNumber1, setPhoneNumber1] = useState('')\n  const [phoneNumber1Type, setPhoneNumber1Type] = useState('Mobile')\n  const [phoneNumber2, setPhoneNumber2] = useState('')\n  const [phoneNumber2Type, setPhoneNumber2Type] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmEmail, setConfirmEmail] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [who, setWho] = useState('') // Automatically join this person's community when user logs in\n  const [howLearn, setHowLearn] = useState('')\n  const [howHelp, setHowHelp] = useState('')\n  const [howKnow, setHowKnow] = useState('')\n  const [skillsToOffer, setSkillsToOffer] = useState('')\n  const [validForm, setValidForm] = useState(false)\n  const [communities, setCommunities] = useState([])\n\n  let history = useHistory()\n\n  useEffect(() => {\n    const formValues = [\n      firstName,\n      lastName,\n      addressLine1,\n      city,\n      country,\n      state,\n      zipcode,\n      phoneNumber1,\n      phoneNumber1Type,\n      who,\n      howKnow,\n      email,\n      password,\n      confirmEmail,\n      confirmPassword,\n      howLearn,\n    ]\n    const notValidForm =\n      formValues.some((formVal) => {\n        return formVal === ''\n      }) ||\n      formValues.some((formVal) => {\n        return formVal === 'Please select an option'\n      }) ||\n      email !== confirmEmail ||\n      password !== confirmPassword\n    setValidForm(notValidForm)\n  }, [\n    firstName,\n    lastName,\n    addressLine1,\n    city,\n    country,\n    state,\n    zipcode,\n    phoneNumber1,\n    phoneNumber1Type,\n    who,\n    howKnow,\n    email,\n    password,\n    confirmEmail,\n    confirmPassword,\n    howLearn,\n  ])\n\n  // If token is verified, logs the user in and add them to the community they chose to join\n  useEffect(() => {\n    if (\n      localStorage.getItem('token') &&\n      localStorage.getItem('token') !== 'undefined' &&\n      localStorage.getItem('token') !== undefined\n    ) {\n      var formdata = new FormData()\n      formdata.append('community', who)\n      formdata.append('user', email)\n      formdata.append('role', 'COMM_MEMBER')\n\n      var requestOptions = {\n        method: 'POST',\n        body: formdata,\n        redirect: 'follow',\n      }\n\n      fetch(\n        process.env.REACT_APP_API_URL + '/community-role-register/',\n        requestOptions\n      )\n        .then((response) => response.text())\n        .then((result) => history.push('/my-communities'))\n        .catch((error) => console.log('error', error))\n    }\n  })\n\n  // Get communities without token for the \"who would you like to help?\" field\n  useEffect(() => {\n    axios.get('/communities/').then((response) => {\n      let suggestedCommunities = []\n      for(var i = 0; i < response.data.length; i++) {\n        suggestedCommunities.push(response.data[i].name)\n      }\n      setCommunities(suggestedCommunities)\n    })\n  }, [])\n\n  return (\n    <Container style={containerStyle}>\n      <Heading size={4}>Join a Care Community</Heading>\n      <Heading size={6}>Basic Information</Heading>\n      <Columns>\n        <Columns.Column>\n          <Field>\n            <Control>\n              <Input\n                value={firstName}\n                onChange={(e) => setFirstName(e.target.value)}\n                placeholder='First Name*'\n              />\n            </Control>\n          </Field>\n        </Columns.Column>\n        <Columns.Column>\n          <Field>\n            <Control>\n              <Input\n                value={lastName}\n                onChange={(e) => setLastName(e.target.value)}\n                placeholder='Last Name*'\n              />\n            </Control>\n          </Field>\n        </Columns.Column>\n      </Columns>\n      <Field>\n        <Control>\n          <Input\n            value={addressLine1}\n            onChange={(e) => setAddressLine1(e.target.value)}\n            placeholder='Address Line 1*'\n          />\n        </Control>\n      </Field>\n      <Field>\n        <Control>\n          <Input\n            value={addressLine2}\n            onChange={(e) => setAddressLine2(e.target.value)}\n            placeholder='Address Line 2'\n          />\n        </Control>\n      </Field>\n      <Columns>\n        <Columns.Column>\n          <Field>\n            <Input\n              value={city}\n              onChange={(e) => setCity(e.target.value)}\n              placeholder='City*'\n            />\n          </Field>\n        </Columns.Column>\n        <Columns.Column>\n          <Select\n            name='country'\n            value={country}\n            onChange={(e) => setCountry(e.target.value)}\n          >\n            {countryList()\n              .getLabels()\n              .map((c) => (\n                <option style={{ position: 'static' }} value={c}>\n                  {c}\n                </option>\n              ))}\n          </Select>\n        </Columns.Column>\n      </Columns>\n      <Columns>\n        <Columns.Column>\n          <Field>\n            <Control>\n              <Input\n                value={state}\n                onChange={(e) => setState(e.target.value)}\n                placeholder='State*'\n              />\n            </Control>\n          </Field>\n        </Columns.Column>\n        <Columns.Column>\n          <Field>\n            <Control>\n              <Input\n                value={zipcode}\n                onChange={(e) => setZipcode(e.target.value)}\n                placeholder='Zip Code*'\n              />\n            </Control>\n          </Field>\n        </Columns.Column>\n      </Columns>\n\n      <Columns>\n        <Columns.Column>\n          <Field>\n            <Control>\n              <Input\n                value={phoneNumber1}\n                onChange={(e) => setPhoneNumber1(e.target.value)}\n                placeholder='Primary Phone Number*'\n              />\n            </Control>\n          </Field>\n        </Columns.Column>\n        <Columns.Column>\n          <Field>\n            <Control>\n              <Select\n                onChange={(e) => setPhoneNumber1Type(e.target.value)}\n                name='phoneNumber1Type'\n                value={phoneNumber1Type}\n              >\n                <option>Mobile</option>\n                <option>Home</option>\n                <option>Work</option>\n              </Select>\n            </Control>\n          </Field>\n        </Columns.Column>\n      </Columns>\n\n      <Columns>\n        <Columns.Column>\n          <Field>\n            <Control>\n              <Input\n                value={phoneNumber2}\n                onChange={(e) => setPhoneNumber2(e.target.value)}\n                placeholder='Secondary Phone Number'\n              />\n            </Control>\n          </Field>\n        </Columns.Column>\n        <Columns.Column>\n          <Field>\n            <Control>\n              <Select\n                onChange={(e) => setPhoneNumber2Type(e.target.value)}\n                name='phoneNumber2Type'\n                value={phoneNumber2Type}\n              >\n                <option></option>\n                <option>Mobile</option>\n                <option>Home</option>\n                <option>Work</option>\n              </Select>\n            </Control>\n          </Field>\n        </Columns.Column>\n      </Columns>\n\n      <Heading size={6} style={{ marginTop: '5%' }}>\n        Community Information\n      </Heading>\n      <Field>\n        <p>\n          <strong>\n            Who would you like to help?\n            <span style={{ color: '#F83D34' }}>*</span>\n          </strong>\n        </p>\n        <Autocomplete suggestions={communities} set_who={setWho} />\n      </Field>\n      <Field>\n        <Label>\n          How did you know this person?\n          <span style={{ color: '#F83D34' }}>*</span>\n        </Label>\n        <Control>\n          <Select\n            onChange={(e) => setHowKnow(e.target.value)}\n            name='howKnow'\n            value={howKnow}\n          >\n            <option>Please select an option</option>\n            <option>Family</option>\n            <option>Friend</option>\n            <option>Friend of a friend</option>\n            <option>Coworker</option>\n            <option>Attend the same school</option>\n            <option>Neighbor</option>\n            <option>Social Media</option>\n            <option>Worship together</option>\n            <option>Do not personally know</option>\n          </Select>\n        </Control>\n      </Field>\n      <Field>\n        <Label>How would you like to help?</Label>\n        <Control>\n          <Select\n            onChange={(e) => setHowHelp(e.target.value)}\n            name='howHelp'\n            value={howHelp}\n          >\n            <option></option>\n            <option>As an individual volunteer</option>\n            <option>Through my house of worship</option>\n            <option>\n              Through a volunteer organization that I am a member of\n            </option>\n          </Select>\n        </Control>\n      </Field>\n      <Field>\n        <Label>What skill can you offer?</Label>\n        <Control>\n          <Select\n            onChange={(e) => setSkillsToOffer(e.target.value)}\n            name='skillsToOffer'\n            value={skillsToOffer}\n          >\n            <option></option>\n            <option>\n              Cared for someone with a life-threatening health crisis\n            </option>\n            <option>I have had a life-threatening health crisis</option>\n            <option>Healthcare provider</option>\n            <option>Computer, technology, and social media</option>\n            <option>Accounting, financial services</option>\n            <option>Provide licensed child care</option>\n            <option>Legal, attorney</option>\n            <option>Counseling</option>\n            <option>Skilled in complex health insurance issues</option>\n            <option>Other</option>\n          </Select>\n        </Control>\n      </Field>\n      <Heading size={6} style={{ marginTop: '5%' }}>\n        Login Information\n      </Heading>\n      <Field>\n        <Control>\n          <Input\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder='Email*'\n          />\n        </Control>\n      </Field>\n      <Field>\n        <Control>\n          <Input\n            value={confirmEmail}\n            onChange={(e) => setConfirmEmail(e.target.value)}\n            placeholder='Confirm Email*'\n          />\n        </Control>\n      </Field>\n      <Columns>\n        <Columns.Column>\n          <Field>\n            <Control>\n              <Input\n                value={password}\n                type='password'\n                onChange={(e) => setPassword(e.target.value)}\n                placeholder='Password*'\n                type='password'\n              />\n            </Control>\n          </Field>\n        </Columns.Column>\n        <Columns.Column>\n          <Field>\n            <Control>\n              <Input\n                value={confirmPassword}\n                type='password'\n                onChange={(e) => setConfirmPassword(e.target.value)}\n                placeholder='Confirm Password*'\n                type='password'\n              />\n            </Control>\n          </Field>\n        </Columns.Column>\n      </Columns>\n      <Field>\n        <Label>\n          How did you learn about us?<span style={{ color: '#F83D34' }}>*</span>\n        </Label>\n        <Select\n          name='How Learn'\n          value={howLearn}\n          onChange={(e) => setHowLearn(e.target.value)}\n        >\n          <option>Please select an option</option>\n          <option>Social Media</option>\n          <option>Friend or Family</option>\n          <option>Here to Serve Website</option>\n          <option>Employer</option>\n          <option>Google Search</option>\n          <option>Other</option>\n        </Select>\n      </Field>\n      <CheckboxTermofUse />\n      <Button\n        style={{ marginTop: '1rem' }}\n        color='primary'\n        fullwidth={true}\n        disabled={validForm}\n        onClick={() =>\n          props.handle_signup(\n            email,\n            password,\n            firstName,\n            lastName,\n            addressLine1,\n            addressLine2,\n            city,\n            country,\n            state,\n            zipcode,\n            phoneNumber1,\n            phoneNumber1Type,\n            phoneNumber2,\n            phoneNumber2Type,\n            howLearn,\n            who,\n            howHelp,\n            howKnow,\n            skillsToOffer\n          )\n        }\n      >\n        CREATE ACCOUNT\n      </Button>\n      <Notification style={notifStyle}>\n        Already have an account? <a href='/login'>Log in here.</a>\n      </Notification>\n    </Container>\n  )\n}\n\nRegister.propTypes = {\n  handle_signup: PropTypes.func.isRequired,\n  logged_in: PropTypes.bool.isRequired,\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Image from 'react-bulma-components/lib/components/image'\n\nconst Card = styled.div`\n  border-radius: 10px;\n  height: 300px;\n  background-color: #2c8595;\n  overflow: hidden;\n  box-shadow: 1px 1px 2px 2px rgba(0, 0, 0, 0.1);\n  &:hover {\n    box-shadow: 1px 1px 10px 2px rgba(0, 0, 0, 0.2);\n    transition-duration: 0.5s;\n  }\n`\n\nconst CommunityLabel = styled.div`\n  display: flex;\n  width: 100%;\n  height: 20%;\n  text-align: center;\n  background-color: white;\n`\n\nconst CommunityCard = ({ text, photo }) => (\n  <Card\n    style={{\n      backgroundImage: 'url(' + photo + ')',\n      backgroundPosition: 'center',\n      backgroundSize: 'cover',\n      backgroundRepeat: 'no-repeat',\n    }}\n  >\n    <div style={{ width: '100%', height: '80%' }}></div>\n    <CommunityLabel>\n      <p style={{ margin: 'auto' }}>{text}</p>\n    </CommunityLabel>\n  </Card>\n)\n\nexport default CommunityCard\n","import React, { useEffect, useState, useCallback } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\nimport { Input } from 'react-bulma-components/lib/components/form'\nimport Container from 'react-bulma-components/lib/components/container'\nimport Heading from 'react-bulma-components/lib/components/heading'\nimport Progress from 'react-bulma-components/lib/components/progress'\nimport Columns from 'react-bulma-components/lib/components/columns'\nimport Button from 'react-bulma-components/lib/components/button'\nimport CommunityCard from '../components/communitycard'\n\nimport ApprovalCover from '../images/waiting_approval.png'\n\nexport default function MyCommunities() {\n  const [communities, setCommunities] = useState([])\n  const [search, setSearch] = useState('')\n  const [approvedCommunityIds, setApprovedCommunityIds] = useState([])\n  const token = localStorage.getItem('token')\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    setLoading(true)\n    axios\n      .get('/community/', {\n        headers: {\n          Authorization: `JWT ${token}`,\n        },\n      })\n      .then(\n        (response) => {\n          setCommunities(response.data)\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n    setLoading(false)\n  }, [])\n\n  useEffect(() => {\n    axios\n      .get('/community-user-roles-one-user/', {\n        headers: {\n          Authorization: `JWT ${token}`,\n        },\n        params: {\n          user_email: localStorage.getItem('email'),\n        },\n      })\n      .then(\n        (response) => {\n          let approvedCommunities = []\n          for (var i = 0; i < response.data.length; i++) {\n            if (response.data[i].is_approved) {\n              approvedCommunities.push(response.data[i].community)\n            }\n          }\n          setApprovedCommunityIds(approvedCommunities)\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [])\n\n  const setCommunityInfoInLocalStorage = useCallback(\n    (name, zipcode, is_closed, id) => {\n      localStorage.setItem('community-name', name)\n      localStorage.setItem('community-zipcode', zipcode)\n      localStorage.setItem('community-is-closed', is_closed)\n      localStorage.setItem('community-id', id)\n    },\n    []\n  )\n\n  const containerStyle = {\n    margin: '5% auto',\n    minHeight: '600px',\n  }\n\n  var noteStyle = {\n    color: '#E5E5E5',\n    fontStyle: 'italic',\n    margin: '15px',\n  }\n\n  return (\n    <Container style={containerStyle}>\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <Heading size={4}>My Communities</Heading>\n        <div style={{ display: 'flex' }}>\n          {localStorage.getItem('is-staff') !== 'true' ? (\n            <Button color='primary' style={{ marginRight: '10px' }}>\n              <Link to='/select-communities' style={{ color: 'white' }}>\n                Join\n              </Link>\n            </Button>\n          ) : (\n            <></>\n          )}\n        </div>\n      </div>\n      <Columns>\n        <Columns.Column>\n          <Input\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n            placeholder='Search Communities'\n          />\n        </Columns.Column>\n      </Columns>\n      <Progress color='primary' size='small' hidden={!loading} />\n      <Columns isMultiline={true}>\n        {communities.filter(\n          (c) =>\n            search === '' || c.name.toLowerCase().includes(search.toLowerCase())\n        ).length > 0 ? (\n          communities\n            .filter(\n              (c) =>\n                search === '' ||\n                c.name.toLowerCase().includes(search.toLowerCase())\n            )\n            .map((c) => (\n              <Columns.Column size={3} key={c.id}>\n                {approvedCommunityIds.includes(c.id) ? (\n                  <Link\n                    to={{\n                      pathname: '/community-home/',\n                      state: {\n                        name: c.name,\n                        zipcode: c.zipcode,\n                        is_closed: c.is_closed,\n                      },\n                    }}\n                    onClick={() =>\n                      setCommunityInfoInLocalStorage(\n                        c.name,\n                        c.zipcode,\n                        c.is_closed,\n                        c.id\n                      )\n                    }\n                    style={{ color: 'black' }}\n                  >\n                    <CommunityCard text={c.name} photo={c.photo_file} />\n                  </Link>\n                ) : (\n                  <CommunityCard text={c.name} photo={ApprovalCover} />\n                )}\n              </Columns.Column>\n            ))\n        ) : (\n          <p className='has-text-grey-light' style={noteStyle}>\n            No communities match this search. Click 'Add' to request to join\n            more communities.\n          </p>\n        )}\n      </Columns>\n    </Container>\n  )\n}\n","import React, { useState, useEffect, useCallback } from \"react\"\nimport axios from 'axios'\nimport { useHistory } from 'react-router-dom'\nimport Container from 'react-bulma-components/lib/components/container'\nimport Heading from 'react-bulma-components/lib/components/heading'\nimport Button from 'react-bulma-components/lib/components/button'\nimport Table from 'react-bulma-components/lib/components/table'\nimport { Radio } from 'react-bulma-components/lib/components/form'\n\n\nexport default function JoinCommunities() {\n  // Non-bulma styles\n  var containerStyle = {\n    margin: '5% auto',\n    maxWidth: '800px',\n    maxHeight: '1000px',\n    padding: '4rem',\n    border: '0.1rem solid #E5E5E5',\n    borderRadius: '1rem'\n  }\n  const [newCommunities, setNewCommunities] = useState([])\n  const [myCommunities, setMyCommunities] = useState([])\n  const token = localStorage.getItem('token')\n  const [selectedId, setSelectedId] = useState('')\n  let history = useHistory()\n\n  //adds volunteer to community\n  const addVolunteer = useCallback(() => {\n    const param = JSON.stringify({\n      community: parseInt(selectedId),\n      user: localStorage.getItem('email'),\n    })\n\n    axios\n      .post('/add-volunteer-to-community/', param, {\n        headers: {\n          Authorization: `JWT ${token}`,\n          'Content-Type': 'application/json',\n        },\n      })\n      .then(\n        (response) => {\n          history.push('/my-communities')\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [selectedId, token])\n\n  // Get all communities\n  useEffect(() => {\n    axios.get('/communities/')\n      .then((response) => {\n        setNewCommunities(Array.from(response.data))\n      })\n  }, [])\n\n  // Get communities user is in \n  useEffect(() => {\n    axios\n      .get('/community/', {\n        headers: {\n          Authorization: `JWT ${token}`,\n        },\n      })\n      .then(\n        (response) => {\n          let communitiesUserIsIn = []\n          for(var i = 0; i < response.data.length; i++) {\n            communitiesUserIsIn.push(response.data[i].id)\n          }\n          setMyCommunities(communitiesUserIsIn)\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [])\n\n  return (\n    <Container style={containerStyle}>\n      <Heading size={4}>Join Communities</Heading>\n      <Table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {newCommunities.map((c) => (\n            !myCommunities.includes(c.id) &&\n            (<tr>\n              <td>{c.name}</td>\n              <td>\n                <Radio\n                  onChange={(e) => {\n                    setSelectedId(e.target.value)\n                  }}\n                  checked={selectedId === String(c.id)}\n                  value={String(c.id)}\n                  name=\"community\"\n                />\n              </td>\n            </tr>)\n          ))}\n        </tbody>\n      </Table>\n      \n      <Button onClick={() => addVolunteer()} style={{ marginTop: '1rem', marginBottom: '1rem' }}\n        color='primary' fullwidth={true}>\n        JOIN SELECTED COMMUNITY\n      </Button>\n    </Container>\n  )\n}","\nimport React from 'react'\nimport { Checkbox } from 'react-bulma-components/lib/components/form'\n\nconst CheckboxField = ({ text, onChange, checked }) => (\n    <div style={{ display: 'flex', justifyContent: 'flex-start' }}>\n      <Checkbox style={{ marginRight: '10px' }} onChange={onChange} checked={checked}/>\n      <p>{text}</p>\n    </div>\n)\n\nexport default CheckboxField\n  ","import React, { useState, useCallback } from 'react'\nimport countryList from 'react-select-country-list'\nimport { useHistory } from 'react-router-dom'\n\nimport {\n  Field,\n  Control,\n  Input,\n  Select,\n  Textarea,\n  Checkbox,\n  Label,\n  InputFile\n} from 'react-bulma-components/lib/components/form'\nimport Button from 'react-bulma-components/lib/components/button'\nimport Container from 'react-bulma-components/lib/components/container'\nimport Heading from 'react-bulma-components/lib/components/heading'\nimport Columns from 'react-bulma-components/lib/components/columns'\nimport Notification from 'react-bulma-components/lib/components/notification'\nimport Image from 'react-bulma-components/lib/components/image';\nimport Icon from 'react-bulma-components/lib/components/icon';\n\nimport CheckboxField from '../components/checkboxfield'\nimport CheckboxTermofUse from '../components/checkboxTermofUse'\n\nexport default function CreateCommunity() {\n  // Non-bulma styles\n  var containerStyle = {\n    margin: '5% auto',\n    maxWidth: '700px',\n    padding: '4rem',\n    border: '0.1rem solid #E5E5E5',\n    borderRadius: '1rem',\n  }\n  var noteStyle = {\n    color: '#E5E5E5',\n    fontSize: '0.75rem',\n    fontStyle: 'italic',\n  }\n  const [name, setName] = useState('')\n  const [description, setDescription] = useState('')\n  const [zipcode, setZipcode] = useState('')\n  const [country, setCountry] = useState('United States')\n  const [isClosed, setIsClosed] = useState(false)\n  const [photoFile, setPhotoFile] = useState('')\n  const [photoURL, setPhotoURL] = useState('')\n\n  let history = useHistory()\n\n\n  const handleSubmit = useCallback((name, description, zipcode, country, isClosed, photoFile) => {\n    // First add the community to database\n    var url = '/community/'\n    var myHeaders = new Headers()\n    myHeaders.append('Authorization', `JWT ${localStorage.getItem('token')}`)\n\n    var formdata = new FormData()\n    formdata.append('name', name)\n    formdata.append('description', description)\n    formdata.append('zipcode', zipcode)\n    formdata.append('country', country)\n    formdata.append('photo_file', photoFile)\n    formdata.append('is_closed', isClosed)\n\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: formdata,\n      redirect: 'follow',\n    }\n\n    fetch(url, requestOptions)\n      .then((response) => \n    {\n      //After user creates the community, they are added as a community leader\n      var formdata = new FormData()\n      formdata.append('community', name)\n      formdata.append('user', localStorage.getItem('email'))\n      formdata.append('role', 'ADMIN')\n      formdata.append('is_approved', true)\n\n      var requestOptions = {\n        method: 'POST',\n        body: formdata,\n        redirect: 'follow',\n      }\n\n      fetch(process.env.REACT_APP_API_URL + '/community-role-register/', requestOptions)\n        .then((response) => response.text())\n        .then((result) => history.push('/my-communities'))\n        .catch((error) => console.log('error', error))})\n      .then((result) => {\n        history.push('/my-communities')\n      })\n      .catch((error) => console.log('error', error))\n\n  }, [name, description, zipcode, country, isClosed, photoFile])\n\n  return (\n    <Container style={containerStyle}>\n      <Heading size={4}>Create New Community</Heading>\n      <Heading size={6}>Basic Information</Heading>\n      <Field>\n        <Control>\n          <Input\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            placeholder='Community Name'\n          />\n        </Control>\n      </Field>\n      <Field>\n        <Textarea\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          placeholder='Community Description'\n        />\n      </Field>\n      <Field>\n        <Columns>\n          <Columns.Column>\n            <Field>\n              <Input\n                value={zipcode}\n                onChange={(e) => setZipcode(e.target.value)}\n                placeholder='Zip Code'\n              />\n            </Field>\n          </Columns.Column>\n          <Columns.Column>\n            <Select\n              name='country'\n              value={country}\n              onChange={(e) => setCountry(e.target.value)}\n            >\n              {countryList()\n                .getLabels()\n                .map((c) => (\n                  <option style={{ position: 'static' }} value={c}>\n                    {c}\n                  </option>\n                ))}\n            </Select>\n          </Columns.Column>\n        </Columns>\n      </Field>\n      <p className='has-text-grey-light' style={noteStyle}>\n        The zip code should be the location of the community, not necessarily\n        where the caregiver lives.\n      </p>\n\n      <Label>\n        Homepage Photo\n      </Label>\n      <div style={{ width: 320, marginBottom: '3%' }}>\n        <Field>\n          <Control>\n            <InputFile\n              value={photoFile}\n              icon={<Icon icon='upload' />}\n              onChange={(e) => {\n                setPhotoURL(URL.createObjectURL(e.target.files[0]))\n                setPhotoFile(e.target.files[0])\n              }}\n            />\n          </Control>\n        </Field>\n        {photoURL === '' ? \n          <></> \n          : \n          <Image\n            src={photoURL}\n          />\n        }\n      </div>\n\n      <br />\n      <Field className='has-text-grey'>\n        <div style={{ display: 'flex', justifyContent: 'flex-start' }}>\n          <Checkbox\n            style={{ marginRight: '10px' }}\n            onChange={(e) => setIsClosed(!e.target.checked)}\n          />\n          <p>\n            Allow friends and family to find this community by name and/or\n            postal code.\n          </p>\n        </div>\n        <CheckboxField text={'Allow all members to send invitations.'} />\n        <CheckboxTermofUse />\n      </Field>\n      <Button\n        onClick={() => handleSubmit(name, description, zipcode, country, isClosed, photoFile)}\n        style={{ marginTop: '1rem', marginBottom: '1rem' }}\n        color='primary'\n        fullwidth={true}\n      >\n        CREATE COMMUNITY\n      </Button>\n      <Notification className='has-text-grey'>\n        <a href='#'>Click here</a> to find and join existing communities.\n      </Notification>\n    </Container>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport {\n  Field,\n  Input,\n  Control,\n} from 'react-bulma-components/lib/components/form'\nimport Button from 'react-bulma-components/lib/components/button'\nimport Container from 'react-bulma-components/lib/components/container'\nimport Heading from 'react-bulma-components/lib/components/heading'\nimport Notification from 'react-bulma-components/lib/components/notification'\n\nimport CheckboxField from '../components/checkboxfield'\n\nexport default function Login(props) {\n  // Non-bulma styles\n  var containerStyle = {\n    margin: '5% auto',\n    maxWidth: '450px',\n    padding: '4rem',\n    border: '0.1rem solid #E5E5E5',\n    borderRadius: '1rem',\n  }\n  var notifStyle = {\n    backgroundColor: 'white',\n    padding: '.25rem .5rem .25rem .5rem',\n  }\n\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [rememberMe, setRememberMe] = useState(false)\n  const [validForm, setValidForm] = useState(false)\n  const [invalid, setInvalid] = useState(false)\n\n  let history = useHistory()\n  useEffect(() => {\n    if (\n      localStorage.getItem('token') &&\n      localStorage.getItem('token') !== 'undefined' &&\n      localStorage.getItem('token') !== undefined\n    ) {\n      history.push('/my-communities')\n    }\n  })\n\n  function handleRememberMe() {\n    setRememberMe(!rememberMe)\n  }\n\n  useEffect(() => {\n    const formValues = [email, password]\n    const notValidForm = formValues.some((formVal) => {\n      return formVal === ''\n    })\n    setValidForm(notValidForm)\n  }, [email, password])\n\n  return (\n    <Container style={containerStyle}>\n      <Heading size={4}>Log in to Here to Serve</Heading>\n      <Field>\n        <Control>\n          <Input\n            value={email}\n            type='email'\n            placeholder='Email Address'\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Control>\n      </Field>\n\n      <Field>\n        <Input\n          value={password}\n          type='password'\n          placeholder='Password'\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </Field>\n      <Field>\n        <CheckboxField text={'Remember me'} onChange={handleRememberMe} />\n      </Field>\n      <Button\n        style={{ marginBottom: '1rem' }}\n        color='primary'\n        fullwidth={true}\n        onClick={() => props.handle_login(email, password, rememberMe)}\n        disabled={validForm}\n      >\n        LOGIN\n      </Button>\n      <div class='notification is-danger' hidden={!invalid}>\n        Incorrect username or password.\n      </div>\n      <Notification style={notifStyle}>\n        <a href='/forgot-password'>Forgot Password?</a> or{' '}\n        <Link to='/register'>Create Account</Link>\n      </Notification>\n    </Container>\n  )\n}\n\nLogin.propTypes = {\n  handle_login: PropTypes.func.isRequired,\n  logged_in: PropTypes.bool.isRequired,\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport Button from 'react-bulma-components/lib/components/button'\nimport Columns from 'react-bulma-components/lib/components/columns'\n\nconst Bar = styled.div`\n  background-color: #2c8595;\n  z-index: -1;\n  padding: 0 5%;\n`\n\nconst links = [\n  ['About', '/about'],\n  ['Calendar', '/calendar'],\n  ['Family Updates', '/announcements'],\n  ['Ways to Help', '/ways-to-help'],\n  ['Message Board', '/message-board'],\n  ['Photo Gallery', '/photo-gallery'],\n  ['Well Wishes', '/well-wishes'],\n  ['People', '/community-people'],\n]\n\nconst activeLink = 'Home'\n\nconst CommunityNavbar = () => {\n  return (\n    <Bar>\n      <Columns isMultiline={true}>\n        <Columns.Column\n          size={3}\n          style={{\n            display: 'flex',\n            justifyContent: 'space-around',\n            overflow: 'auto',\n            whiteSpace: 'nowrap',\n          }}\n        >\n          <Link to='/community-home'>\n            <Button className='is-small is-primary'>\n              <strong style={{ fontSize: '1.6em' }}>\n                {localStorage.getItem('community-name')}\n              </strong>\n            </Button>\n          </Link>\n        </Columns.Column>\n        <Columns.Column style={{ overflow: 'auto', whiteSpace: 'nowrap' }}>\n          {links.map((title) => (\n            <Link to={title[1]}>\n              <Button\n                className={\n                  title === activeLink\n                    ? 'is-small is-primary is-active'\n                    : 'is-small is-primary'\n                }\n              >\n                <strong>{title[0]}</strong>\n              </Button>\n            </Link>\n          ))}\n        </Columns.Column>\n      </Columns>\n    </Bar>\n  )\n}\n\nexport default CommunityNavbar\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nimport Container from 'react-bulma-components/lib/components/container'\nimport Heading from 'react-bulma-components/lib/components/heading'\n\nimport CommunityNavbar from '../components/communityNavbar'\n\nexport default function CommunityAbout() {\n  var containerStyle = {\n    margin: '5% auto',\n    maxWidth: '1050px',\n    maxHeight: '1000px',\n    padding: '4rem',\n    border: '0.1rem solid #E5E5E5',\n    borderRadius: '1rem',\n  }\n\n  const community = localStorage.getItem('community-name')\n  const [description, setDescription] = useState()\n\n  useEffect(() => {\n    axios\n      .get('/one-community/', {\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('token')}`,\n        },\n        params: {\n          pk: localStorage.getItem('community-id'),\n        },\n      })\n      .then(\n        (response) => {\n          setDescription(response.data[0].description)\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [])\n\n  return (\n    <div>\n      <CommunityNavbar />\n      <Container style={containerStyle}>\n        <Heading size={4}>About {community}</Heading>\n        <p>{description}</p>\n        <Heading size={4} style={{ marginTop: '5%' }}>\n          About Here to Serve\n        </Heading>\n        <strong>Our Mission</strong>\n        <p style={{ marginBottom: '2%' }}>\n          Here to Serve calls all members of the community to carry the burdens\n          of individuals, families and their caregivers who face\n          life-threatening health crises.\n        </p>\n        <strong>Our Vision</strong>\n        <p>\n          Here to Serve envisions people inspired and mobilized to carry each\n          other’s burdens during times of crisis; where guidance and assistance\n          is not sought after, but offered by people and organizations\n          collaborating to compassionately respond to those navigating\n          life-threatening health crises. We see the plethora of service\n          organizations demystified and easily accessible, thereby easing the\n          journey of those in medical crisis.\n          <br />\n          <br />\n          Here to Serve believes in collaboration! We identify and help acquire\n          highly-personalized care services from other organizations for\n          individuals, families and their caregivers. Caregivers who manage\n          tragic health events often find it difficult to predict impending\n          needs. Here to Serve’s Care Coordinators help demystify assistance\n          programs, as well as intercede, navigate, encourage and provide\n          guidance with insurance, legal, government and other nonprofit\n          services. We engage the community of volunteers to provide assistance\n          with child care, meals, household chores, pet care and transportation.\n          <br />\n          <br />\n          Visit the Here to Serve home page:{' '}\n          <a href='https://www.heretoserve.org/' target='_blank'>\n            heretoserve.org\n          </a>\n          .\n        </p>\n      </Container>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Container from 'react-bulma-components/lib/components/container'\nimport Heading from 'react-bulma-components/lib/components/heading'\nimport Button from 'react-bulma-components/lib/components/button'\nimport Media from 'react-bulma-components/lib/components/media'\nimport Content from 'react-bulma-components/lib/components/content'\nimport Card from 'react-bulma-components/lib/components/card'\nimport Columns from 'react-bulma-components/lib/components/columns'\nimport styled from 'styled-components'\n\nimport families from '../images/families.png'\n\nconst Background = styled.div`\n  background-color: #addbe4;\n  height: 100%;\n  width: 100%;\n  position: absolute;\n`\nconst BackgroundWrapper = styled.div`\n  height: 100%;\n  width: 100%;\n  z-index: -1;\n`\n\nconst HighLight = styled.p`\n  color: #2c8595;\n  font-weight: 600;\n`\n\nconst ButtonBg = styled.div`\n  background-color: white;\n  border-radius: 5px;\n`\n\nconst Wave = styled.div`\n  & {\n    display: block;\n    position: relative;\n    height: 250px;\n    background: white;\n  }\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    border-radius: 100%;\n    width: 100%;\n    height: 300px;\n    background-color: #addbe4;\n    right: -25%;\n    top: 230px;\n  }\n  &:after {\n    content: '';\n    display: block;\n    position: absolute;\n    border-radius: 100%;\n    width: 100%;\n    height: 300px;\n    background-color: white;\n    left: -25%;\n    top: -30px;\n  }\n`\n\nconst WaveContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  position: absolute;\n`\n\nexport default function Welcome() {\n  const aboutCard = {\n    backgroundColor: 'white',\n    borderRadius: '10px',\n    margin: '5%',\n    padding: '1%',\n    boxShadow: '1px 1px 3px 2px rgba(0,0,0,0.25)',\n  }\n\n  return (\n    <div style={{ backgroundColor: '#addbe4', paddingBottom: '30px' }}>\n      <BackgroundWrapper>\n        <WaveContainer>\n          <Wave />\n        </WaveContainer>\n      </BackgroundWrapper>\n      <Container style={{ width: '90%' }}>\n        <Columns>\n          <Columns.Column size={4}>\n            <Container style={{ padding: '30% 0 0 20%' }}>\n              <Heading size={2}>\n                Join a <HighLight>care community</HighLight> today.\n              </Heading>\n              <br />\n              <Link to='/register'>\n                <Button\n                  style={{\n                    marginBottom: '1rem',\n                    boxShadow: '1px 1px 3px 2px rgba(0,0,0,0.1)',\n                  }}\n                  color='primary'\n                  fullwidth={true}\n                >\n                  JOIN\n                </Button>\n              </Link>\n              <ButtonBg>\n                <Link to='/login'>\n                  <Button\n                    style={{\n                      boxShadow: '1px 1px 3px 2px rgba(0,0,0,0.1)',\n                    }}\n                    fullwidth={true}\n                    outlined={true}\n                    color='primary'\n                  >\n                    LOGIN\n                  </Button>\n                </Link>\n              </ButtonBg>\n            </Container>\n          </Columns.Column>\n          <Columns.Column size={8}>\n            <Container style={{ marginTop: '2%' }}>\n              <img\n                src={families}\n                style={{\n                  height: 'auto',\n                  width: '1000px',\n                }}\n                alt='family'\n              ></img>\n            </Container>\n          </Columns.Column>\n        </Columns>\n      </Container>\n      <Container>\n        <Columns>\n          <Columns.Column>\n            <Container style={aboutCard}>\n              <Card.Content>\n                <Media>\n                  <Media.Item style={{ marginBottom: '5px' }}>\n                    <Heading size={4}>Our Mission</Heading>\n                  </Media.Item>\n                </Media>\n                <Content>\n                  We believe families with a critically-ill child should not\n                  have to lose their job, health, home or enter into bankruptcy\n                  to care for their child during a medical crisis. To help\n                  mitigate this, we mobilize people and resources to meet daily\n                  living requirements of families who do not qualify for\n                  government assistance.\n                </Content>\n              </Card.Content>\n            </Container>\n            <Container style={aboutCard}>\n              <Card.Content>\n                <Media>\n                  <Media.Item style={{ marginBottom: '5px' }}>\n                    <Heading size={4}>What We Do</Heading>\n                  </Media.Item>\n                </Media>\n                <Content>\n                  Here to Serve provides assistance to families caring for a\n                  child in a life-or-death health crisis such as childhood\n                  cancer, transplants, or critical conditions. We do this by:{' '}\n                  <ul>\n                    <li>\n                      Mobilizing people and resources to meet daily living\n                      requirements of families who do not qualify for government\n                      assistance.\n                    </li>\n                    <li>\n                      Building online communities of support, called Care\n                      Communities, that provide a network of services and\n                      financial assistance for families with a critically-ill\n                      child.\n                    </li>\n                  </ul>\n                </Content>\n              </Card.Content>\n            </Container>\n          </Columns.Column>\n          <Columns.Column>\n            <Container style={aboutCard}>\n              <Card.Content>\n                <Media>\n                  <Media.Item style={{ marginBottom: '5px' }}>\n                    <Heading size={4}>Our Vision</Heading>\n                  </Media.Item>\n                </Media>\n                <Content>\n                  Here to Serve envisions people inspired and mobilized to carry\n                  each other’s burdens during times of crisis, where guidance\n                  and assistance is offered freely as people and organizations\n                  collaborate to compassionately respond to those navigating\n                  life-threatening health crises. We seek to demystify the\n                  plethora of service organizations and to make them easily\n                  accessible, thereby easing the journey of those in medical\n                  crisis.\n                </Content>\n              </Card.Content>\n            </Container>\n            <Container style={aboutCard}>\n              <Card.Content>\n                <Media>\n                  <Media.Item style={{ marginBottom: '5px' }}>\n                    <Heading size={4}>Our Inspiration</Heading>\n                  </Media.Item>\n                </Media>\n                <Content>\n                  Here to Serve is dedicated to Silvio Quintas, Bryan Quintas,\n                  Phil Carlson and Paul Alindog who exhibited unimaginable\n                  courage, faith and dignity in their battles with cancer and\n                  are the inspiration for starting Here to Serve. Bryan Quintas\n                  won his battle with cancer. Silvio, Phil and Paul are home\n                  with the Lord. Because of these valiant warriors, Here to\n                  Serve strives to make a difference in the lives of\n                  individuals, families and their caregivers in medical crises.\n                </Content>\n              </Card.Content>\n            </Container>\n          </Columns.Column>\n        </Columns>\n      </Container>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport {\n  Field,\n  Input,\n  Control,\n} from 'react-bulma-components/lib/components/form'\nimport Button from 'react-bulma-components/lib/components/button'\nimport Container from 'react-bulma-components/lib/components/container'\nimport Heading from 'react-bulma-components/lib/components/heading'\nimport Notification from 'react-bulma-components/lib/components/notification'\n\nexport default function ForgotPassword(props) {\n  // Non-bulma styles\n  var containerStyle = {\n    margin: '5% auto',\n    maxWidth: '400px',\n    padding: '4rem',\n    border: '0.1rem solid #E5E5E5',\n    borderRadius: '1rem',\n  }\n  var notifStyle = {\n    backgroundColor: 'white',\n    padding: '.25rem .5rem .25rem .5rem',\n    textAlign: 'center',\n  }\n\n  const [email, setEmail] = useState('')\n\n  let history = useHistory()\n\n  useEffect(() => {\n    if (props.logged_in) {\n      history.push('/my-communities')\n    }\n  })\n  \n  return (\n    <Container style={containerStyle}>\n      <Heading size={4}>Forgot Password?</Heading>\n      <p className='has-text-grey-light'>\n        Enter your email address to be sent a password reset link.\n      </p>\n      <br />\n      <Field>\n        <Control>\n          <Input\n            value={email}\n            type='email'\n            placeholder='Email Address'\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Control>\n      </Field>\n      <Button\n        style={{ marginBottom: '1rem' }}\n        color='primary'\n        fullwidth={true}\n        onClick={() => {\n          props.handle_forgot_password(email);\n          history.push('/forgot-password-confirmation');\n        }}>\n        SEND\n      </Button>\n      <Notification style={notifStyle}>\n        <Link to='/login'>Back to Login</Link>\n      </Notification>\n    </Container>\n  )\n}\n\nForgotPassword.propTypes = {\n  logged_in: PropTypes.bool.isRequired,\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport {\n  Field,\n  Input,\n  Control,\n} from 'react-bulma-components/lib/components/form'\nimport Button from 'react-bulma-components/lib/components/button'\nimport Container from 'react-bulma-components/lib/components/container'\nimport Heading from 'react-bulma-components/lib/components/heading'\nimport axios from 'axios'\n\nexport default function ResetPassword(props) {\n  // Non-bulma styles\n  var containerStyle = {\n    margin: '5% auto',\n    maxWidth: '400px',\n    padding: '4rem',\n    border: '0.1rem solid #E5E5E5',\n    borderRadius: '1rem',\n  }\n\n  const [password, setPassword] = useState('')\n  const [passwordConfirm, setPasswordConfirm] = useState('')\n  const [token, setToken] = useState('')\n  const [uid, setUid] = useState('')\n  const [validForm, setValidForm] = useState(false)\n\n  let history = useHistory()\n  useEffect(() => {\n    if (props.logged_in) {\n      history.push('/my-communities')\n    }\n  })\n\n  // Parse the token and uid from the URL sent to user's email so that we can access the user in the backend\n  useEffect(() => {\n    var url = window.location.search\n    var uid = new URLSearchParams(url).get('uid')\n    var token = new URLSearchParams(url).get('token')\n    setToken(token)\n    setUid(uid)\n  }, [])\n\n  const handleChangePassword = useCallback((password, passwordConfirm, uid, token) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n        }\n      };\n      const body = JSON.stringify({ \n          new_password1: password,\n          new_password2: passwordConfirm,\n          uid: uid,\n          token: token,\n      })\n      axios.post('/reset-password/confirm/', body, config)\n      .then(\n        (response) => {\n          history.push('/reset-password-confirmation')\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [history])\n  \n\n  useEffect(() => {\n    const formValues = [\n      password,\n      passwordConfirm\n    ]\n    const notValidForm =\n      formValues.some((formVal) => {\n        return formVal === ''\n      }) ||\n      password !== passwordConfirm\n    setValidForm(notValidForm)\n  }, [password, passwordConfirm])\n\n  return (\n    <Container style={containerStyle}>\n      <Heading size={4}>Reset Password</Heading>\n      <p className='has-text-grey-light'>Enter new password to reset.</p>\n      <br />\n      <Field>\n        <Control>\n          <Input\n            value={password}\n            type='password'\n            placeholder='New Password'\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Control>\n      </Field>\n      <Field>\n        <Control>\n          <Input\n            value={passwordConfirm}\n            type='password'\n            placeholder='Confirm New Password'\n            onChange={(e) => setPasswordConfirm(e.target.value)}\n          />\n        </Control>\n      </Field>\n      <Button \n       style={{ marginBottom: '1rem' }} \n       color='primary' \n       fullwidth={true} \n       disabled={validForm}\n       onClick={() => handleChangePassword(password, passwordConfirm, uid, token)}\n      >\n        RESET\n      </Button>\n    </Container>\n  )\n}\n\nResetPassword.propTypes = {\n  logged_in: PropTypes.bool.isRequired,\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Menu from 'react-bulma-components/lib/components/menu';\n\nconst SideNavAccount = (props) => {\n  return (\n    <div>\n        <Menu color='white'>\n            <Menu.List>\n                <Menu.List.Item componentClass='span'>\n                    <Link to='/account-settings'>General Account Settings</Link>\n                </Menu.List.Item>\n                <Menu.List.Item to='/password-settings'>\n                  <Link to='/password-settings'>Password Settings</Link>\n                </Menu.List.Item>\n                <Menu.List.Item componentClass='span'>\n                  <Link to='/email-settings'>Email Settings</Link>\n                </Menu.List.Item>\n            </Menu.List>\n        </Menu>\n    </div>\n  )\n}\n\nexport default SideNavAccount\n","import React, { useState, useEffect, useCallback } from \"react\"\nimport countryList from 'react-select-country-list'\n\nimport Container from 'react-bulma-components/lib/components/container';\nimport Columns from 'react-bulma-components/lib/components/columns'\nimport Heading from 'react-bulma-components/lib/components/heading'\nimport Button from 'react-bulma-components/lib/components/button';\nimport {\n    Field,\n    Input,\n    Label,\n    Select\n} from 'react-bulma-components/lib/components/form'\n\nimport SideNavAccount from '../components/sideNavAccount'\n\nexport default function AccountSettings() {\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [email, setEmail] = useState('')\n    const [phone1, setPhone1] = useState('')\n    const [phone1Type, setPhone1Type] = useState('')\n    const [phone2, setPhone2] = useState('')\n    const [phone2Type, setPhone2Type] = useState('')\n    const [addressLine1, setAddressLine1] = useState('')\n    const [addressLine2, setAddressLine2] = useState('')\n    const [zipcode, setZipcode]  = useState('')\n    const [city, setCity] = useState('')\n    const [state, setState] = useState('')\n    const [country, setCountry] = useState('')\n    const [pk, setPk] = useState('')\n\n    var containerStyle = {\n        margin: '3% auto',\n        maxWidth: '80%',\n        padding: '4rem',\n    }\n\n    useEffect(() => {\n        if (localStorage.getItem('token')) {\n            fetch('/current_user/', {\n                headers: {\n                    Authorization: `JWT ${localStorage.getItem('token')}`\n                }\n            })\n                .then(res => res.json())\n                .then(json => {\n                    setFirstName(json.first_name)\n                    setLastName(json.last_name)\n                    setEmail(json.email)\n                    setPhone1(json.phone_number_1)\n                    setPhone1Type(json.phone_number_1_type)\n                    setPhone2(json.phone_number_2)\n                    setPhone2Type(json.phone_number_2_type)\n                    setAddressLine1(json.address_line_1)\n                    setAddressLine2(json.address_line_2)\n                    setCity(json.city)\n                    setCountry(json.country)\n                    setState(json.state)\n                    setZipcode(json.zipcode)\n                    setPk(json.id)\n                    localStorage.setItem('user-id', json.id)\n                })\n        }\n    }, [])\n\n    const editInformation = useCallback(() => {\n        // Edit user's information. First_name, last_name, and email are required. \n        var url = '/edit-user/' + pk + '/'\n        var myHeaders = new Headers()\n        myHeaders.append('Authorization', `JWT ${localStorage.getItem('token')}`)\n        myHeaders.append('id', pk)\n\n        var formdata = new FormData();\n        formdata.append('first_name', firstName)\n        formdata.append('last_name', lastName)\n        formdata.append('email', email)\n        formdata.append('phone_number_1', phone1)\n        formdata.append('phone_number_1_type', phone1Type)\n        formdata.append('phone_number_2', phone2)\n        formdata.append('phone_number_2_type', phone2Type)\n        formdata.append('address_line_1', addressLine1)\n        formdata.append('address_line_2', addressLine2)\n        formdata.append('city', city)\n        formdata.append('state', state)\n        formdata.append('zipcode', zipcode)\n        formdata.append('country', country)\n\n        var requestOptions = {\n            method: 'PUT',\n            headers: myHeaders,\n            body: formdata,\n            redirect: 'follow'\n        }\n\n        fetch(url, requestOptions)\n        .then(response => response.text())\n        .then(result => {\n            window.location.reload()\n        })\n        .catch(error => console.log('error', error))\n    }, \n    [\n        firstName,\n        lastName, \n        email, \n        phone1, \n        phone1Type, \n        phone2, \n        phone2Type, \n        addressLine1, \n        addressLine2, \n        city, \n        state, \n        zipcode, \n        country,\n        pk\n    ])\n\n\n    return (\n        <Container style={containerStyle}>\n            <Columns>\n                <Columns.Column style={{ maxWidth: '30%' }}>\n                    <SideNavAccount />\n                </Columns.Column>\n                <Columns.Column>\n\n                    {/* Account Information  */}\n                    <Heading size={4} style={{ marginBottom: '3%' }}>Account Information</Heading>\n                    <Columns>\n                        <Columns.Column>\n                            <Field>\n                                <Label>First Name<span style={{ color: '#F83D34' }}>*</span></Label>\n                                <Input\n                                    value={firstName}\n                                    onChange={(e) => setFirstName(e.target.value)}\n                                    placeholder={firstName}\n                                />\n                            </Field>\n                        </Columns.Column>\n                        <Columns.Column>\n                            <Field>\n                                <Label>Last Name<span style={{ color: '#F83D34' }}>*</span></Label>\n                                <Input\n                                    value={lastName}\n                                    onChange={(e) => setLastName(e.target.value)}\n                                    placeholder={lastName}\n                                />\n                            </Field>\n                        </Columns.Column>\n                        </Columns>\n                        <Field>\n                            <Label>Email<span style={{ color: '#F83D34' }}>*</span></Label>\n                            <Input\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                                placeholder={email}\n                            />\n                        </Field>  \n                        <Columns>\n                            <Columns.Column>\n                                <Field>\n                                    <Label>Primary Phone Number<span style={{ color: '#F83D34' }}>*</span></Label>\n                                    <Input\n                                        value={phone1}\n                                        onChange={(e) => setPhone1(e.target.value)}\n                                        placeholder={phone1}\n                                    />\n                                </Field>\n                            </Columns.Column>\n                            <Columns.Column>\n                                <Field>\n                                    <Label>Primary Phone Number Type<span style={{ color: '#F83D34' }}>*</span></Label>\n                                    <Select onChange={(e) => setPhone1Type(e.target.value)} value={phone1Type}>\n                                        <option>Mobile</option>\n                                        <option>Home</option>\n                                        <option>Work</option>\n                                    </Select>\n                                </Field>\n                            </Columns.Column>\n                        </Columns>      \n                        <Columns>\n                            <Columns.Column>\n                                <Field>\n                                    <Label>Secondary Phone Number</Label>\n                                    <Input\n                                        value={phone2}\n                                        onChange={(e) => setPhone2(e.target.value)}\n                                        placeholder={phone2}\n                                    />\n                                </Field>\n                            </Columns.Column>\n                            <Columns.Column>\n                                <Field>\n                                    <Label>Secondary Phone Number Type</Label>\n                                    <Select onChange={(e) => setPhone2Type(e.target.value)} value={phone2Type}>\n                                        <option></option>\n                                        <option>Mobile</option>\n                                        <option>Home</option>\n                                        <option>Work</option>\n                                    </Select>\n                                </Field>\n                            </Columns.Column>\n                        </Columns> \n                        <Columns>\n                            <Columns.Column>\n                                <Field>\n                                    <Label>Address Line 1<span style={{ color: '#F83D34' }}>*</span></Label>\n                                    <Input\n                                        value={addressLine1}\n                                        onChange={(e) => setAddressLine1(e.target.value)}\n                                        placeholder={addressLine1}\n                                    />\n                                </Field>\n                            </Columns.Column>\n                            <Columns.Column>\n                                <Field>\n                                    <Label>Address Line 2</Label>\n                                    <Input\n                                        value={addressLine2}\n                                        onChange={(e) => setAddressLine2(e.target.value)}\n                                        placeholder={addressLine2}\n                                    />\n                                </Field>\n                            </Columns.Column>\n                        </Columns> \n                        <Columns>\n                            <Columns.Column>\n                                <Field>\n                                    <Label>City<span style={{ color: '#F83D34' }}>*</span></Label>\n                                    <Input\n                                        value={city}\n                                        onChange={(e) => setCity(e.target.value)}\n                                        placeholder={city}\n                                    />\n                                </Field>\n                            </Columns.Column>\n                            <Columns.Column>\n                                <Field>\n                                    <Label>State<span style={{ color: '#F83D34' }}>*</span></Label>\n                                    <Input\n                                        value={state}\n                                        onChange={(e) => setState(e.target.value)}\n                                        placeholder={state}\n                                    />\n                                </Field>\n                            </Columns.Column>\n                            <Columns.Column>\n                                <Field>\n                                    <Label>Zipcode<span style={{ color: '#F83D34' }}>*</span></Label>\n                                    <Input\n                                        value={zipcode}\n                                        onChange={(e) => setZipcode(e.target.value)}\n                                        placeholder={zipcode}\n                                    />\n                                </Field>\n                            </Columns.Column>\n                        </Columns>\n                        <Field>\n                            <Label>Country<span style={{ color: '#F83D34' }}>*</span></Label>\n                            <Select onChange={(e) => setCountry(e.target.value)} value={country}>\n                                {countryList()\n                                    .getLabels()\n                                    .map((c) => (\n                                        <option style={{ position: 'static' }} value={c}>\n                                            {c}\n                                        </option>\n                                ))}\n                            </Select>\n                        </Field>\n                    <Button \n                        color=\"primary\" \n                        fullwidth={true} \n                        style={{maxWidth: '40%', marginTop: '8%'}} \n                        onClick={() => editInformation()}\n                    >\n                        SAVE CHANGES\n                    </Button>\n                </Columns.Column>\n            </Columns>\n        </Container>\n    );\n}","import React, { useCallback, useState } from \"react\"\n\nimport Container from 'react-bulma-components/lib/components/container';\nimport Columns from 'react-bulma-components/lib/components/columns'\nimport Heading from 'react-bulma-components/lib/components/heading'\n\nimport CheckboxField from '../components/checkboxfield'\nimport SideNavAccount from '../components/sideNavAccount'\n\nexport default function AccountSettings() {\n  var containerStyle = {\n    margin: '3% auto',\n    maxWidth: '80%',\n    padding: '4rem',\n  }\n\n  const pk = localStorage.getItem('user-id')\n  const [infoAboutH2S, setInfoAboutH2S] = useState(true)\n  const [newsletter, setNewsLetter]     = useState(false)\n  \n  const handleOnCheckInformationAboutH2S = useCallback(() => {\n    setInfoAboutH2S(!infoAboutH2S)\n  })\n\n  const handleOnCheckNewsLetter = useCallback(() => {\n    setNewsLetter(!newsletter)\n  })\n\n  return (\n    <Container style={containerStyle}>\n      <Columns>\n        <Columns.Column style={{ maxWidth: '30%' }}>\n          <SideNavAccount />\n        </Columns.Column>\n        <Columns.Column>\n        <Heading size={4} style={{ marginBottom: '3%', }}>Email Settings</Heading>\n        <CheckboxField text={'Information about family and Here to Serve'} checked={infoAboutH2S} onChange={handleOnCheckInformationAboutH2S} />\n        <CheckboxField text={'Receive Here to Serve newsletter'} onChange={handleOnCheckNewsLetter} />\n        </Columns.Column>\n      </Columns>\n    </Container>\n  );\n}","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Button from 'react-bulma-components/lib/components/button'\nimport Box from 'react-bulma-components/lib/components/box'\nimport Menu from 'react-bulma-components/lib/components/menu'\nimport { Link as LinkIcon, MessageSquare, FileText } from 'react-feather'\n\nimport axios from 'axios'\n\nexport default function CustomSections() {\n  const [sections, setSections] = useState([])\n\n  var containerStyle = {\n    margin: '5% auto',\n    maxWidth: '300px',\n    padding: '1rem',\n    border: '0.1rem solid #E5E5E5',\n    borderRadius: '10px',\n  }\n  const [userRole, setUserRole] = useState('')\n\n  useEffect(() => {\n    axios\n      .get('/community-custom-sections/', {\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('token')}`,\n        },\n        params: {\n          name: localStorage.getItem('community-name'),\n        },\n      })\n      .then(\n        (response) => {\n          setSections(response.data)\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [])\n\n  useEffect(() => {\n    setUserRole(localStorage.getItem('user-role'))\n  }, [])\n\n  return (\n    <div>\n      {sections.length !== 0 ? (\n        <Menu>\n          <Menu.List>\n            {sections.map((section) =>\n              section.type !== 'BUTTON' ? (\n                <Link\n                  to={{\n                    pathname: '/custom/' + section.name,\n                    state: {\n                      section: section.id,\n                    },\n                  }}\n                >\n                  <div style={{ display: 'flex', alignItems: 'center' }}>\n                    {section.type === 'DP' ? (\n                      <MessageSquare\n                        size={12}\n                        style={{ marginRight: '10px' }}\n                      />\n                    ) : (\n                      <FileText size={12} style={{ marginRight: '10px' }} />\n                    )}\n                    <p className='sidebar'>{section.name}</p>\n                  </div>\n                </Link>\n              ) : (\n                <a href={section.link} target='_blank'>\n                  <p className='sidebar'>\n                    <LinkIcon size={12} style={{ marginRight: '10px' }} />\n                    {section.name}\n                  </p>\n                </a>\n              )\n            )}\n          </Menu.List>\n          <hr />\n        </Menu>\n      ) : (\n        <div />\n      )}\n    </div>\n  )\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\nimport '../index.css'\nimport 'react-big-calendar/lib/sass/styles.scss'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\n\nimport Button from 'react-bulma-components/lib/components/button'\nimport Box from 'react-bulma-components/lib/components/box'\nimport Container from 'react-bulma-components/lib/components/container'\nimport Columns from 'react-bulma-components/lib/components/columns'\nimport Heading from 'react-bulma-components/lib/components/heading'\nimport Modal from 'react-bulma-components/lib/components/modal'\nimport Section from 'react-bulma-components/lib/components/section'\nimport {\n  Select,\n  Control,\n  Field,\n  Checkbox,\n} from 'react-bulma-components/lib/components/form'\n\nimport CheckboxField from '../components/checkboxfield'\nimport CommunityNavbar from '../components/communityNavbar'\nimport CustomSections from '../components/customSections'\nimport { RefreshCw, Clipboard, Layers, Edit2, Trash2, PauseCircle, Calendar as CalendarIcon } from 'react-feather'\n\nexport default function CalendarPage() {\n  var containerStyle = {\n    margin: '5% 5%',\n    maxWidth: '100%',\n  }\n\n  var eventContainerStyle = {\n    margin: '5% auto',\n    maxWidth: '870px',\n    maxHeight: '1000px',\n    padding: '4rem',\n    border: '0.1rem solid #E5E5E5',\n    borderRadius: '1rem',\n  }\n\n  const token = localStorage.getItem('token')\n\n  const [selectedMonth, setSelectedMonth] = useState(moment().format('MMMM'))\n  const [selectedYear, setSelectedYear] = useState(moment().format('YYYY'))\n  const [date, setDate] = useState()\n\n  const years = [...Array(15).keys()].map((i) => i + 2020)\n  const months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ]\n\n  const categories = [\n    'Giving Rides',\n    'Preparing Meals',\n    'Shopping',\n    'Childcare',\n    'Pet Care',\n    'House Cleaning',\n    'Laundry',\n    'Visits',\n    'Miscellaneous',\n    'Occasion',\n  ]\n\n  // Events and event selection\n  const [events, setEvents] = useState([])\n\n  const [selectedEvent, setSelectedEvent] = useState(null)\n  const [isSelectingEvent, setIsSelectingEvent] = useState(false)\n  const [showRemoveModal, setShowRemoveModel] = useState(false)\n  const [isDeactivate, setIsDeactivate] = useState(false)\n\n  // Setup the localizer by providing the moment (or globalize) Object\n  // to the correct localizer.\n  const localizer = momentLocalizer(moment)\n\n  // filter parameters\n  const [selectedMember, setSelectedMember] = useState('All')\n  const [members, setMembers] = useState([{ first_name: 'All', last_name: '' }])\n  const [selectedCategories, setSelectedCategories] = useState([])\n  const [originalEvents, setOriginalEvents] = useState([])\n  const [selectedStatuses, setSelectedStatuses] = useState([])\n\n  // FUNCTIONS ---------------------------------------------------------------------------------------------\n\n  function updateDate() {\n    setDate(moment(`${selectedMonth} ${selectedYear}`, 'MMMM YYYY').toDate())\n  }\n\n  function processEvents(data) {\n    let tempData = [];\n    data.forEach((activity) => {\n      if (activity['is_active']) {\n        if (typeof activity['start_time'] === 'string') {\n        var timezone_offset = new Date(\n          activity['start_time']\n        ).getTimezoneOffset()\n        activity['start_time'] = moment(activity['start_time'])\n          .add(timezone_offset, 'm')\n          .toDate()\n        activity['end_time'] = moment(activity['end_time'])\n          .add(timezone_offset, 'm')\n          .toDate()\n        activity['title'] = activity['activity_type'] + ': ' + activity['title']\n       }\n      tempData.push(activity)\n      }\n    })\n    setEvents(tempData)\n    setOriginalEvents(tempData)\n  }\n\n  //toggles popup view for delete and deactivate\n  function deactivate(deactivate) {\n    setIsDeactivate(deactivate);\n    setShowRemoveModel(true);\n  }\n\n  const getEventInfo = useCallback((event) => {\n    setSelectedEvent(event)\n    setIsSelectingEvent(true)\n  })\n\n  const goBackToCalendar = useCallback(() => {\n    setSelectedEvent(null)\n    setIsSelectingEvent(false)\n  })\n\n  // Filter by activity function\n  function addSelectedCategories(category, isChecked) {\n    if (isChecked) {\n      var newSelectedCategories = selectedCategories.concat(category)\n      setSelectedCategories(newSelectedCategories)\n    } else {\n      var newSelectedCategories = selectedCategories\n      var index = newSelectedCategories.indexOf(category)\n      if (index !== -1) {\n        newSelectedCategories.splice(index, 1)\n        setSelectedCategories(newSelectedCategories)\n      }\n    }\n    var filteredEvents = []\n    const splitNames = selectedMember.split(' ')\n    var member_object = {\n      first_name: splitNames[0],\n      last_name: splitNames[1],\n    }\n    originalEvents.forEach((activity) => {\n      if (\n        (newSelectedCategories.includes(activity['activity_type']) ||\n          newSelectedCategories.length === 0) &&\n        (selectedStatuses.includes(activity['activity_status']) ||\n          selectedStatuses.length === 0) &&\n        (selectedMember === 'All' ||\n          activity['volunteers'].includes(member_object))\n      ) {\n        filteredEvents.push(activity)\n      }\n    })\n    setEvents(filteredEvents)\n  }\n\n  // Filter by status function\n  function addSelectedStatus(status, isChecked) {\n    if (isChecked) {\n      var newSelectedStatuses = selectedStatuses.concat(status)\n      setSelectedStatuses(newSelectedStatuses)\n    } else {\n      var newSelectedStatuses = selectedStatuses\n      var index = newSelectedStatuses.indexOf(status)\n      if (index !== -1) {\n        newSelectedStatuses.splice(index, 1)\n        setSelectedStatuses(newSelectedStatuses)\n      }\n    }\n    var filteredEvents = []\n    const splitNames = selectedMember.split(' ')\n    var member_object = {\n      first_name: splitNames[0],\n      last_name: splitNames[1],\n    }\n    originalEvents.forEach((activity) => {\n      if (\n        (selectedCategories.includes(activity['activity_type']) ||\n          selectedCategories.length === 0) &&\n        (newSelectedStatuses.includes(activity['activity_status']) ||\n          newSelectedStatuses.length === 0) &&\n        (selectedMember === 'All' ||\n          activity['volunteers'].includes(member_object))\n      ) {\n        filteredEvents.push(activity)\n      }\n    })\n    setEvents(filteredEvents)\n  }\n\n  // Filter by member function\n  function filterMember(member) {\n    setSelectedMember(member)\n    var filteredEvents = []\n    const splitNames = member.split(' ')\n    var member_object = {\n      first_name: splitNames[0],\n      last_name: splitNames[1],\n    }\n    originalEvents.forEach((activity) => {\n      if (\n        (selectedCategories.includes(activity['activity_type']) ||\n          selectedCategories.length === 0) &&\n        (selectedStatuses.includes(activity['activity_status']) ||\n          selectedStatuses.length === 0) &&\n        (member === 'All' || activity['volunteers'].includes(member_object))\n      ) {\n        filteredEvents.push(activity)\n      }\n    })\n    setEvents(filteredEvents)\n  }\n\n  //adds volunteer to activity\n  const addVolunteer = useCallback(() => {\n    const param = JSON.stringify({\n      activity: selectedEvent.id,\n      user: localStorage.getItem('email'),\n    })\n\n    axios\n      .post('/add-volunteer-to-activity/', param, {\n        headers: {\n          Authorization: `JWT ${token}`,\n          'Content-Type': 'application/json',\n        },\n      })\n      .then(\n        (response) => {\n          window.location.reload()\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [selectedEvent, token])\n\n  // API CALLS ---------------------------------------------------------------------------------------------\n\n  useEffect(() => {\n    axios\n      .get(`/activities/${localStorage.getItem('community-id')}`, {\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('token')}`,\n        },\n      })\n      .then(\n        (response) => {\n          processEvents(response.data)\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [])\n\n  useEffect(() => {\n    axios\n      .get('/community-people/', {\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('token')}`,\n          'Content-Type': 'application/json',\n        },\n        params: JSON.stringify({\n          user: localStorage.getItem('email'),\n          community: localStorage.getItem('community-name'),\n        }),\n      })\n      .then(\n        (response) => {\n          setMembers(members.concat(Array.from(response.data.people)))\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [])\n\n  const removeActivity = useCallback((pk) => {\n    var url = '/edit-activity/' + pk + '/'\n    var myHeaders = new Headers()\n    myHeaders.append('Authorization', `JWT ${localStorage.getItem('token')}`)\n\n    var requestOptions = {\n        method: 'DELETE',\n        headers: myHeaders,\n        redirect: 'follow'\n    }\n\n    fetch(url, requestOptions)\n    .then(response => response.text())\n    .then(result => window.location.reload())\n    .catch(error => console.log('error', error));\n  })\n\n  const deactivateActivity = useCallback((pk) => {\n    setIsDeactivate(false)\n    setShowRemoveModel(false)\n    var url = '/edit-activity/' + pk + '/'\n    var myHeaders = new Headers()\n    myHeaders.append('Authorization', `JWT ${localStorage.getItem('token')}`)\n\n    const param = JSON.stringify({\n      'is_active' : false\n    })\n\n    axios\n        .patch(url, param, {\n          headers: {\n            'Authorization': `JWT ${localStorage.getItem('token')}`,\n            'Content-Type': 'application/json',\n          },\n        })\n          .then(\n            (response, err) => {\n              console.log(err)\n            })\n          .then(result => window.location.reload())\n  })\n\n  // RENDERS ---------------------------------------------------------------------------------------------\n\n  // Users will see this if they are selecting an event\n  if (isSelectingEvent) {\n    const isRideActivity = selectedEvent.activity_type === 'Giving Rides'\n    const isMealActivity = selectedEvent.activity_type === 'Preparing Meals'\n    return (\n      <div>\n        <CommunityNavbar />\n        <Container style={eventContainerStyle}>\n          <Heading size={4}>{selectedEvent.title}</Heading>\n          {localStorage.getItem('user-role') === 'Administrator' ? (\n            <Columns>\n              <Columns.Column>\n                <Link to={'/edit-activity/' + selectedEvent.title}>\n                  <Button\n                    style={{\n                      boxShadow: '1px 1px 3px 2px rgba(0,0,0,0.1)',\n                    }}\n                    fullwidth={true}\n                    color='primary'\n                    onClick={() => localStorage.setItem('activity-id', selectedEvent.id)}\n                  >\n                    <Edit2 size={12} style={{ marginRight: '10px' }} />\n                    Edit Activity\n                  </Button>\n                </Link>\n              </Columns.Column>\n              <Columns.Column>\n                <Button\n                  style={{\n                    boxShadow: '1px 1px 3px 2px rgba(0,0,0,0.1)',\n                  }}\n                  fullwidth={true}\n                  color='danger'\n                  onClick={() => deactivate(false)}\n                >\n                  <Trash2 size={12} style={{ marginRight: '10px' }} />\n                  Delete Activity\n                </Button>\n              </Columns.Column>\n            <Columns.Column>\n                <Button\n                  className='is-primary is-inverted'\n                  style={{\n                    boxShadow: '1px 1px 3px 2px rgba(0,0,0,0.1)',\n                  }}\n                  onClick={() => deactivate(true)}\n                >\n                  <PauseCircle size={12} style={{ marginRight: '10px' }} />\n                  Deactivate Activity\n                </Button>\n              </Columns.Column>\n            </Columns>\n          ) : (\n            <Columns.Column>\n              <Button\n                onClick={() => addVolunteer()}\n                style={{\n                  boxShadow: '1px 1px 3px 2px rgba(0,0,0,0.1)',\n                }}\n                color='primary'\n              >\n                Sign up as a volunteer\n              </Button>\n            </Columns.Column>\n          )}\n          <Heading size={6}>Details:</Heading>\n          <i>Date:</i> {moment(selectedEvent.start_time).format('LL')}\n          <br />\n          <i>Time:</i> Between {moment(selectedEvent.start_time).format('LT')}{' '}\n          and {moment(selectedEvent.end_time).format('LT')}\n          <br />\n          {isRideActivity ? (\n            <div>\n              <i>Pickup Location: </i>{' '}\n              <a\n                target='_blank'\n                rel='noopener noreferrer'\n                href={\n                  'https://maps.google.com/?q=' + selectedEvent.pickup_location\n                }\n              >\n                {selectedEvent.pickup_location}\n              </a>\n              <br />\n              <i>Destination: </i>{' '}\n              <a\n                target='_blank'\n                rel='noopener noreferrer'\n                href={\n                  'https://maps.google.com/?q=' +\n                  selectedEvent.destination_location\n                }\n              >\n                {selectedEvent.destination_location}\n              </a>\n            </div>\n          ) : isMealActivity ? (\n            <div>\n              <i>Delivery Location: </i>{' '}\n              <a\n                target='_blank'\n                rel='noopener noreferrer'\n                href={\n                  'https://maps.google.com/?q=' +\n                  selectedEvent.delivery_location\n                }\n              >\n                {selectedEvent.delivery_location}\n              </a>\n            </div>\n          ) : (\n                <div>\n                  <i>Location: </i>\n                  <a\n                    target='_blank'\n                    rel='noopener noreferrer'\n                    href={'https://maps.google.com/?q=' + selectedEvent.location}\n                  >\n                    {selectedEvent.location}\n                  </a>{' '}\n                </div>\n              )}\n          {isMealActivity ? (\n            <div>\n              <i>Dietary Restrictions: </i>{' '}\n              <ul>\n                {selectedEvent.dietary_restrictions.map((r) => (\n                  <li>{r}</li>\n                ))}\n              </ul>\n            </div>\n          ) : (\n              ''\n            )}\n          <i>Volunteers Needed:</i> {selectedEvent.num_volunteers_needed - selectedEvent.volunteers.length} out of {selectedEvent.num_volunteers_needed}\n          <br />\n          <i>Notes:</i> {selectedEvent.description}\n          <br />\n          <Heading size={6} style={{ marginTop: '5%' }}>\n            People:{' '}\n          </Heading>\n          <i>Volunteers:</i>{' '}\n          {selectedEvent.volunteers.length === 0 ? (\n            'No volunteers has signed up.'\n          ) : (\n            <ul>\n              {selectedEvent.volunteers.map((person) => (\n                <li>\n                  {person.first_name} {person.last_name}: {person.email}\n                </li>\n              ))}\n            </ul>\n          )}\n          <br />\n          <i>Coordinators:</i>\n          <ul>\n            {selectedEvent.coordinators.map((person) => (\n              <li>\n                {person.first_name} {person.last_name}: {person.phone_number_1}\n              </li>\n            ))}\n          </ul>\n          <br />\n          <Button\n            className='is-primary is-inverted'\n            onClick={() => goBackToCalendar()}\n            style={{ display: 'block', marginTop: '3%' }}\n          >\n            Back\n          </Button>\n          {localStorage.getItem('user-role') === 'Administrator' && (\n          <Button color='primary'>\n            Assign volunteers\n          </Button>\n          )}\n        </Container>\n        <Modal\n          show={showRemoveModal}\n          onClose={() => setShowRemoveModel(false)}\n          closeOnBlur={true}\n        >\n          <Modal.Card>\n            <Modal.Card.Head onClose={() => setShowRemoveModel(false)}>\n            {isDeactivate ? (\n                <Modal.Card.Title>Deactivate \"{selectedEvent.title}\"</Modal.Card.Title>\n              ) : (\n                <Modal.Card.Title>Delete \"{selectedEvent.title}\"</Modal.Card.Title>\n              )}\n\n            </Modal.Card.Head>\n            {isDeactivate ? (\n                <Section style={{ backgroundColor: 'white' }}>\n              Are you sure you want to deactivate this activity?\n            </Section>\n              ) : (\n                <Section style={{ backgroundColor: 'white' }}>\n              Are you sure you want to delete this activity? You can't undo\n              this action.\n            </Section>\n              )}\n\n            <Modal.Card.Foot\n              style={{\n                alignItems: 'center',\n                justifyContent: 'space-between',\n              }}\n            >\n              <Button onClick={() => setShowRemoveModel(false)}>Cancel</Button>\n              {isDeactivate ? (\n                <Button color='primary' onClick={() => deactivateActivity(selectedEvent.id)}>\n                  Deactivate Activity\n                </Button>\n              ) : (\n                <Button color='primary' onClick={() => removeActivity(selectedEvent.id)}>\n                  Delete Activity\n                </Button>\n              )}\n            </Modal.Card.Foot>\n          </Modal.Card>\n        </Modal>\n      </div>\n    )\n  }\n\n  // Otherwise they will see the entire calendar\n  return (\n    <div>\n      <CommunityNavbar />\n      <Container style={containerStyle}>\n        <Columns isMultiline={true}>\n          <Columns.Column size={3}>\n            <Box>\n              <CustomSections />\n              <Heading size={6}>Status</Heading>\n              <div style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                <Checkbox\n                  style={{ marginRight: '10px' }}\n                  onClick={(e) =>\n                    addSelectedStatus('Help needed', e.target.checked)\n                  }\n                />\n                <span className='dot-green'></span>Help needed\n              </div>\n              <div style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                <Checkbox\n                  style={{ marginRight: '10px' }}\n                  onClick={(e) =>\n                    addSelectedStatus('Needs met', e.target.checked)\n                  }\n                />\n                <span className='dot-blue'></span>Needs met\n              </div>\n              <div style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                <Checkbox\n                  style={{ marginRight: '10px' }}\n                  onClick={(e) =>\n                    addSelectedStatus('Occasion', e.target.checked)\n                  }\n                />\n                <span className='dot-orange'></span>Occasion\n              </div>\n              <hr />\n              <Heading size={6} style={{ marginTop: '10%' }}>\n                Member\n              </Heading>\n              <Field>\n                <Control>\n                  <Select\n                    name='member'\n                    value={selectedMember}\n                    fullwidth='true'\n                    onChange={(e) => filterMember(e.target.value)}\n                  >\n                    {members.map((m) => (\n                      <option>\n                        {m.first_name} {m.last_name}\n                      </option>\n                    ))}\n                  </Select>\n                </Control>\n              </Field>\n              <hr />\n              <Heading size={6} style={{ marginTop: '10%' }}>\n                Activity Type\n              </Heading>\n              {categories.map((t) => (\n                <CheckboxField\n                  text={t}\n                  onChange={(e) => addSelectedCategories(t, e.target.checked)}\n                />\n              ))}\n            </Box>\n          </Columns.Column>\n          <Columns.Column size={9}>\n            <Columns isMultiline={true}>\n              <Columns.Column size={6}>\n                <Heading size={4}>Community Calendar</Heading>\n              </Columns.Column>\n              <Columns.Column size={3}>\n                {localStorage.getItem('user-role') === 'Administrator' && (\n                  <Link to='/create-new-activity' style={{ color: 'white' }}>\n                    <Button color='primary' fullwidth={true}>\n                      <div>\n                        <CalendarIcon\n                          size={12}\n                          style={{ marginRight: '5px' }}\n                        />\n                        Create Activity\n                      </div>\n                    </Button>\n                  </Link>\n                )}\n              </Columns.Column>\n              <Columns.Column size={3}>\n                {localStorage.getItem('user-role') === 'Administrator' && (\n                  <Link to='/manage-activities' style={{ color: 'white' }}>\n                    <Button color='primary' fullwidth={true}>\n                      <div>\n                        <Layers\n                          size={12}\n                          style={{ marginRight: '5px' }}\n                        />\n                        Manage Activities\n                      </div>\n                    </Button>\n                  </Link>\n                )}\n              </Columns.Column>\n            </Columns>\n            <hr style={{ marginTop: 0 }} />\n            <Columns>\n              <Columns.Column size={9}>\n                <Select\n                  value={selectedMonth}\n                  onChange={(e) => setSelectedMonth(e.target.value)}\n                  style={{ marginRight: '10px' }}\n                >\n                  {months.map((month) => (\n                    <option value={month}>{month}</option>\n                  ))}\n                </Select>\n                <Select\n                  value={selectedYear}\n                  onChange={(e) => setSelectedYear(e.target.value)}\n                  style={{ marginRight: '10px' }}\n                >\n                  {years.map((year) => (\n                    <option value={year}>{year}</option>\n                  ))}\n                </Select>\n                <Button\n                  onClick={updateDate}\n                  style={{ color: 'white', backgroundColor: '#2C8595' }}\n                >\n                  <RefreshCw size={12} style={{ marginRight: '5px' }} /> Go\n                </Button>\n              </Columns.Column>\n              <Columns.Column>\n                <Link to='/activity-report' style={{ color: 'white' }}>\n                  <Button\n                    className='is-primary is-inverted'\n                    style={{\n                      boxShadow: '1px 1px 3px 2px rgba(0,0,0,0.1)',\n                    }}\n                    fullwidth={true}\n                  >\n                    <div>\n                      <Clipboard\n                        size={12}\n                        style={{ marginRight: '5px' }}\n                      />\n                      View Activity Report\n                    </div>\n                  </Button>\n                </Link>\n              </Columns.Column>\n            </Columns>\n            <div className='rbc-calendar'>\n              <Calendar\n                events={events}\n                localizer={localizer}\n                style={{ height: 600 }}\n                date={date}\n                onNavigate={(date) => setDate(date)}\n                startAccessor='start_time'\n                endAccessor='end_time'\n                allDayAccessor='all_day'\n                popup={true}\n                onSelectEvent={(event) => getEventInfo(event)}\n                eventPropGetter={(event) => ({\n                  style: {\n                    backgroundColor: event.color,\n                  },\n                })}\n              />\n            </div>\n          </Columns.Column>\n        </Columns>\n      </Container>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport Container from 'react-bulma-components/lib/components/container'\n\nexport default function ForgotPasswordConfirm() {\n  // Non-bulma styles\n  var containerStyle = {\n    margin: '5% auto',\n    maxWidth: '400px',\n    padding: '4rem',\n    border: '0.1rem solid #E5E5E5',\n    borderRadius: '1rem',\n  }\n\n  return (\n    <Container style={containerStyle}>\n      <p>\n        An email has been sent to the email address you entered. \n        If you did not receive this email, please try again <a href=\"/forgot-password\">here</a>. \n        Make sure the email you entered is associated with a valid account.  \n      </p>\n      <br />\n    </Container>\n  )\n}","import React from 'react'\n\nimport Container from 'react-bulma-components/lib/components/container'\n\nexport default function ResetPasswordConfirm() {\n  // Non-bulma styles\n  var containerStyle = {\n    margin: '5% auto',\n    maxWidth: '400px',\n    padding: '4rem',\n    border: '0.1rem solid #E5E5E5',\n    borderRadius: '1rem',\n  }\n\n  return (\n    <Container style={containerStyle}>\n      <p>\n        Your password has been reset. You can now log in with your new password. \n      </p>\n      <br />\n    </Container>\n  )\n}","import React from 'react'\nimport Box from 'react-bulma-components/lib/components/box'\nimport { Link } from 'react-router-dom'\n\nimport Menu from 'react-bulma-components/lib/components/menu'\nimport CustomSections from './customSections'\nimport {\n  Layers,\n  Calendar,\n  AlertCircle,\n  UserPlus,\n  Users,\n  Paperclip,\n  Mail,\n  Send,\n  Inbox,\n  Edit,\n  Star,\n} from 'react-feather'\n\nconst SideBar = (props) => {\n  return (\n    <div>\n      <Menu color='white'>\n        <Menu.List>\n          <Box>\n            <CustomSections />\n\n            <Link to='/create-new-activity'>\n              <p className='sidebar'>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                  <Calendar size={12} style={{ marginRight: '10px' }} />\n                  <p>Create New Activity</p>\n                </div>\n              </p>\n            </Link>\n\n            <Link to='/manage-activities'>\n              <p className='sidebar'>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                  <Layers size={12} style={{ marginRight: '10px' }} />\n                  <p>Manage Existing Activities</p>\n                </div>\n              </p>\n            </Link>\n\n            <Link to='/activity-report'>\n              <p className='sidebar'>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                  <Paperclip size={12} style={{ marginRight: '10px' }} />\n                  <p>Activity Report</p>\n                </div>\n              </p>\n            </Link>\n            <hr />\n\n            <Link to='/community-people'>\n              <p className='sidebar'>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                  <Users size={12} style={{ marginRight: '10px' }} />{' '}\n                  <p>View & Update Member Information</p>\n                </div>\n              </p>\n            </Link>\n\n            <Link to='/add-people'>\n              <p className='sidebar'>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                  <UserPlus size={12} style={{ marginRight: '10px' }} />\n                  <p>Invite New Members</p>\n                </div>\n              </p>\n            </Link>\n\n            <Link to='/join-requests'>\n              <p className='sidebar'>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                  <AlertCircle size={12} style={{ marginRight: '10px' }} />\n                  <p>Review Join Requests</p>\n                </div>\n              </p>\n            </Link>\n\n            <hr />\n\n            <Link to='/create-announcement'>\n              <p className='sidebar'>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                  <Send size={12} style={{ marginRight: '10px' }} />{' '}\n                  <p>Add Announcement</p>\n                </div>\n              </p>\n            </Link>\n\n            <Link to='/email-members'>\n              <p className='sidebar'>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                  <Mail size={12} style={{ marginRight: '10px' }} />{' '}\n                  <p>Email Members</p>\n                </div>\n              </p>\n            </Link>\n\n            <Link to='/edit-community'>\n              <p className='sidebar'>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                  <Edit size={12} style={{ marginRight: '10px' }} />{' '}\n                  <p>Edit Community Information</p>\n                </div>\n              </p>\n            </Link>\n\n            <hr />\n\n            <Link to='/create-custom-section'>\n              <p className='sidebar'>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                  <Star size={12} style={{ marginRight: '10px' }} />{' '}\n                  <p>Create Custom Section</p>\n                </div>\n              </p>\n            </Link>\n\n            <Link to='/manage-custom-sections'>\n              <p className='sidebar'>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                  <Layers size={12} style={{ marginRight: '10px' }} />{' '}\n                  <p>Manage Custom Sections</p>\n                </div>\n              </p>\n            </Link>\n          </Box>\n        </Menu.List>\n      </Menu>\n    </div>\n  )\n}\n\nexport default SideBar\n","import React, { useState, useEffect, useCallback } from 'react'\nimport DayPicker, { DateUtils } from 'react-day-picker'\nimport 'react-day-picker/lib/style.css'\nimport { Link } from 'react-router-dom'\nimport { useHistory } from 'react-router-dom'\nimport axios from 'axios'\n\nimport Container from 'react-bulma-components/lib/components/container'\nimport Columns from 'react-bulma-components/lib/components/columns'\nimport Heading from 'react-bulma-components/lib/components/heading'\nimport CommunityNavbar from '../components/communityNavbar'\nimport Button from 'react-bulma-components/lib/components/button'\nimport Tabs from 'react-bulma-components/lib/components/tabs'\nimport {\n  Select,\n  Control,\n  Label,\n  Field,\n  Input,\n  Textarea,\n  Checkbox,\n} from 'react-bulma-components/lib/components/form'\nimport MultiSelect from '@khanacademy/react-multi-select'\nimport SideBar from '../components/sidebar'\n\nexport default function CreateNewActivity(props) {\n  //Styles\n  var containerStyle = {\n    margin: '5% 5%',\n    maxWidth: '100%',\n  }\n  var formContainerStyle = {\n    padding: '5%',\n    border: '1px solid hsl(0, 0%, 86%)',\n    borderTop: 'none',\n    borderRadius: '0px 0px 10px 10px',\n  }\n  var noteStyle = {\n    fontSize: '0.75rem',\n    fontStyle: 'italic',\n    marginBottom: '5px',\n  }\n  var checkboxStyle = {\n    fontSize: '0.75rem',\n    fontStyle: 'italic',\n    margin: '5px 0',\n    display: 'flex',\n    justifyContent: 'flex-start',\n  }\n\n  let history = useHistory()\n  const years = Array.from(Array(5).keys()).map(\n    (y) => y + new Date().getFullYear()\n  )\n  const months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ]\n\n  const times = [\n    '12:00 AM',\n    '12:15 AM',\n    '12:30 AM',\n    '12:45 AM',\n    '1:00 AM',\n    '1:15 AM',\n    '1:30 AM',\n    '1:45 AM',\n    '2:00 AM',\n    '2:15 AM',\n    '2:30 AM',\n    '2:45 AM',\n    '3:00 AM',\n    '3:15 AM',\n    '3:30 AM',\n    '3:45 AM',\n    '4:00 AM',\n    '4:15 AM',\n    '4:30 AM',\n    '4:45 AM',\n    '5:00 AM',\n    '5:15 AM',\n    '5:30 AM',\n    '5:45 AM',\n    '5:00 AM',\n    '5:15 AM',\n    '5:30 AM',\n    '5:45 AM',\n    '5:00 AM',\n    '5:15 AM',\n    '5:30 AM',\n    '5:45 AM',\n    '6:00 AM',\n    '6:15 AM',\n    '6:30 AM',\n    '6:45 AM',\n    '7:00 AM',\n    '7:15 AM',\n    '7:30 AM',\n    '7:45 AM',\n    '8:00 AM',\n    '8:15 AM',\n    '8:30 AM',\n    '8:45 AM',\n    '9:00 AM',\n    '9:15 AM',\n    '9:30 AM',\n    '9:45 AM',\n    '10:00 AM',\n    '10:15 AM',\n    '10:30 AM',\n    '10:45 AM',\n    '11:00 AM',\n    '11:15 AM',\n    '11:30 AM',\n    '11:45 AM',\n    '12:00 PM',\n    '12:15 PM',\n    '12:30 PM',\n    '12:45 PM',\n    '1:00 PM',\n    '1:15 PM',\n    '1:30 PM',\n    '1:45 PM',\n    '2:00 PM',\n    '2:15 PM',\n    '2:30 PM',\n    '2:45 PM',\n    '3:00 PM',\n    '3:15 PM',\n    '3:30 PM',\n    '3:45 PM',\n    '4:00 PM',\n    '4:15 PM',\n    '4:30 PM',\n    '4:45 PM',\n    '5:00 PM',\n    '5:15 PM',\n    '5:30 PM',\n    '5:45 PM',\n    '6:00 PM',\n    '6:15 PM',\n    '6:30 PM',\n    '6:45 PM',\n    '7:00 PM',\n    '7:15 PM',\n    '7:30 PM',\n    '7:45 PM',\n    '8:00 PM',\n    '8:15 PM',\n    '8:30 PM',\n    '8:45 PM',\n    '9:00 PM',\n    '9:15 PM',\n    '9:30 PM',\n    '9:45 PM',\n    '10:00 PM',\n    '10:15 PM',\n    '10:30 PM',\n    '10:45 PM',\n    '11:00 PM',\n    '11:15 PM',\n    '11:30 PM',\n    '11:45 PM',\n  ]\n  const count = Array.from(Array(51).keys()).slice(1, 51)\n\n  const token = localStorage.getItem('token')\n\n  const [activeTab, setActiveTab] = useState('What')\n  const [validForm, setValidForm] = useState(false)\n\n  //What\n  const [category, setCategory] = useState('Giving Rides')\n  const [activityName, setActivityName] = useState('')\n  const [notes, setNotes] = useState('')\n\n  //When\n  const [startTime, setStartTime] = useState('12:00 PM')\n  const [endTime, setEndTime] = useState('12:00 PM')\n  const [noEndTime, setNoEndTime] = useState(false)\n  const [allDay, setAllDay] = useState(false)\n  const [startMonth, setStartMonth] = useState(months[new Date().getMonth()])\n  const [startDay, setStartDay] = useState(new Date().getDate())\n  const [startYear, setStartYear] = useState(new Date().getFullYear())\n  const [endMonth, setEndMonth] = useState(months[new Date().getMonth()])\n  const [endDay, setEndDay] = useState(new Date().getDate())\n  const [endYear, setEndYear] = useState(new Date().getFullYear())\n  const [selectedDays, setSelectedDays] = useState([])\n\n  //Where\n  const [pickupLocation, setPickupLocation] = useState('')\n  const [destination, setDestination] = useState('')\n  const [location, setLocation] = useState('')\n\n  //Who\n  const [estimatedHours, setEstimatedHours] = useState('')\n  const [estimatedMinutes, setEstimatedMinutes] = useState('')\n  const [numVolunteers, setNumVolunteers] = useState(1)\n  const [coordinators, setCoordinators] = useState([])\n  const [selectedCoordinators, setSelectedCoordinators] = useState([])\n\n  const categories = [\n    'Giving Rides',\n    'Preparing Meals',\n    'Shopping',\n    'Childcare',\n    'Pet Care',\n    'House Cleaning',\n    'Laundry',\n    'Visits',\n    'Miscellaneous',\n    'Occasion',\n  ]\n\n  //Dietary Restrictions (kept in case checkbox implementation is needed)\n  const initDietaryRestrictions = [\n    { name: 'Vegetarian', isChecked: false },\n    { name: 'Kosher', isChecked: false },\n    { name: 'Nut-free', isChecked: false },\n    { name: 'Lactose-free', isChecked: false },\n    { name: 'Wheat-free', isChecked: false },\n    { name: 'Gluten-free', isChecked: false },\n    { name: 'Soy-free', isChecked: false },\n    { name: 'Sugar-free', isChecked: false },\n    { name: 'Low-fat', isChecked: false },\n    { name: 'Low-carb', isChecked: false },\n    { name: 'Low-salt', isChecked: false },\n  ]\n  const [dietaryRestrictions, setDietaryRestrictions] = useState(\n    initDietaryRestrictions\n  )\n\n  const initDaysOfWeek = [\n    { name: 'Sunday', isChecked: false },\n    { name: 'Monday', isChecked: false },\n    { name: 'Tuesday', isChecked: false },\n    { name: 'Wednesday', isChecked: false },\n    { name: 'Thursday', isChecked: false },\n    { name: 'Friday', isChecked: false },\n    { name: 'Saturday', isChecked: false },\n  ]\n  const [daysOfWeek, setDaysOfWeek] = useState(initDaysOfWeek)\n\n  const monthDiff = (d1, d2) => {\n    var months\n    months = (d2.getFullYear() - d1.getFullYear()) * 12\n    months -= d1.getMonth()\n    months += d2.getMonth()\n    return months <= 0 ? 0 : months\n  }\n\n  const getDaysBetweenDates = (start, end, dayName) => {\n    var result = []\n    var days = { sun: 0, mon: 1, tue: 2, wed: 3, thu: 4, fri: 5, sat: 6 }\n    var day = days[dayName.toLowerCase().substr(0, 3)]\n    var current = new Date(start)\n\n    while (current <= end) {\n      if (current.getDay() === day) {\n        result.push(new Date(current))\n      }\n      current.setDate(current.getDate() + 1)\n    }\n    return result\n  }\n\n  const containsDay = (array = [], day) => {\n    return array.some((d) => DateUtils.isSameDay(d, day))\n  }\n\n  const handleDayClick = (day, modifiers = {}) => {\n    if (modifiers.disabled) {\n      return\n    }\n    const newSelectedDays = selectedDays\n    if (modifiers.selected) {\n      setSelectedDays(\n        newSelectedDays.filter(\n          (selectedDay) => !DateUtils.isSameDay(selectedDay, day)\n        )\n      )\n    } else {\n      setSelectedDays(newSelectedDays.concat([day]))\n    }\n  }\n\n  const handleWeekdayToggle = (dayName, addDays) => {\n    const newSelectedDays = selectedDays\n    if (addDays) {\n      setSelectedDays(\n        newSelectedDays\n          .filter(\n            (d) =>\n              !containsDay(\n                getDaysBetweenDates(\n                  new Date(startYear, months.indexOf(startMonth), startDay),\n                  new Date(endYear, months.indexOf(endMonth), endDay),\n                  dayName\n                ),\n                d\n              )\n          )\n          .concat(\n            getDaysBetweenDates(\n              new Date(startYear, months.indexOf(startMonth), startDay),\n              new Date(endYear, months.indexOf(endMonth), endDay),\n              dayName\n            )\n          )\n      )\n    } else {\n      setSelectedDays(\n        newSelectedDays.filter(\n          (d) =>\n            !containsDay(\n              getDaysBetweenDates(\n                new Date(startYear, months.indexOf(startMonth), startDay),\n                new Date(endYear, months.indexOf(endMonth), endDay),\n                dayName\n              ),\n              d\n            )\n        )\n      )\n    }\n  }\n\n  useEffect(() => {\n    const formValues = [\n      activityName,\n      startDay,\n      startMonth,\n      startYear,\n      selectedDays,\n      estimatedHours,\n      estimatedMinutes,\n      numVolunteers,\n    ]\n    const notValidForm =\n      formValues.some((formVal) => {\n        return formVal === ''\n      }) ||\n      selectedDays.length === 0 ||\n      isNaN(estimatedHours) ||\n      isNaN(estimatedMinutes)\n\n    if (notValidForm) {\n      setValidForm(false)\n    } else {\n      setValidForm(true)\n    }\n  }, [\n    activityName,\n    startDay,\n    startMonth,\n    startYear,\n    selectedDays,\n    estimatedHours,\n    estimatedMinutes,\n    numVolunteers,\n  ])\n\n  useEffect(() => {\n    axios\n      .get(`/community-coordinators/${localStorage.getItem('community-id')}`, {\n        headers: {\n          Authorization: `JWT ${token}`,\n        },\n      })\n      .then(\n        (response) => {\n          const options = response.data.map((item) => ({\n            label: `${item['first_name']} ${item['last_name']}`,\n            value: item['id'],\n          }))\n          setCoordinators(options)\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [token])\n\n  const handleSubmit = useCallback(() => {\n    let dietaryRestrictionStatus = {}\n    dietaryRestrictions.forEach(\n      (restriction) =>\n        (dietaryRestrictionStatus[restriction.name] = restriction.isChecked)\n    )\n    const param = JSON.stringify({\n      title: activityName,\n      description: notes,\n      activity_type: category,\n      community: localStorage.getItem('community-id'),\n      dates: selectedDays,\n      est_hours: estimatedHours,\n      est_minutes: estimatedMinutes,\n      num_volunteers_needed: numVolunteers,\n      pickup_location: pickupLocation,\n      destination_location: destination,\n      location: location,\n      dietary_restrictions: dietaryRestrictionStatus,\n      start_time: startTime,\n      end_time: endTime,\n      all_day: allDay,\n      no_end_time: noEndTime,\n      coordinators: selectedCoordinators,\n      volunteers: [],\n    })\n    axios\n      .post('/activity/', param, {\n        headers: {\n          Authorization: `JWT ${token}`,\n          'Content-Type': 'application/json',\n        },\n      })\n      .then((response, err) => {\n        console.log(err)\n        history.push('/calendar')\n      })\n  }, [\n    selectedCoordinators,\n    activityName,\n    notes,\n    category,\n    selectedDays,\n    estimatedHours,\n    estimatedMinutes,\n    numVolunteers,\n    pickupLocation,\n    destination,\n    location,\n    startTime,\n    endTime,\n    token,\n    allDay,\n    noEndTime,\n    dietaryRestrictions,\n  ])\n\n  return (\n    <div>\n      <CommunityNavbar />\n\n      <Container style={containerStyle}>\n        <Columns isMultiline={true}>\n          <Columns.Column size={3}>\n            <SideBar />\n          </Columns.Column>\n\n          <Columns.Column size={9}>\n            <Heading size={4}>Create a New Activity</Heading>\n\n            {activeTab === 'What' ? (\n              <Tabs type='boxed' size='small' style={{ marginBottom: '0' }}>\n                <Tabs.Tab active onClick={() => setActiveTab('What')}>\n                  What\n                </Tabs.Tab>\n                <Tabs.Tab onClick={() => setActiveTab('When')}>When</Tabs.Tab>\n                <Tabs.Tab onClick={() => setActiveTab('Where')}>Where</Tabs.Tab>\n                <Tabs.Tab onClick={() => setActiveTab('Who')}>Who</Tabs.Tab>\n              </Tabs>\n            ) : activeTab === 'When' ? (\n              <Tabs type='boxed' size='small' style={{ marginBottom: '0' }}>\n                <Tabs.Tab onClick={() => setActiveTab('What')}>What</Tabs.Tab>\n                <Tabs.Tab active onClick={() => setActiveTab('When')}>\n                  When\n                </Tabs.Tab>\n                <Tabs.Tab onClick={() => setActiveTab('Where')}>Where</Tabs.Tab>\n                <Tabs.Tab onClick={() => setActiveTab('Who')}>Who</Tabs.Tab>\n              </Tabs>\n            ) : activeTab === 'Where' ? (\n              <Tabs type='boxed' size='small' style={{ marginBottom: '0' }}>\n                <Tabs.Tab onClick={() => setActiveTab('What')}>What</Tabs.Tab>\n                <Tabs.Tab onClick={() => setActiveTab('When')}>When</Tabs.Tab>\n                <Tabs.Tab active onClick={() => setActiveTab('Where')}>\n                  Where\n                </Tabs.Tab>\n                <Tabs.Tab onClick={() => setActiveTab('Who')}>Who</Tabs.Tab>\n              </Tabs>\n            ) : (\n              <Tabs type='boxed' size='small' style={{ marginBottom: '0' }}>\n                <Tabs.Tab onClick={() => setActiveTab('What')}>What</Tabs.Tab>\n                <Tabs.Tab onClick={() => setActiveTab('When')}>When</Tabs.Tab>\n                <Tabs.Tab onClick={() => setActiveTab('Where')}>Where</Tabs.Tab>\n                <Tabs.Tab active onClick={() => setActiveTab('Who')}>\n                  Who\n                </Tabs.Tab>\n              </Tabs>\n            )}\n\n            {activeTab === 'What' ? (\n              <div className='what' style={formContainerStyle}>\n                <Field>\n                  <Label>Select Category</Label>\n                  <Control>\n                    <Select\n                      onChange={(e) => setCategory(e.target.value)}\n                      name='category'\n                      value={category}\n                    >\n                      {categories.map((cat) => (\n                        <option>{cat}</option>\n                      ))}\n                    </Select>\n                  </Control>\n                </Field>\n                <Field>\n                  <Label>\n                    Activity Name<span style={{ color: '#F83D34' }}>*</span>\n                  </Label>\n                  <Control>\n                    <Input\n                      maxLength={120}\n                      value={activityName}\n                      onChange={(e) => setActivityName(e.target.value)}\n                    />\n                  </Control>\n                  {category === 'Giving Rides' ? (\n                    <p style={{ fontSize: '80%' }} className='has-text-grey'>\n                      example: \"Rides to medical appointment, Social Event,\n                      Soccer practice, Carpool.\"\n                    </p>\n                  ) : (\n                    <></>\n                  )}\n                  {category === 'Preparing Meals' ? (\n                    <p style={{ fontSize: '80%' }} className='has-text-grey'>\n                      example: \"Weekday Dinners, Sunday Brunch.\"\n                    </p>\n                  ) : (\n                    <></>\n                  )}\n                  {category === 'Shopping' ? (\n                    <p style={{ fontSize: '80%' }} className='has-text-grey'>\n                      example: \"Grocery shopping, Pharmacy pick-up.\"\n                    </p>\n                  ) : (\n                    <></>\n                  )}\n                  {category === 'Childcare' ? (\n                    <p style={{ fontSize: '80%' }} className='has-text-grey'>\n                      example: \"Weekday a.m. childcare, Weekend eve\n                      babysitting.\"\n                    </p>\n                  ) : (\n                    <></>\n                  )}\n                  {category === 'Pet Care' ? (\n                    <p style={{ fontSize: '80%' }} className='has-text-grey'>\n                      example: \"Weekday a.m. pet care, Weekend eve pet care.\"\n                    </p>\n                  ) : (\n                    <></>\n                  )}\n                  {category === 'Laundry' ? (\n                    <p style={{ fontSize: '80%' }} className='has-text-grey'>\n                      example: \"Weekly laundry load.\"\n                    </p>\n                  ) : (\n                    <></>\n                  )}\n                  {category === 'House Cleaning' ? (\n                    <p style={{ fontSize: '80%' }} className='has-text-grey'>\n                      example: \"Bathroom cleaning, Tidying bed.\"\n                    </p>\n                  ) : (\n                    <></>\n                  )}\n                  {category === 'Visits' ? (\n                    <p style={{ fontSize: '80%' }} className='has-text-grey'>\n                      example: \"Afternoon reading, Weekend visits.\"\n                    </p>\n                  ) : (\n                    <></>\n                  )}\n                  {category === 'Miscellaneous' ? (\n                    <p style={{ fontSize: '80%' }} className='has-text-grey'>\n                      examples: \"House cleaning, Lawn care, or other general\n                      errands.\"\n                    </p>\n                  ) : (\n                    <></>\n                  )}\n                  {category === 'Occasion' ? (\n                    <p style={{ fontSize: '80%' }} className='has-text-grey'>\n                      Need to keep track of important dates or milestones? Add\n                      important occasions such as birthdays, anniversaries, and\n                      more.\n                    </p>\n                  ) : (\n                    <></>\n                  )}\n                </Field>\n                {category === 'Preparing Meals' && (\n                  <Field>\n                    <Label>Dietary Restrictions</Label>\n                    <Columns>\n                      <Columns.Column>\n                        <Control>\n                          {dietaryRestrictions.map((restriction, i) => (\n                            <div style={checkboxStyle}>\n                              <Checkbox\n                                style={{ marginRight: '10px' }}\n                                onChange={() => {\n                                  setDietaryRestrictions(\n                                    (dietaryRestrictions) => {\n                                      dietaryRestrictions[\n                                        i\n                                      ].isChecked = !dietaryRestrictions[i]\n                                        .isChecked\n                                      return dietaryRestrictions\n                                    }\n                                  )\n                                }}\n                              />\n                              <p>{restriction.name}</p>\n                            </div>\n                          ))}\n                        </Control>\n                      </Columns.Column>\n                    </Columns>\n                  </Field>\n                )}\n                <Field>\n                  <Label>Notes</Label>\n                  <Control>\n                    <Textarea\n                      value={notes}\n                      onChange={(e) => setNotes(e.target.value)}\n                    />\n                  </Control>\n                  {category === 'Giving Rides' ? (\n                    <p style={{ fontSize: '80%' }} className='has-text-grey'>\n                      examples: <br />- travel time <br />- other stops\n                    </p>\n                  ) : (\n                    <></>\n                  )}\n                  {category === 'Preparing Meals' ? (\n                    <p style={{ fontSize: '80%' }} className='has-text-grey'>\n                      examples: <br />- allergies <br />- no. people <br />-\n                      delivery instr.\n                    </p>\n                  ) : (\n                    <></>\n                  )}\n                  {category === 'Shopping' ? (\n                    <p style={{ fontSize: '80%' }} className='has-text-grey'>\n                      example: <br />- items needed\n                    </p>\n                  ) : (\n                    <></>\n                  )}\n                  {category === 'Childcare' ? (\n                    <p style={{ fontSize: '80%' }} className='has-text-grey'>\n                      example: <br />- feeding instructions\n                      <br />- kids favorites\n                    </p>\n                  ) : (\n                    <></>\n                  )}\n                  {category === 'Pet Care' ? (\n                    <p style={{ fontSize: '80%' }} className='has-text-grey'>\n                      example: <br />- feeding instructions\n                      <br />- favorite pet toys\n                    </p>\n                  ) : (\n                    <></>\n                  )}\n                  {category === 'Laundry' ? (\n                    <p style={{ fontSize: '80%' }} className='has-text-grey'>\n                      example: <br />- washing machine settings\n                    </p>\n                  ) : (\n                    <></>\n                  )}\n                  {category === 'House Cleaning' ? (\n                    <p style={{ fontSize: '80%' }} className='has-text-grey'>\n                      example: <br />- rooms to clean\n                    </p>\n                  ) : (\n                    <></>\n                  )}\n                  {category === 'Visits' ? (\n                    <p style={{ fontSize: '80%' }} className='has-text-grey'>\n                      examples: <br />- additional instructions <br />-\n                      favorites <br />- activity ideas\n                    </p>\n                  ) : (\n                    <></>\n                  )}\n                  {category === 'Occasion' ? (\n                    <p style={{ fontSize: '80%' }} className='has-text-grey'>\n                      Share important information with members of your Community\n                      about this occasion.\n                    </p>\n                  ) : (\n                    <></>\n                  )}\n                </Field>\n              </div>\n            ) : activeTab === 'When' ? (\n              <div className='when' style={formContainerStyle}>\n                <Label>\n                  Select Time<span style={{ color: '#F83D34' }}>*</span>\n                </Label>\n                <Columns>\n                  <Columns.Column>\n                    <Field style={{ marginRight: '10px' }}>\n                      {category === 'Giving Rides' ? (\n                        <p>Pick-up Time</p>\n                      ) : (\n                        <p>Start Time</p>\n                      )}\n                      <Control>\n                        <Select\n                          onChange={(e) => setStartTime(e.target.value)}\n                          name='startTime'\n                          value={startTime}\n                          disabled={allDay}\n                        >\n                          {times.map((t) => (\n                            <option>{t}</option>\n                          ))}\n                        </Select>\n                        <div style={checkboxStyle}>\n                          <Checkbox\n                            style={{ marginRight: '10px' }}\n                            onChange={() => {\n                              setAllDay(!allDay)\n                            }}\n                          />\n                          <p>All Day</p>\n                        </div>\n                      </Control>\n                    </Field>\n                  </Columns.Column>\n                  <Columns.Column>\n                    <Field>\n                      {category === 'Giving Rides' ? (\n                        <p>Drop-off Time {'(optional)'}</p>\n                      ) : (\n                        <p>End Time {'(optional)'}</p>\n                      )}\n                      <Control>\n                        <Select\n                          onChange={(e) => setEndTime(e.target.value)}\n                          name='endTime'\n                          value={endTime}\n                          disabled={noEndTime}\n                        >\n                          {times.map((t) => (\n                            <option>{t}</option>\n                          ))}\n                        </Select>\n                        <div style={checkboxStyle}>\n                          <Checkbox\n                            style={{ marginRight: '10px' }}\n                            onChange={() => {\n                              setNoEndTime(!noEndTime)\n                            }}\n                          />\n                          <p>None</p>\n                        </div>\n                      </Control>\n                    </Field>\n                  </Columns.Column>\n                </Columns>\n                <Label>\n                  Select Dates<span style={{ color: '#F83D34' }}>*</span>\n                </Label>\n                Date Range\n                <br />\n                <Columns>\n                  <Columns.Column>\n                    <Field>\n                      <Control>\n                        <p style={noteStyle}>Start Date</p>\n                        <Select\n                          onChange={(e) => setStartMonth(e.target.value)}\n                          name='startMonth'\n                          value={startMonth}\n                          style={{ marginRight: '10px' }}\n                        >\n                          {months.map((m) => (\n                            <option>{m}</option>\n                          ))}\n                        </Select>\n                        <Select\n                          onChange={(e) => setStartDay(e.target.value)}\n                          name='startDay'\n                          value={startDay}\n                          style={{ marginRight: '10px' }}\n                        >\n                          {count.slice(0, 31).map((d) => (\n                            <option>{d}</option>\n                          ))}\n                        </Select>\n                        <Select\n                          onChange={(e) => setStartYear(e.target.value)}\n                          name='startYear'\n                          value={startYear}\n                        >\n                          {years.map((y) => (\n                            <option>{y}</option>\n                          ))}\n                        </Select>\n                      </Control>\n                    </Field>\n                  </Columns.Column>\n                  <Columns.Column>\n                    <Field>\n                      <Control>\n                        <p style={noteStyle}>End Date</p>\n                        <Select\n                          onChange={(e) => setEndMonth(e.target.value)}\n                          name='endMonth'\n                          value={endMonth}\n                          style={{ marginRight: '10px' }}\n                        >\n                          {months.map((m) => (\n                            <option>{m}</option>\n                          ))}\n                        </Select>\n                        <Select\n                          onChange={(e) => setEndDay(e.target.value)}\n                          name='endDay'\n                          value={endDay}\n                          style={{ marginRight: '10px' }}\n                        >\n                          {count.slice(0, 31).map((d) => (\n                            <option>{d}</option>\n                          ))}\n                        </Select>\n                        <Select\n                          onChange={(e) => setEndYear(e.target.value)}\n                          name='endYear'\n                          value={endYear}\n                        >\n                          {years.map((y) => (\n                            <option>{y}</option>\n                          ))}\n                        </Select>\n                      </Control>\n                    </Field>\n                  </Columns.Column>\n                </Columns>\n                <Field>\n                  <Control>\n                    <p style={noteStyle}>Repeats</p>\n                    {daysOfWeek.map((day, i) => (\n                      <div style={checkboxStyle}>\n                        <Checkbox\n                          style={{ marginRight: '10px' }}\n                          onChange={() => {\n                            handleWeekdayToggle(day.name, !day.isChecked)\n                            setDaysOfWeek((daysOfWeek) => {\n                              day.isChecked = !day.isChecked\n                              return daysOfWeek\n                            })\n                          }}\n                        />\n                        <p>{day.name}</p>\n                      </div>\n                    ))}\n                  </Control>\n                </Field>\n                <p style={noteStyle}>\n                  <b>Select all applicable dates on the calendar below.</b>\n                </p>\n                <DayPicker\n                  selectedDays={selectedDays}\n                  onDayClick={handleDayClick}\n                  month={new Date(startYear, months.indexOf(startMonth))}\n                  numberOfMonths={\n                    monthDiff(\n                      new Date(startYear, months.indexOf(startMonth), startDay),\n                      new Date(endYear, months.indexOf(endMonth), endDay)\n                    ) + 1\n                  }\n                  disabledDays={[\n                    {\n                      after: new Date(\n                        endYear,\n                        months.indexOf(endMonth),\n                        endDay\n                      ),\n                      before: new Date(\n                        startYear,\n                        months.indexOf(startMonth),\n                        startDay\n                      ),\n                    },\n                  ]}\n                />\n              </div>\n            ) : activeTab === 'Where' ? (\n              <div className='where' style={formContainerStyle}>\n                <Label>Location</Label>\n                {category === 'Giving Rides' ? (\n                  <div style={{ marginBottom: '10px' }}>\n                    <Field>\n                      Pick-up Location\n                      <Control>\n                        <Textarea\n                          value={pickupLocation}\n                          onChange={(e) => setPickupLocation(e.target.value)}\n                          placeholder='Example: 123 Main Street, New York, NY'\n                        />\n                      </Control>\n                    </Field>\n                    <Field>\n                      Destination\n                      <Control>\n                        <Textarea\n                          value={destination}\n                          onChange={(e) => setDestination(e.target.value)}\n                          placeholder='Example: 456 Walnut Ave, New York, NY'\n                        />\n                      </Control>\n                      <p style={{ fontSize: '80%' }} className='has-text-grey'>\n                        The system will try to automatically display directions\n                        to the specified address(es) specified. For best\n                        results, please use this format: Address, City, State\n                        all on one line.\n                      </p>\n                    </Field>\n                  </div>\n                ) : (\n                  <Field>\n                    <Control>\n                      <Textarea\n                        value={location}\n                        onChange={(e) => setLocation(e.target.value)}\n                        placeholder={\n                          category === 'Preparing Meals' && 'Delivery Location'\n                        }\n                      />\n                    </Control>\n                    <p style={{ fontSize: '80%' }} className='has-text-grey'>\n                      The system will try to automatically display directions to\n                      the specified address(es) specified. For best results,\n                      please use this format: Address, City, State all on one\n                      line.\n                    </p>\n                  </Field>\n                )}\n              </div>\n            ) : (\n              <div className='who' style={formContainerStyle}>\n                <Field>\n                  <Label>\n                    Activity Coordinator\n                    <span style={{ color: '#F83D34' }}>*</span>\n                  </Label>\n                  <MultiSelect\n                    valueRenderer={(selectedCoordinators) => (\n                      <span width='100%'>\n                        Selected {selectedCoordinators.length} users{' '}\n                      </span>\n                    )}\n                    options={coordinators}\n                    selected={coordinators}\n                    onSelectedChanged={(selected) =>\n                      setSelectedCoordinators(selected)\n                    }\n                  />\n                </Field>\n                <Label>\n                  Estimated Average Task Time\n                  <span style={{ color: '#F83D34' }}>*</span>\n                </Label>\n                <Columns>\n                  <Columns.Column>\n                    <Field>\n                      <Control>\n                        <Input\n                          value={estimatedHours}\n                          onChange={(e) => setEstimatedHours(e.target.value)}\n                          placeholder='Hours'\n                        />\n                      </Control>\n                    </Field>\n                    <Field>\n                      <Control>\n                        <Input\n                          value={estimatedMinutes}\n                          onChange={(e) => setEstimatedMinutes(e.target.value)}\n                          placeholder='Minutes'\n                        />\n                      </Control>\n                    </Field>\n                    <p style={{ fontSize: '80%' }} className='has-text-grey'>\n                      Optional. The estimated time for a Volunteer to complete\n                      this task. This information is used for Activity Status\n                      Reports.\n                    </p>\n                  </Columns.Column>\n                  <Columns.Column></Columns.Column>\n                </Columns>\n\n                <Field>\n                  <Label>\n                    Volunteers\n                    <span style={{ color: '#F83D34' }}>*</span>\n                  </Label>\n                  <Control>\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\n                      <Select\n                        onChange={(e) => setNumVolunteers(e.target.value)}\n                        name='numVolunteers'\n                        value={numVolunteers}\n                        style={{ marginRight: '10px' }}\n                      >\n                        {count.map((c) => (\n                          <option>{c}</option>\n                        ))}\n                      </Select>\n                      Volunteers per task/time\n                    </div>\n                  </Control>\n                </Field>\n              </div>\n            )}\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                marginTop: '20px',\n              }}\n            >\n              <Link to='#'>\n                <Button\n                  className='is-primary is-inverted'\n                  onClick={() =>\n                    setActiveTab(\n                      activeTab === 'When'\n                        ? 'What'\n                        : activeTab === 'Where'\n                        ? 'When'\n                        : 'Where'\n                    )\n                  }\n                  style={{ display: activeTab === 'What' ? 'none' : 'block' }}\n                >\n                  Back\n                </Button>\n              </Link>\n              <Link to='#' style={{ color: 'white' }}>\n                <Button\n                  color='primary'\n                  onClick={() =>\n                    activeTab === 'Who'\n                      ? handleSubmit()\n                      : setActiveTab(\n                          activeTab === 'What'\n                            ? 'When'\n                            : activeTab === 'When'\n                            ? 'Where'\n                            : 'Who'\n                        )\n                  }\n                  disabled={activeTab === 'Who' ? !validForm : false}\n                >\n                  {activeTab !== 'Who' ? 'Continue' : 'Finish'}\n                </Button>\n              </Link>\n            </div>\n          </Columns.Column>\n        </Columns>\n      </Container>\n    </div>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport Heading from 'react-bulma-components/lib/components/heading'\nimport Button from 'react-bulma-components/lib/components/button'\nimport Dropdown from 'react-bulma-components/lib/components/dropdown'\nimport Modal from 'react-bulma-components/lib/components/modal'\nimport Section from 'react-bulma-components/lib/components/section'\nimport {\n  Field,\n  Control,\n  Input,\n  Label,\n} from 'react-bulma-components/lib/components/form'\nimport Media from 'react-bulma-components/lib/components/media'\nimport Content from 'react-bulma-components/lib/components/content'\nimport Box from 'react-bulma-components/lib/components/box'\nimport { Editor } from '@tinymce/tinymce-react'\nimport { MoreVertical, Edit, XCircle } from 'react-feather'\n\nexport default function PostCard({\n  id,\n  subject,\n  message,\n  dateTime,\n  user,\n  type,\n}) {\n  const [showMenu, setShowMenu] = useState(false)\n  const [showModal, setShowModal] = useState(false)\n  const [isEditing, setIsEditing] = useState(false)\n  const [newSubject, setNewSubject] = useState(subject ? subject : '')\n  const [newMessage, setNewMessage] = useState(message ? message : '')\n\n  const deletePost = useCallback(() => {\n    var url = '/delete-' + type + '/'\n    var myHeaders = new Headers()\n    myHeaders.append('Authorization', `JWT ${localStorage.getItem('token')}`)\n    myHeaders.append('id', id)\n\n    var formdata = new FormData()\n    formdata.append('id', id)\n\n    var requestOptions = {\n      method: 'DELETE',\n      headers: myHeaders,\n      body: formdata,\n      redirect: 'follow',\n    }\n\n    fetch(url, requestOptions)\n      .then((response) => response.text())\n      .then((result) => window.location.reload())\n      .catch((error) => console.log('error', error))\n  })\n\n  const editPost = useCallback(() => {\n    var url = '/edit-' + type + '/'\n    var myHeaders = new Headers()\n    myHeaders.append('Authorization', `JWT ${localStorage.getItem('token')}`)\n    myHeaders.append('id', id)\n\n    var formdata = new FormData()\n    formdata.append('id', id)\n    formdata.append('subject', newSubject)\n    formdata.append('message', newMessage)\n\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: formdata,\n      redirect: 'follow',\n    }\n\n    fetch(url, requestOptions)\n      .then((response) => response.text())\n      .then((result) => window.location.reload())\n      .catch((error) => console.log('error', error))\n  })\n\n  var cardStyle = {\n    border: '1px solid hsl(0, 0%, 86%)',\n    borderRadius: '5px',\n    padding: '2.5%',\n    marginBottom: '20px',\n    width: '100%',\n  }\n\n  var userStyle = {\n    fontSize: '0.75rem',\n    fontWeight: 'bold',\n    marginBottom: '0',\n  }\n\n  var dateStyle = {\n    fontSize: '0.75rem',\n    fontStyle: 'italic',\n  }\n\n  var contentStyle = {\n    padding: '10px',\n  }\n\n  if (isEditing) {\n    return (\n      <div style={cardStyle}>\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <div>\n            <p style={userStyle}>{user}</p>\n            <p style={dateStyle}>{dateTime}</p>\n          </div>\n        </div>\n        <div style={contentStyle}>\n          <Field>\n            <Label>\n              Subject<span style={{ color: '#F83D34' }}>*</span>\n            </Label>\n            <Control>\n              <Input\n                value={newSubject}\n                onChange={(e) => setNewSubject(e.target.value)}\n              ></Input>\n            </Control>\n          </Field>\n          <Field>\n            <Label>\n              Message<span style={{ color: '#F83D34' }}>*</span>\n            </Label>\n            <Control>\n              <input\n                id='my-file'\n                type='file'\n                name='my-file'\n                style={{ display: 'none' }}\n              />\n              <Editor\n                initialValue={newMessage}\n                init={{\n                  height: 500,\n                  menubar: false,\n                  plugins: [\n                    'advlist autolink lists link image charmap print preview anchor',\n                    'searchreplace wordcount visualblocks code fullscreen',\n                    'insertdatetime media table contextmenu paste code',\n                  ],\n                  toolbar:\n                    'insertfile undo redo | formatselect | bold italic backcolor | \\\n                            alignleft aligncenter alignright alignjustify | \\\n                            bullist numlist outdent indent | link image media | help',\n                  file_browser_callback_types: 'image',\n                  file_picker_callback: function (callback, value, meta) {\n                    if (meta.filetype == 'image') {\n                      var input = document.getElementById('my-file')\n                      input.click()\n                      input.onchange = function () {\n                        var file = input.files[0]\n                        var reader = new FileReader()\n                        reader.onload = function (e) {\n                          callback(e.target.result, {\n                            alt: file.name,\n                          })\n                        }\n                        reader.readAsDataURL(file)\n                      }\n                    }\n                  },\n                  paste_data_images: true,\n                }}\n                onEditorChange={(content, editor) => setNewMessage(content)}\n              />\n            </Control>\n          </Field>\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <Button onClick={() => setIsEditing(false)}>Cancel</Button>\n            <Button color='primary' onClick={() => editPost()}>\n              Finish\n            </Button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <Box>\n      <Media renderAs='article'>\n        <Media.Item position='center'>\n          <Content>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <div>\n                <p style={userStyle}>{user}</p>\n                <p style={dateStyle}>{dateTime}</p>\n              </div>\n              {localStorage.getItem('user-role') === 'Administrator' && (\n                <div>\n                  <MoreVertical\n                    size={20}\n                    onClick={() => setShowMenu(!showMenu)}\n                  />\n\n                  {showMenu && (\n                    <div\n                      style={{\n                        zIndex: 1,\n                        position: 'absolute',\n                        backgroundColor: 'white',\n                        border: '1px solid hsl(0, 0%, 86%)',\n                        borderRadius: '5px',\n                        right: '20px',\n                      }}\n                    >\n                      <Dropdown.Item\n                        value='edit'\n                        onClick={() => setIsEditing(true)}\n                      >\n                        <Edit size={10} /> <strong>Edit</strong>\n                      </Dropdown.Item>\n                      <Dropdown.Item\n                        value='delete'\n                        onClick={() => setShowModal(true)}\n                      >\n                        <XCircle size={10} color='#F83D34' />{' '}\n                        <strong style={{ color: '#F83D34' }}>Delete</strong>\n                      </Dropdown.Item>\n                      <Modal\n                        show={showModal}\n                        onClose={() => setShowModal(false)}\n                        closeOnBlur={true}\n                      >\n                        <Modal.Card>\n                          <Modal.Card.Head onClose={() => setShowModal(false)}>\n                            <Modal.Card.Title>\n                              Delete Announcement\n                            </Modal.Card.Title>\n                          </Modal.Card.Head>\n                          <Section style={{ backgroundColor: 'white' }}>\n                            Are you sure you want to delete this post? You can't\n                            undo this action.\n                          </Section>\n                          <Modal.Card.Foot\n                            style={{\n                              alignItems: 'center',\n                              justifyContent: 'space-between',\n                            }}\n                          >\n                            <Button onClick={() => setShowModal(false)}>\n                              Cancel\n                            </Button>\n                            <Button\n                              color='primary'\n                              onClick={() => deletePost()}\n                            >\n                              Delete Post\n                            </Button>\n                          </Modal.Card.Foot>\n                        </Modal.Card>\n                      </Modal>\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n            <Section>\n              <Heading size={4}>{subject}</Heading>\n              <div dangerouslySetInnerHTML={{ __html: message }}></div>\n            </Section>\n          </Content>\n        </Media.Item>\n      </Media>\n    </Box>\n  )\n}","// This is the Family Updates page\n\nimport React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Container from 'react-bulma-components/lib/components/container'\nimport Columns from 'react-bulma-components/lib/components/columns'\nimport Heading from 'react-bulma-components/lib/components/heading'\nimport CommunityNavbar from '../components/communityNavbar'\nimport Button from 'react-bulma-components/lib/components/button'\nimport PostCard from '../components/postCard'\nimport SideBar from '../components/sidebar'\nimport { Coffee, Radio } from 'react-feather'\n\nimport axios from 'axios'\n\nexport default function Announcements(props) {\n  const token = localStorage.getItem('token')\n  const [announcements, setAnnouncements] = useState([])\n\n  var containerStyle = {\n    margin: '5% 5%',\n    maxWidth: '100%',\n  }\n\n  var noteStyle = {\n    fontSize: '0.75rem',\n    fontStyle: 'italic',\n    textAlign: 'center',\n    padding: '20px',\n    backgroundColor: 'hsl(0, 0%, 96%)',\n    borderRadius: '10px',\n  }\n\n  useEffect(() => {\n    axios\n      .get('/announcement', {\n        headers: {\n          Authorization: `JWT ${token}`,\n        },\n        params: {\n          name: localStorage.getItem('community-name'),\n          zipcode: localStorage.getItem('community-zipcode'),\n          is_closed: localStorage.getItem('community-is-closed'),\n        },\n      })\n      .then(\n        (response) => {\n          setAnnouncements(response.data)\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [token])\n\n  return (\n    <div>\n      <CommunityNavbar />\n      <Container style={containerStyle}>\n        <Columns isMultiline={true}>\n          <Columns.Column size={3}>\n            <SideBar />\n          </Columns.Column>\n\n          <Columns.Column size={9}>\n            <Columns>\n              <Columns.Column size={9}>\n                <Heading size={4}>Family Updates</Heading>\n              </Columns.Column>\n\n              <Columns.Column size={3}>\n                {localStorage.getItem('user-role') === 'Administrator' ? (\n                  <Link\n                    to='/create-announcement'\n                    style={{ marginRight: '10px' }}\n                  >\n                    <Button color='primary' className='is-fullwidth'>\n                      <div>\n                        <Radio size={12} style={{ marginRight: '5px' }} />\n                        Create Update\n                      </div>\n                    </Button>\n                  </Link>\n                ) : (\n                  <></>\n                )}\n              </Columns.Column>\n            </Columns>\n            <div>\n              {announcements.length > 0 ? (\n                announcements\n                  .slice()\n                  .reverse()\n                  .map((a, index) => {\n                    return (\n                      <PostCard\n                        key={index}\n                        subject={a.subject}\n                        message={a.message}\n                        dateTime={a.date_time}\n                        user={a.author_name}\n                        id={a.id}\n                        type='announcement'\n                      />\n                    )\n                  })\n              ) : (\n                <p style={noteStyle}>\n                  <Coffee size={100} color='#E5E5E5' />\n                  <br />\n                  <br />\n                  Sit tight! Nothing has been posted yet.\n                </p>\n              )}\n            </div>\n          </Columns.Column>\n        </Columns>\n      </Container>\n    </div>\n  )\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport 'react-day-picker/lib/style.css'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Editor } from '@tinymce/tinymce-react'\n\nimport Container from 'react-bulma-components/lib/components/container'\nimport Columns from 'react-bulma-components/lib/components/columns'\nimport Heading from 'react-bulma-components/lib/components/heading'\nimport CommunityNavbar from '../components/communityNavbar'\nimport SideBar from '../components/sidebar'\nimport Button from 'react-bulma-components/lib/components/button'\nimport {\n  Select,\n  Control,\n  Label,\n  Field,\n  Input,\n  Checkbox,\n  Radio,\n} from 'react-bulma-components/lib/components/form'\nimport axios from 'axios'\n\nexport default function CreateAnnouncement(props) {\n  const token = localStorage.getItem('token')\n\n  var formContainerStyle = {\n    padding: '5%',\n    border: '1px solid hsl(0, 0%, 86%)',\n    borderRadius: '10px',\n  }\n\n  var containerStyle = {\n    margin: '5% 5%',\n    maxWidth: '100%',\n  }\n\n  var checkboxStyle = {\n    fontSize: '0.75rem',\n    fontStyle: 'italic',\n    margin: '5px 0',\n    display: 'flex',\n    justifyContent: 'flex-start',\n  }\n\n  const [subject, setSubject] = useState('')\n  const [message, setMessage] = useState('')\n  const [whenPost, setWhenPost] = useState('')\n  const [month, setMonth] = useState('')\n  const [day, setDay] = useState('')\n  const [year, setYear] = useState('')\n  const [time, setTime] = useState('')\n  const [showHome, setShowHome] = useState(false)\n  const [sendEmail, setSendEmail] = useState(false)\n  const [validForm, setValidForm] = useState(false)\n  let history = useHistory()\n\n  useEffect(() => {\n    axios\n      .get('/one-community/', {\n        headers: {\n          Authorization: `JWT ${token}`,\n        },\n        params: {\n          pk: localStorage.getItem('community-id')\n        },\n      })\n      .then()\n  }, [token])\n\n  useEffect(() => {\n    setMonth(months[new Date().getMonth()])\n    setDay(new Date().getDate())\n    setYear(new Date().getFullYear())\n    setTime('12:00 AM')\n  }, [])\n\n  useEffect(() => {\n    const formValues = [subject, message, whenPost, showHome, sendEmail]\n    const notValidForm = formValues.some((formVal) => {\n      return formVal === ''\n    })\n    setValidForm(notValidForm)\n  }, [subject, message, whenPost, showHome, sendEmail])\n\n  const years = [2017, 2018, 2019, 2020, 2021, 2022, 2023]\n  const months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ]\n  const times = [\n    '12:00 AM',\n    '12:15 AM',\n    '12:30 AM',\n    '12:45 AM',\n    '1:00 AM',\n    '1:15 AM',\n    '1:30 AM',\n    '1:45 AM',\n    '2:00 AM',\n    '2:15 AM',\n    '2:30 AM',\n    '2:45 AM',\n    '3:00 AM',\n    '3:15 AM',\n    '3:30 AM',\n    '3:45 AM',\n    '4:00 AM',\n    '4:15 AM',\n    '4:30 AM',\n    '4:45 AM',\n    '5:00 AM',\n    '5:15 AM',\n    '5:30 AM',\n    '5:45 AM',\n    '5:00 AM',\n    '5:15 AM',\n    '5:30 AM',\n    '5:45 AM',\n    '5:00 AM',\n    '5:15 AM',\n    '5:30 AM',\n    '5:45 AM',\n    '6:00 AM',\n    '6:15 AM',\n    '6:30 AM',\n    '6:45 AM',\n    '7:00 AM',\n    '7:15 AM',\n    '7:30 AM',\n    '7:45 AM',\n    '8:00 AM',\n    '8:15 AM',\n    '8:30 AM',\n    '8:45 AM',\n    '9:00 AM',\n    '9:15 AM',\n    '9:30 AM',\n    '9:45 AM',\n    '10:00 AM',\n    '10:15 AM',\n    '10:30 AM',\n    '10:45 AM',\n    '11:00 AM',\n    '11:15 AM',\n    '11:30 AM',\n    '11:45 AM',\n    '12:00 PM',\n    '12:15 PM',\n    '12:30 PM',\n    '12:45 PM',\n    '1:00 PM',\n    '1:15 PM',\n    '1:30 PM',\n    '1:45 PM',\n    '2:00 PM',\n    '2:15 PM',\n    '2:30 PM',\n    '2:45 PM',\n    '3:00 PM',\n    '3:15 PM',\n    '3:30 PM',\n    '3:45 PM',\n    '4:00 PM',\n    '4:15 PM',\n    '4:30 PM',\n    '4:45 PM',\n    '5:00 PM',\n    '5:15 PM',\n    '5:30 PM',\n    '5:45 PM',\n    '6:00 PM',\n    '6:15 PM',\n    '6:30 PM',\n    '6:45 PM',\n    '7:00 PM',\n    '7:15 PM',\n    '7:30 PM',\n    '7:45 PM',\n    '8:00 PM',\n    '8:15 PM',\n    '8:30 PM',\n    '8:45 PM',\n    '9:00 PM',\n    '9:15 PM',\n    '9:30 PM',\n    '9:45 PM',\n    '10:00 PM',\n    '10:15 PM',\n    '10:30 PM',\n    '10:45 PM',\n    '11:00 PM',\n    '11:15 PM',\n    '11:30 PM',\n    '11:45 PM',\n  ]\n  const count = [\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n  ]\n\n  const handleSubmit = useCallback(() => {\n    let dateTime =\n      new Date().toLocaleDateString() +\n      ' at ' +\n      new Date().toLocaleTimeString([], {\n        hour: 'numeric',\n        minute: '2-digit',\n        hour12: true,\n      })\n\n    if (whenPost === 'Schedule for Later') {\n      dateTime =\n        new Date(year, months.indexOf(month), day).toLocaleDateString() +\n        ' at ' +\n        time\n    }\n\n    const param = JSON.stringify({\n      subject: subject,\n      message: message,\n      date_time: dateTime,\n      show_on_page: showHome.toString(),\n      user: localStorage.getItem('email'),\n      community: localStorage.getItem('community-name'),\n      author_name: '',\n    })\n\n    axios\n      .post('/add-announcement/', param, {\n        headers: {\n          Authorization: `JWT ${token}`,\n          'Content-Type': 'application/json',\n        },\n      })\n      .then(\n        (response) => {\n          history.push('/announcements')\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [subject, message, month, day, year, time, showHome])\n\n  return (\n    <div>\n      <CommunityNavbar />\n      <Container style={containerStyle}>\n        <Columns isMultiline={true}>\n          <Columns.Column size={3}>\n            <SideBar />\n          </Columns.Column>\n          <Columns.Column size={9}>\n            <Heading size={4}>Create Update</Heading>\n            <div style={formContainerStyle}>\n              <Field>\n                <Label>\n                  Subject<span style={{ color: '#F83D34' }}>*</span>\n                </Label>\n                <Control>\n                  <Input\n                    value={subject}\n                    onChange={(e) => setSubject(e.target.value)}\n                  />\n                </Control>\n              </Field>\n              <Field>\n                <Label>\n                  When to Post<span style={{ color: '#F83D34' }}>*</span>\n                </Label>\n                <Control style={{ marginBottom: '10px' }}>\n                  <Radio\n                    onChange={(e) => setWhenPost(e.target.value)}\n                    checked={whenPost === 'Now'}\n                    value='Now'\n                  >\n                    {' '}\n                    Now\n                  </Radio>\n                  <Radio\n                    onChange={(e) => setWhenPost(e.target.value)}\n                    checked={whenPost === 'Schedule for Later'}\n                    value='Schedule for Later'\n                  >\n                    {' '}\n                    Schedule for Later\n                  </Radio>\n                </Control>\n                <Control>\n                  <Select\n                    onChange={(e) => setMonth(e.target.value)}\n                    name='month'\n                    value={month}\n                    style={{ marginRight: '10px' }}\n                    disabled={whenPost !== 'Schedule for Later'}\n                  >\n                    {months.map((m) => (\n                      <option>{m}</option>\n                    ))}\n                  </Select>\n                  <Select\n                    onChange={(e) => setDay(e.target.value)}\n                    name='day'\n                    value={day}\n                    style={{ marginRight: '10px' }}\n                    disabled={whenPost !== 'Schedule for Later'}\n                  >\n                    {count.slice(0, 31).map((d) => (\n                      <option>{d}</option>\n                    ))}\n                  </Select>\n                  <Select\n                    onChange={(e) => setYear(e.target.value)}\n                    name='year'\n                    value={year}\n                    style={{ marginRight: '10px' }}\n                    disabled={whenPost !== 'Schedule for Later'}\n                  >\n                    {years.map((y) => (\n                      <option>{y}</option>\n                    ))}\n                  </Select>\n                  <Select\n                    onChange={(e) => setTime(e.target.value)}\n                    name='time'\n                    value={time}\n                    disabled={whenPost !== 'Schedule for Later'}\n                  >\n                    {times.map((t) => (\n                      <option>{t}</option>\n                    ))}\n                  </Select>\n                </Control>\n              </Field>\n              <Field>\n                <Label>\n                  Message<span style={{ color: '#F83D34' }}>*</span>\n                </Label>\n                <Control>\n                <input id=\"my-file\" type=\"file\" name=\"my-file\" style={{display:\"none\"}} />\n                <Editor\n                  initialValue={message}\n                  init={{\n                    height: 500,\n                    menubar: false,\n                    plugins: [\n                        'advlist autolink lists link image charmap print preview anchor',\n                        'searchreplace wordcount visualblocks code fullscreen',\n                        'insertdatetime media table contextmenu paste code'\n                    ],\n                    toolbar: 'insertfile undo redo | formatselect | bold italic backcolor | \\\n                              alignleft aligncenter alignright alignjustify | \\\n                              bullist numlist outdent indent | link image media | help',\n                    file_browser_callback_types: 'image',\n                    file_picker_callback: function (callback, value, meta) {\n                      if (meta.filetype === 'image') {\n                          var input = document.getElementById('my-file');\n                          input.click()\n                          input.onchange = function () {\n                              var file = input.files[0];\n                              var reader = new FileReader();\n                              reader.onload = function (e) {\n                                  callback(e.target.result, {\n                                      alt: file.name\n                                  })\n                              }\n                              reader.readAsDataURL(file);\n                          };\n                      }\n                    },\n                    paste_data_images: true,\n                  }}\n                  onEditorChange={(content, editor) => setMessage(content)}\n                />\n                </Control>\n              </Field>\n              <Field></Field>\n              <div className='thursday' style={checkboxStyle}>\n                <Checkbox\n                  style={{ marginRight: '10px' }}\n                  onClick={() => setShowHome(!showHome)}\n                  checked={showHome}\n                />\n                <p> Show this update on the home page</p>\n              </div>\n              <div className='thursday' style={checkboxStyle}>\n                <Checkbox\n                  style={{ marginRight: '10px' }}\n                  onClick={() => setSendEmail(!sendEmail)}\n                  checked={sendEmail}\n                />\n                <p> Send update to all community members via email</p>\n              </div>\n            </div>\n            <br />\n            <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n              <Link to='#'>\n                <Button\n                  onClick={() => handleSubmit()}\n                  color='primary'\n                  className='is-fullwidth'\n                  disabled={validForm}\n                >\n                  Finish\n                </Button>\n              </Link>\n            </div>\n          </Columns.Column>\n        </Columns>\n      </Container>\n    </div>\n  )\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport countryList from 'react-select-country-list'\nimport axios from 'axios'\n\nimport Heading from 'react-bulma-components/lib/components/heading'\nimport Card from 'react-bulma-components/lib/components/card';\nimport Media from 'react-bulma-components/lib/components/media';\nimport Content from 'react-bulma-components/lib/components/content';\nimport Button from 'react-bulma-components/lib/components/button'\nimport Columns from 'react-bulma-components/lib/components/columns'\nimport {\n  Field,\n  Control,\n  Input,\n  Select,\n  Label\n} from 'react-bulma-components/lib/components/form'\n\nimport CommunityNavbar from '../components/communityNavbar'\n\nexport default function CommunityOneMember(props) {\n    var containerStyle = {\n        margin: '5% auto',\n        maxWidth: '600px',\n        padding: '2rem',\n        border: '0.1rem solid #E5E5E5',\n        borderRadius: '1rem'\n    }\n\n    const [isEditing, setIsEditing] = useState(false)\n    const [isRemoving, setIsRemoving] = useState(false)\n    const [newFirstName, setNewFirstName] = useState(props.location.state ? props.location.state.first_name : '')\n    const [newLastName, setNewLastName] = useState(props.location.state ? props.location.state.last_name : '')\n    const [newEmail, setNewEmail] = useState(props.location.state ? props.location.state.email : '')\n    const [newPhoneNumber1, setNewPhoneNumber1] = useState(props.location.state ? props.location.state.phone_number_1 : '')\n    const [newPhoneNumber1Type, setNewPhoneNumber1Type] = useState(props.location.state ? props.location.state.phone_number_1_type : '')\n    const [newPhoneNumber2, setNewPhoneNumber2] = useState(props.location.state ? props.location.state.phone_number_2 : '')\n    const [newPhoneNumber2Type, setNewPhoneNumber2Type] = useState(props.location.state ? props.location.state.phone_number_2_type : '')\n    const [newAddressLine1, setNewAddressLine1] = useState(props.location.state ? props.location.state.address_line_1 : '')\n    const [newAddressLine2, setNewAddressLine2] = useState(props.location.state ? props.location.state.address_line_2 : '')\n    const [newCity, setNewCity] = useState(props.location.state ? props.location.state.city : '')\n    const [newState, setNewState] = useState(props.location.state ? props.location.state.state : '')\n    const [newZipcode, setNewZipcode] = useState(props.location.state ? props.location.state.zipcode : '')\n    const [newCountry, setNewCountry] = useState(props.location.state ? props.location.state.country : '')\n    const [newRole, setNewRole] = useState(props.location.state ? props.location.state.role : '')\n    const [pk, setUserPk] = useState(props.location.state ? props.location.state.pk : -1)\n    const [validForm, setValidForm] = useState(false)\n    let history = useHistory()\n\n    const roleMap = {\n        'Community Leader': 'COMM_LEADER',\n        'Coordinator': 'COORDINATOR',\n        'Community Member': 'COMM_MEMBER'\n    }\n\n    const removeMember = useCallback(() => {\n        var url = '/edit-user/' + pk + '/'\n        var myHeaders = new Headers()\n        myHeaders.append('Authorization', `JWT ${localStorage.getItem('token')}`)\n        myHeaders.append('id', pk)\n\n        var formdata = new FormData()\n        formdata.append('first_name', newFirstName)\n        formdata.append('last_name', newLastName)\n        formdata.append('email', newEmail)\n\n        var requestOptions = {\n            method: 'DELETE',\n            headers: myHeaders,\n            body: formdata,\n            redirect: 'follow'\n        }\n\n        fetch(url, requestOptions)\n        .then(response => response.text())\n        .then(result => history.push('/community-people'))\n        .catch(error => console.log('error', error));\n    })\n\n    const editRole = useCallback(() => {\n        const param = JSON.stringify({\n            'community-id': localStorage.getItem('community-id'),\n            'user-email': newEmail,\n            'role': roleMap[newRole],\n        })\n        axios.post('/edit-community-user-role/', param, {\n            headers: {\n            'Authorization': `JWT ${localStorage.getItem('token')}`,\n            'Content-Type': 'application/json',\n            },\n        })\n        .catch(error => console.log('error', error)\n        )\n    }, [newEmail, newRole])\n\n\n    const editMember = useCallback(() => {\n        // Edit user's information. First_name, last_name, and email are required. \n        var url = '/edit-user/' + pk + '/'\n        var myHeaders = new Headers()\n        myHeaders.append('Authorization', `JWT ${localStorage.getItem('token')}`)\n        myHeaders.append('id', pk)\n\n        var formdata = new FormData();\n        formdata.append('first_name', newFirstName)\n        formdata.append('last_name', newLastName)\n        formdata.append('email', newEmail)\n        formdata.append('phone_number_1', newPhoneNumber1)\n        formdata.append('phone_number_1_type', newPhoneNumber1Type)\n        formdata.append('phone_number_2', newPhoneNumber2)\n        formdata.append('phone_number_2_type', newPhoneNumber2Type)\n        formdata.append('address_line_1', newAddressLine1)\n        formdata.append('address_line_2', newAddressLine2)\n        formdata.append('city', newCity)\n        formdata.append('state', newState)\n        formdata.append('zipcode', newZipcode)\n        formdata.append('country', newCountry)\n\n        var requestOptions = {\n            method: 'PUT',\n            headers: myHeaders,\n            body: formdata,\n            redirect: 'follow'\n        }\n\n        // Change the user's role\n        editRole()\n\n        fetch(url, requestOptions)\n        .then(response => response.text())\n        .then(result => {\n            history.push('/community-people')\n        })\n        .catch(error => console.log('error', error))\n    })\n\n    useEffect(() => {\n        const formValues = [newEmail]\n        const notValidForm =\n        formValues.some((formVal) => {\n            return formVal === localStorage.getItem('email')\n        })\n        setValidForm(notValidForm)\n    }, [newEmail])\n\n    if(isEditing) {\n        return (\n            <div>\n                <CommunityNavbar />\n                <Card style={containerStyle}>\n                    <Media>\n                        <Media.Item>\n                            <Heading size={4}>Edit Profile</Heading>\n                        </Media.Item>\n                    </Media>\n\n\n                    <Heading size={6}>Basic Information</Heading>\n                    <Columns>\n                        <Columns.Column>\n                            <Field>         \n                                <Label>First name</Label>\n                                <Control>\n                                <Input\n                                    name=\"First Name\" placeholder={newFirstName} value={newFirstName} onChange={(e) => setNewFirstName(e.target.value)}\n                                />\n                                </Control>\n                            </Field>\n                        </Columns.Column>\n                        <Columns.Column>\n                        <Field>         \n                            <Label>Last name</Label>\n                            <Control>\n                            <Input\n                                name=\"Last Name\" placeholder={newLastName} value={newLastName} onChange={(e) => setNewLastName(e.target.value)}\n                            />\n                            </Control>\n                        </Field>\n                        </Columns.Column>\n                    </Columns>\n                    <Field>\n                        <Label>Role</Label>\n                        <Control>\n                        <Select onChange={(e) => setNewRole(e.target.value)} name=\"role\" value={newRole}>\n                            <option>Community Member</option>\n                            <option>Coordinator</option>\n                            <option>Community Leader</option>\n                        </Select>\n                        </Control>\n                    </Field> \n\n\n                    <Heading size={6} style={{marginTop: '8%'}}>Contact Info</Heading>\n                    <Field>         \n                        <Label>Email</Label>\n                        <Control>\n                        <Input\n                            name=\"Email\" type=\"email\" placeholder={newEmail} value={newEmail} onChange={(e) => setNewEmail(e.target.value)}\n                        />\n                        </Control>\n                    </Field>\n                    <Columns>\n                        <Columns.Column>\n                            <Field>\n                                <Label>Primary Phone Number</Label>\n                                <Control>\n                                <Input\n                                    value={newPhoneNumber1}\n                                    onChange={(e) => setNewPhoneNumber1(e.target.value)}\n                                    placeholder={newPhoneNumber1}\n                                />\n                                </Control>\n                            </Field>\n                        </Columns.Column>\n                        <Columns.Column>\n                            <Label>Type</Label>\n                            <Field>\n                                <Control>\n                                <Select onChange={(e) => setNewPhoneNumber1Type(e.target.value)} name=\"phoneNumber1Type\" value={newPhoneNumber1Type}>\n                                    <option>Mobile</option>\n                                    <option>Home</option>\n                                    <option>Work</option>\n                                </Select>\n                                </Control>\n                            </Field>\n                        </Columns.Column>\n                    </Columns>\n                    <Columns>\n                        <Columns.Column>\n                            <Field>\n                                <Label>Secondary Phone Number</Label>\n                                <Control>\n                                <Input\n                                    value={newPhoneNumber2}\n                                    onChange={(e) => setNewPhoneNumber2(e.target.value)}\n                                    placeholder={newPhoneNumber2}\n                                />\n                                </Control>\n                            </Field>\n                        </Columns.Column>\n                        <Columns.Column>\n                            <Label>Type</Label>\n                            <Field>\n                                <Control>\n                                <Select onChange={(e) => setNewPhoneNumber2Type(e.target.value)} name=\"phoneNumber2Type\" value={newPhoneNumber2Type}>\n                                    <option>Mobile</option>\n                                    <option>Home</option>\n                                    <option>Work</option>\n                                </Select>\n                                </Control>\n                            </Field>\n                        </Columns.Column>\n                    </Columns>\n\n                    <Field>         \n                        <Label>Address line 1</Label>\n                        <Control>\n                        <Input\n                            name=\"Adress line 1\" placeholder={newAddressLine1} value={newAddressLine1} onChange={(e) => setNewAddressLine1(e.target.value)}\n                        />\n                        </Control>\n                    </Field>\n                    <Field>         \n                        <Label>Address line 2</Label>\n                        <Control>\n                        <Input\n                            name=\"Adress line 2\" placeholder={newAddressLine2} value={newAddressLine2} onChange={(e) => setNewAddressLine2(e.target.value)}\n                        />\n                        </Control>\n                    </Field>\n                    <Field>         \n                        <Label>City/Town</Label>\n                        <Control>\n                        <Input\n                            name=\"city\" placeholder={newCity} value={newCity} onChange={(e) => setNewCity(e.target.value)}\n                        />\n                        </Control>\n                    </Field>\n                    \n                    <Columns>\n                        <Columns.Column>\n                            <Field>         \n                                <Label>State</Label>\n                                <Control>\n                                <Input\n                                    name=\"state\" placeholder={newState} value={newState} onChange={(e) => setNewState(e.target.value)}\n                                />\n                                </Control>\n                            </Field>\n                        </Columns.Column>\n                        <Columns.Column>\n                            <Field>         \n                                <Label>Zipcode</Label>\n                                <Control>\n                                <Input\n                                    name=\"zipcode\" placeholder={newZipcode} value={newZipcode} onChange={(e) => setNewZipcode(e.target.value)}\n                                />\n                                </Control>\n                            </Field>\n                        </Columns.Column>\n                    </Columns>\n                    <Field>         \n                        <Label>Country</Label>\n                        <Select\n                            name='country'\n                            value={newCountry}\n                            onChange={(e) => setNewCountry(e.target.value)}\n                        >\n                            {countryList()\n                            .getLabels()\n                            .map((c, index) => (\n                                <option style={{ position: 'static' }} value={c} key={index}>\n                                {c}\n                                </option>\n                            ))}\n                        </Select>\n                    </Field>        \n\n                    <Columns style={{marginTop: '5%'}}>\n                        <Columns.Column size={6}>\n                            <Button\n                                className='is-primary is-inverted'\n                                onClick={() => setIsEditing(false)}\n                                style={{\n                                    marginBottom: '1rem',\n                                    boxShadow: '1px 1px 3px 2px rgba(0,0,0,0.1)',\n                                }}\n                                fullwidth={true}\n                            >\n                                Cancel\n                            </Button>\n                        </Columns.Column>\n                        <Columns.Column size={6}>\n                            <Button\n                                onClick={() => editMember()}\n                                style={{\n                                    marginBottom: '1rem',\n                                    boxShadow: '1px 1px 3px 2px rgba(0,0,0,0.1)',\n                                }}\n                                fullwidth={true}\n                                color='primary'\n                                disabled={validForm}\n                            >\n                                Save\n                            </Button>\n                        </Columns.Column>\n                    </Columns>\n                </Card>\n            </div>\n        )\n    }\n\n    if(isRemoving) {\n        return (\n            <div>\n                <CommunityNavbar />\n                    <Card style={containerStyle}>\n                        <Content>\n                            <p>\n                                Are you sure you want to remove {props.location.state.first_name} {props.location.state.last_name} from {localStorage.getItem('community-name')}'s care community?\n                            </p>\n                        </Content>\n                        <Columns>\n                            <Columns.Column size={6}>\n                                <Button\n                                    className='is-primary is-inverted'\n                                    onClick={() => setIsRemoving(false)}\n                                    style={{\n                                        marginBottom: '1rem',\n                                        boxShadow: '1px 1px 3px 2px rgba(0,0,0,0.1)',\n                                    }}\n                                    fullwidth={true}\n                                >\n                                    Cancel\n                                </Button>\n                            </Columns.Column>\n                            <Columns.Column size={6}>\n                                <Button\n                                    onClick={() => removeMember()}\n                                    style={{\n                                        marginBottom: '1rem',\n                                        boxShadow: '1px 1px 3px 2px rgba(0,0,0,0.1)',\n                                    }}\n                                    fullwidth={true}\n                                    color='danger'\n                                    disabled={validForm}\n                                >\n                                    Remove\n                                </Button>\n                            </Columns.Column>\n                        </Columns>\n                    </Card>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <CommunityNavbar />\n            <Card style={containerStyle}>\n                <Card.Content>\n                    <Media>\n                        <Media.Item>\n                            <Heading size={4}>{newFirstName} {newLastName}</Heading>\n                            <Heading subtitle size={6}>{newRole}</Heading>\n                        </Media.Item>\n                    </Media>\n                    <Content>\n                        <p>\n                            Phone Number: {newPhoneNumber1}\n                            <br />\n                            Email: {newEmail}\n                        </p>\n                    </Content>\n                </Card.Content>\n                {localStorage.getItem('user-role') === 'Administrator' ? \n                    <Columns>\n                        <Columns.Column size={6}>\n                            <Button\n                                style={{\n                                    marginBottom: '1rem',\n                                    boxShadow: '1px 1px 3px 2px rgba(0,0,0,0.1)',\n                                }}\n                                color='primary'\n                                fullwidth={true}\n                                onClick={() => setIsEditing(true)}\n                                disabled={validForm}\n                            >\n                                Edit Profile\n                            </Button>\n                        </Columns.Column>\n                        <Columns.Column size={6}>\n                            <Button\n                                style={{\n                                    marginBottom: '1rem',\n                                    boxShadow: '1px 1px 3px 2px rgba(0,0,0,0.1)',\n                                }}\n                                color='danger'\n                                fullwidth={true}\n                                onClick={() => setIsRemoving(true)}\n                                disabled={validForm}\n                            >\n                                Remove User\n                            </Button>                       \n                        </Columns.Column>\n                    </Columns>\n                    :\n                    <></>\n                }\n            </Card>\n        </div>\n    )\n}\n\nCommunityOneMember.propTypes = {\n    first_name: PropTypes.string,\n    last_name: PropTypes.string,\n    email: PropTypes.string,\n    phone_number_1: PropTypes.string,\n    phone_number_1_type: PropTypes.string,\n    phone_number_2: PropTypes.string,\n    phone_number_2_type: PropTypes.string,\n    address_line_1: PropTypes.string,\n    address_line_2: PropTypes.string,\n    city: PropTypes.string,\n    state: PropTypes.string,\n    zipcode: PropTypes.string,\n    country: PropTypes.string,\n    role: PropTypes.string,\n    pk: PropTypes.number,\n}\n\n","import React, { useState, useCallback, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport Container from 'react-bulma-components/lib/components/container'\nimport Heading from 'react-bulma-components/lib/components/heading'\nimport { Link } from 'react-router-dom'\n\nimport {\n    Control,\n    Label,\n    Field,\n    Input,\n} from 'react-bulma-components/lib/components/form'\nimport Columns from 'react-bulma-components/lib/components/columns'\nimport Button from 'react-bulma-components/lib/components/button'\n\nimport CommunityNavbar from '../components/communityNavbar'\n\n\nexport default function CommunityAddMembers() {\n    var containerStyle = {\n        margin: '5% auto',\n        maxWidth: '800px',\n        maxHeight: '1000px',\n        padding: '4rem',\n        border: '0.1rem solid #E5E5E5',\n        borderRadius: '1rem'\n    }\n\n    const [inputEmail, setInputEmail] = useState('')\n    const [allEmails, setAllEmails] = useState([])\n    const [firstName, setFirstName] = useState('') // User sending the email\n    const [lastName, setLastName] = useState('') // User sending the email\n    const [success, setSuccess] = useState(false)\n\n    const addEmail = useCallback((email) => {\n        setAllEmails(allEmails.concat(email))\n        setInputEmail('')\n    })\n\n    useEffect(() => {\n        if (localStorage.getItem('token')) {\n            fetch('/current_user/', {\n                headers: {\n                    Authorization: `JWT ${localStorage.getItem('token')}`\n                }\n            })\n                .then(res => res.json())\n                .then(json => {\n                    setFirstName(json.first_name)\n                    setLastName(json.last_name)\n                })\n        }\n    }, [])\n\n    let history = useHistory()\n    const sendEmail = useCallback((fromEmail, toEmails, community, sender) => {\n        setSuccess(true)\n        fetch('/invite-members/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('token')}`\n            },\n            body: JSON.stringify({ \n                from_email: fromEmail,\n                to_emails: toEmails,\n                community: community,\n                sender: sender\n            }),\n        })\n            .then((res) => res.json())\n            .then((json) => { setSuccess(true) },\n            (error) => {\n                console.log(error)\n            }) \n    }, [])\n\n    if(success) {\n        return (\n            <div>\n                <CommunityNavbar />\n                <Container style={containerStyle}>\n                    An email has been sent to the addresses you provided. \n                    <br />\n                    <Button\n                        className='is-primary is-inverted'\n                        style={{\n                            marginTop: '3%',\n                            boxShadow: '1px 1px 3px 2px rgba(0,0,0,0.1)',\n                        }}\n                        onClick={() => setSuccess(false)}\n                    >\n                        Back\n                    </Button> \n                </Container>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <CommunityNavbar />\n            <Container style={containerStyle}>\n                <Heading size={4}>Invite Members</Heading>\n                <strong>Send from:</strong> {localStorage.getItem('email')}\n\n                <Field>\n                    <Label>Send to:</Label>\n                    <Control>\n                        <Columns>\n                            <Columns.Column size={10}>\n                                <Input\n                                    value={inputEmail}\n                                    onChange={e => setInputEmail(e.target.value)}\n                                    placeholder='Enter email address to send invites to your community.'\n                                />\n                            </Columns.Column>\n                            <Columns.Column>\n                                <Button\n                                    style={{ marginBottom: '1rem' }}\n                                    color='primary'\n                                    onClick={() => addEmail(inputEmail)}\n                                >\n                                    Add\n                            </Button>\n                            </Columns.Column>\n                        </Columns>\n                    </Control>\n                </Field>\n\n                <ul>\n                    {allEmails.map(e => (\n                        <li key={e}>{e}</li>\n                    ))}\n                </ul>\n\n                <br />\n                <strong>Subject:</strong> [Here to Serve] Join {localStorage.getItem('community-name')}'s Care Community\n                <br />\n                <br />\n                <strong>Message:</strong> {firstName} {lastName} has invited you to join {localStorage.getItem('community-name')}'s Care Community.\n                Please click <Link to='/'>here</Link> to access the volunteer platform.\n\n                <Columns style={{marginTop: '5%'}}>\n                    <Columns.Column>\n                        <Link to='/community-people'>\n                            <Button\n                                className='is-primary is-inverted'\n                                style={{\n                                    marginBottom: '1rem',\n                                    boxShadow: '1px 1px 3px 2px rgba(0,0,0,0.1)',\n                                }}\n                                fullwidth={true}\n                            >\n                                Cancel\n                            </Button>\n                        </Link>\n                    </Columns.Column>\n                    <Columns.Column>\n                        <Button\n                            color='primary'\n                            style={{\n                                marginBottom: '1rem',\n                                boxShadow: '1px 1px 3px 2px rgba(0,0,0,0.1)',\n                            }}\n                            fullwidth={true}\n                            onClick={() => \n                                sendEmail(\n                                    localStorage.getItem('email'),\n                                    allEmails,\n                                    localStorage.getItem('community-name'),\n                                    firstName + ' ' + lastName,\n                                )\n                            }\n                        >\n                            Send Invite\n                        </Button>\n                    </Columns.Column>\n                </Columns>\n\n\n            </Container>\n        </div >\n    )\n}","import React, { useState, useEffect, useCallback } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\n\nimport Container from 'react-bulma-components/lib/components/container'\nimport Columns from 'react-bulma-components/lib/components/columns'\nimport Heading from 'react-bulma-components/lib/components/heading'\nimport {\n    Input,\n    Control,\n    Field,\n    Label,\n    Textarea,\n    InputFile,\n    Select\n} from 'react-bulma-components/lib/components/form'\nimport Image from 'react-bulma-components/lib/components/image';\nimport Icon from 'react-bulma-components/lib/components/icon';\nimport Button from 'react-bulma-components/lib/components/button';\n\nimport SideBar from '../components/sidebar'\nimport CommunityNavbar from '../components/communityNavbar'\nimport CheckboxField from '../components/checkboxfield'\n\nexport default function CommunityEdit() {\n    var containerStyle = {\n        margin: '5% 5%',\n        maxWidth: '100%',\n    }\n\n    const [communityName, setCommunityName] = useState('')\n    const [communityDescription, setCommunityDescription] = useState('')\n    const [communityZipcode, setCommunityZipcode] = useState('')\n    const [homePageHighlight, setHomePageHighlight] = useState('')\n    const [showLeaders, setShowLeaders] = useState(true)\n    const [communityTimezone, setCommunityTimezone] = useState('')\n    const [communityVisibility, setCommunityVisibility] = useState(true)\n    const pk = localStorage.getItem('community-id')\n\n    // Homepage image\n    const [photoFile, setPhotoFile] = useState('')\n    const [photoURL, setPhotoURL] = useState('')\n\n    const timeZones = [\n        'Africa/Abidjan', 'Africa/Accra', 'Africa/Addis_Ababa', 'Africa/Algiers', 'Africa/Asmara', 'Africa/Asmera', 'Africa/Bamako', 'Africa/Bangui', 'Africa/Banjul', 'Africa/Bissau', 'Africa/Blantyre', 'Africa/Brazzaville', 'Africa/Bujumbura', 'Africa/Cairo', 'Africa/Casablanca', 'Africa/Ceuta', 'Africa/Conakry', 'Africa/Dakar', 'Africa/Dar_es_Salaam', 'Africa/Djibouti', 'Africa/Douala', 'Africa/El_Aaiun', 'Africa/Freetown', 'Africa/Gaborone', 'Africa/Harare', 'Africa/Johannesburg', 'Africa/Juba', 'Africa/Kampala', 'Africa/Khartoum', 'Africa/Kigali', 'Africa/Kinshasa', 'Africa/Lagos', 'Africa/Libreville', 'Africa/Lome', 'Africa/Luanda', 'Africa/Lubumbashi', 'Africa/Lusaka', 'Africa/Malabo', 'Africa/Maputo', 'Africa/Maseru', 'Africa/Mbabane', 'Africa/Mogadishu', 'Africa/Monrovia', 'Africa/Nairobi', 'Africa/Ndjamena', 'Africa/Niamey', 'Africa/Nouakchott', 'Africa/Ouagadougou', 'Africa/Porto-Novo', 'Africa/Sao_Tome', 'Africa/Timbuktu', 'Africa/Tripoli', 'Africa/Tunis', 'Africa/Windhoek', 'America/Adak', 'America/Anchorage', 'America/Anguilla', 'America/Antigua', 'America/Araguaina', 'America/Argentina/Buenos_Aires', 'America/Argentina/Catamarca', 'America/Argentina/ComodRivadavia', 'America/Argentina/Cordoba', 'America/Argentina/Jujuy', 'America/Argentina/La_Rioja', 'America/Argentina/Mendoza', 'America/Argentina/Rio_Gallegos', 'America/Argentina/Salta', 'America/Argentina/San_Juan', 'America/Argentina/San_Luis', 'America/Argentina/Tucuman', 'America/Argentina/Ushuaia', 'America/Aruba', 'America/Asuncion', 'America/Atikokan', 'America/Atka', 'America/Bahia', 'America/Bahia_Banderas', 'America/Barbados', 'America/Belem', 'America/Belize', 'America/Blanc-Sablon', 'America/Boa_Vista', 'America/Bogota', 'America/Boise', 'America/Buenos_Aires', 'America/Cambridge_Bay', 'America/Campo_Grande', 'America/Cancun', 'America/Caracas', 'America/Catamarca', 'America/Cayenne', 'America/Cayman', 'America/Chicago', 'America/Chihuahua', 'America/Coral_Harbour', 'America/Cordoba', 'America/Costa_Rica', 'America/Creston', 'America/Cuiaba', 'America/Curacao', 'America/Danmarkshavn', 'America/Dawson', 'America/Dawson_Creek', 'America/Denver', 'America/Detroit', 'America/Dominica', 'America/Edmonton', 'America/Eirunepe', 'America/El_Salvador', 'America/Ensenada', 'America/Fort_Nelson', 'America/Fort_Wayne', 'America/Fortaleza', 'America/Glace_Bay', 'America/Godthab', 'America/Goose_Bay', 'America/Grand_Turk', 'America/Grenada', 'America/Guadeloupe', 'America/Guatemala', 'America/Guayaquil', 'America/Guyana', 'America/Halifax', 'America/Havana', 'America/Hermosillo', 'America/Indiana/Indianapolis', 'America/Indiana/Knox', 'America/Indiana/Marengo', 'America/Indiana/Petersburg', 'America/Indiana/Tell_City', 'America/Indiana/Vevay', 'America/Indiana/Vincennes', 'America/Indiana/Winamac', 'America/Indianapolis', 'America/Inuvik', 'America/Iqaluit', 'America/Jamaica', 'America/Jujuy', 'America/Juneau', 'America/Kentucky/Louisville', 'America/Kentucky/Monticello', 'America/Knox_IN', 'America/Kralendijk', 'America/La_Paz', 'America/Lima', 'America/Los_Angeles', 'America/Louisville', 'America/Lower_Princes', 'America/Maceio', 'America/Managua', 'America/Manaus', 'America/Marigot', 'America/Martinique', 'America/Matamoros', 'America/Mazatlan', 'America/Mendoza', 'America/Menominee', 'America/Merida', 'America/Metlakatla', 'America/Mexico_City', 'America/Miquelon', 'America/Moncton', 'America/Monterrey', 'America/Montevideo', 'America/Montreal', 'America/Montserrat', 'America/Nassau', 'America/New_York', 'America/Nipigon', 'America/Nome', 'America/Noronha', 'America/North_Dakota/Beulah', 'America/North_Dakota/Center', 'America/North_Dakota/New_Salem', 'America/Ojinaga', 'America/Panama', 'America/Pangnirtung', 'America/Paramaribo', 'America/Phoenix', 'America/Port-au-Prince', 'America/Port_of_Spain', 'America/Porto_Acre', 'America/Porto_Velho', 'America/Puerto_Rico', 'America/Punta_Arenas', 'America/Rainy_River', 'America/Rankin_Inlet', 'America/Recife', 'America/Regina', 'America/Resolute', 'America/Rio_Branco', 'America/Rosario', 'America/Santa_Isabel', 'America/Santarem', 'America/Santiago', 'America/Santo_Domingo', 'America/Sao_Paulo', 'America/Scoresbysund', 'America/Shiprock', 'America/Sitka', 'America/St_Barthelemy', 'America/St_Johns', 'America/St_Kitts', 'America/St_Lucia', 'America/St_Thomas', 'America/St_Vincent', 'America/Swift_Current', 'America/Tegucigalpa', 'America/Thule', 'America/Thunder_Bay', 'America/Tijuana', 'America/Toronto', 'America/Tortola', 'America/Vancouver', 'America/Virgin', 'America/Whitehorse', 'America/Winnipeg', 'America/Yakutat', 'America/Yellowknife', 'Antarctica/Casey', 'Antarctica/Davis', 'Antarctica/DumontDUrville', 'Antarctica/Macquarie', 'Antarctica/Mawson', 'Antarctica/McMurdo', 'Antarctica/Palmer', 'Antarctica/Rothera', 'Antarctica/South_Pole', 'Antarctica/Syowa', 'Antarctica/Troll', 'Antarctica/Vostok', 'Arctic/Longyearbyen', 'Asia/Aden', 'Asia/Almaty', 'Asia/Amman', 'Asia/Anadyr', 'Asia/Aqtau', 'Asia/Aqtobe', 'Asia/Ashgabat', 'Asia/Ashkhabad', 'Asia/Atyrau', 'Asia/Baghdad', 'Asia/Bahrain', 'Asia/Baku', 'Asia/Bangkok', 'Asia/Barnaul', 'Asia/Beirut', 'Asia/Bishkek', 'Asia/Brunei', 'Asia/Calcutta', 'Asia/Chita', 'Asia/Choibalsan', 'Asia/Chongqing', 'Asia/Chungking', 'Asia/Colombo', 'Asia/Dacca', 'Asia/Damascus', 'Asia/Dhaka', 'Asia/Dili', 'Asia/Dubai', 'Asia/Dushanbe', 'Asia/Famagusta', 'Asia/Gaza', 'Asia/Harbin', 'Asia/Hebron', 'Asia/Ho_Chi_Minh', 'Asia/Hong_Kong', 'Asia/Hovd', 'Asia/Irkutsk', 'Asia/Istanbul', 'Asia/Jakarta', 'Asia/Jayapura', 'Asia/Jerusalem', 'Asia/Kabul', 'Asia/Kamchatka', 'Asia/Karachi', 'Asia/Kashgar', 'Asia/Kathmandu', 'Asia/Katmandu', 'Asia/Khandyga', 'Asia/Kolkata', 'Asia/Krasnoyarsk', 'Asia/Kuala_Lumpur', 'Asia/Kuching', 'Asia/Kuwait', 'Asia/Macao', 'Asia/Macau', 'Asia/Magadan', 'Asia/Makassar', 'Asia/Manila', 'Asia/Muscat', 'Asia/Nicosia', 'Asia/Novokuznetsk', 'Asia/Novosibirsk', 'Asia/Omsk', 'Asia/Oral', 'Asia/Phnom_Penh', 'Asia/Pontianak', 'Asia/Pyongyang', 'Asia/Qatar', 'Asia/Qostanay', 'Asia/Qyzylorda', 'Asia/Rangoon', 'Asia/Riyadh', 'Asia/Saigon', 'Asia/Sakhalin', 'Asia/Samarkand', 'Asia/Seoul', 'Asia/Shanghai', 'Asia/Singapore', 'Asia/Srednekolymsk', 'Asia/Taipei', 'Asia/Tashkent', 'Asia/Tbilisi', 'Asia/Tehran', 'Asia/Tel_Aviv', 'Asia/Thimbu', 'Asia/Thimphu', 'Asia/Tokyo', 'Asia/Tomsk', 'Asia/Ujung_Pandang', 'Asia/Ulaanbaatar', 'Asia/Ulan_Bator', 'Asia/Urumqi', 'Asia/Ust-Nera', 'Asia/Vientiane', 'Asia/Vladivostok', 'Asia/Yakutsk', 'Asia/Yangon', 'Asia/Yekaterinburg', 'Asia/Yerevan', 'Atlantic/Azores', 'Atlantic/Bermuda', 'Atlantic/Canary', 'Atlantic/Cape_Verde', 'Atlantic/Faeroe', 'Atlantic/Faroe', 'Atlantic/Jan_Mayen', 'Atlantic/Madeira', 'Atlantic/Reykjavik', 'Atlantic/South_Georgia', 'Atlantic/St_Helena', 'Atlantic/Stanley', 'Australia/ACT', 'Australia/Adelaide', 'Australia/Brisbane', 'Australia/Broken_Hill', 'Australia/Canberra', 'Australia/Currie', 'Australia/Darwin', 'Australia/Eucla', 'Australia/Hobart', 'Australia/LHI', 'Australia/Lindeman', 'Australia/Lord_Howe', 'Australia/Melbourne', 'Australia/NSW', 'Australia/North', 'Australia/Perth', 'Australia/Queensland', 'Australia/South', 'Australia/Sydney', 'Australia/Tasmania', 'Australia/Victoria', 'Australia/West', 'Australia/Yancowinna', 'Brazil/Acre', 'Brazil/DeNoronha', 'Brazil/East', 'Brazil/West', 'CET', 'CST6CDT', 'Canada/Atlantic', 'Canada/Central', 'Canada/Eastern', 'Canada/Mountain', 'Canada/Newfoundland', 'Canada/Pacific', 'Canada/Saskatchewan', 'Canada/Yukon', 'Chile/Continental', 'Chile/EasterIsland', 'Cuba', 'EET', 'EST5EDT', 'Egypt', 'Eire', 'Etc/GMT', 'Etc/GMT+0', 'Etc/GMT+1', 'Etc/GMT+10', 'Etc/GMT+11', 'Etc/GMT+12', 'Etc/GMT+2', 'Etc/GMT+3', 'Etc/GMT+4', 'Etc/GMT+5', 'Etc/GMT+6', 'Etc/GMT+7', 'Etc/GMT+8', 'Etc/GMT+9', 'Etc/GMT-0', 'Etc/GMT-1', 'Etc/GMT-10', 'Etc/GMT-11', 'Etc/GMT-12', 'Etc/GMT-13', 'Etc/GMT-14', 'Etc/GMT-2', 'Etc/GMT-3', 'Etc/GMT-4', 'Etc/GMT-5', 'Etc/GMT-6', 'Etc/GMT-7', 'Etc/GMT-8', 'Etc/GMT-9', 'Etc/GMT0', 'Etc/Greenwich', 'Etc/UCT', 'Etc/UTC', 'Etc/Universal', 'Etc/Zulu', 'Europe/Amsterdam', 'Europe/Andorra', 'Europe/Astrakhan', 'Europe/Athens', 'Europe/Belfast', 'Europe/Belgrade', 'Europe/Berlin', 'Europe/Bratislava', 'Europe/Brussels', 'Europe/Bucharest', 'Europe/Budapest', 'Europe/Busingen', 'Europe/Chisinau', 'Europe/Copenhagen', 'Europe/Dublin', 'Europe/Gibraltar', 'Europe/Guernsey', 'Europe/Helsinki', 'Europe/Isle_of_Man', 'Europe/Istanbul', 'Europe/Jersey', 'Europe/Kaliningrad', 'Europe/Kiev', 'Europe/Kirov', 'Europe/Lisbon', 'Europe/Ljubljana', 'Europe/London', 'Europe/Luxembourg', 'Europe/Madrid', 'Europe/Malta', 'Europe/Mariehamn', 'Europe/Minsk', 'Europe/Monaco', 'Europe/Moscow', 'Europe/Nicosia', 'Europe/Oslo', 'Europe/Paris', 'Europe/Podgorica', 'Europe/Prague', 'Europe/Riga', 'Europe/Rome', 'Europe/Samara', 'Europe/San_Marino', 'Europe/Sarajevo', 'Europe/Saratov', 'Europe/Simferopol', 'Europe/Skopje', 'Europe/Sofia', 'Europe/Stockholm', 'Europe/Tallinn', 'Europe/Tirane', 'Europe/Tiraspol', 'Europe/Ulyanovsk', 'Europe/Uzhgorod', 'Europe/Vaduz', 'Europe/Vatican', 'Europe/Vienna', 'Europe/Vilnius', 'Europe/Volgograd', 'Europe/Warsaw', 'Europe/Zagreb', 'Europe/Zaporozhye', 'Europe/Zurich', 'GB', 'GB-Eire', 'GMT', 'GMT0', 'Greenwich', 'Hongkong', 'Iceland', 'Indian/Antananarivo', 'Indian/Chagos', 'Indian/Christmas', 'Indian/Cocos', 'Indian/Comoro', 'Indian/Kerguelen', 'Indian/Mahe', 'Indian/Maldives', 'Indian/Mauritius', 'Indian/Mayotte', 'Indian/Reunion', 'Iran', 'Israel', 'Jamaica', 'Japan', 'Kwajalein', 'Libya', 'MET', 'MST7MDT', 'Mexico/BajaNorte', 'Mexico/BajaSur', 'Mexico/General', 'NZ', 'NZ-CHAT', 'Navajo', 'PRC', 'PST8PDT', 'Pacific/Apia', 'Pacific/Auckland', 'Pacific/Bougainville', 'Pacific/Chatham', 'Pacific/Chuuk', 'Pacific/Easter', 'Pacific/Efate', 'Pacific/Enderbury', 'Pacific/Fakaofo', 'Pacific/Fiji', 'Pacific/Funafuti', 'Pacific/Galapagos', 'Pacific/Gambier', 'Pacific/Guadalcanal', 'Pacific/Guam', 'Pacific/Honolulu', 'Pacific/Johnston', 'Pacific/Kiritimati', 'Pacific/Kosrae', 'Pacific/Kwajalein', 'Pacific/Majuro', 'Pacific/Marquesas', 'Pacific/Midway', 'Pacific/Nauru', 'Pacific/Niue', 'Pacific/Norfolk', 'Pacific/Noumea', 'Pacific/Pago_Pago', 'Pacific/Palau', 'Pacific/Pitcairn', 'Pacific/Pohnpei', 'Pacific/Ponape', 'Pacific/Port_Moresby', 'Pacific/Rarotonga', 'Pacific/Saipan', 'Pacific/Samoa', 'Pacific/Tahiti', 'Pacific/Tarawa', 'Pacific/Tongatapu', 'Pacific/Truk', 'Pacific/Wake', 'Pacific/Wallis', 'Pacific/Yap', 'Poland', 'Portugal', 'ROK', 'Singapore', 'SystemV/AST4', 'SystemV/AST4ADT', 'SystemV/CST6', 'SystemV/CST6CDT', 'SystemV/EST5', 'SystemV/EST5EDT', 'SystemV/HST10', 'SystemV/MST7', 'SystemV/MST7MDT', 'SystemV/PST8', 'SystemV/PST8PDT', 'SystemV/YST9', 'SystemV/YST9YDT', 'Turkey', 'UCT', 'US/Alaska', 'US/Aleutian', 'US/Arizona', 'US/Central', 'US/East-Indiana', 'US/Eastern', 'US/Hawaii', 'US/Indiana-Starke', 'US/Michigan', 'US/Mountain', 'US/Pacific', 'US/Pacific-New', 'US/Samoa', 'UTC', 'Universal', 'W-SU', 'WET', 'Zulu'\n    ]\n\n    useEffect(() => {\n        axios\n            .get('/one-community/', {\n                headers: {\n                    Authorization: `JWT ${localStorage.getItem('token')}`,\n                },\n                params: {\n                    pk: localStorage.getItem('community-id')\n                },\n            })\n            .then(\n                (response) => {\n                    setCommunityName(response.data[0].name)\n                    setCommunityDescription(response.data[0].description)\n                    setCommunityZipcode(response.data[0].zipcode)\n                    setHomePageHighlight(response.data[0].home_page_highlight)\n                    setShowLeaders(response.data[0].display_leaders_on_home_page === 'true')\n                    setPhotoFile(response.data[0].photo_file)\n                    setCommunityVisibility(response.data[0].is_closed === 'true')\n                    setCommunityTimezone(response.data[0].community_time_zone)\n                },\n                (error) => {\n                    console.log(error)\n                }\n            )\n    }, [])\n\n    const editCommunity = useCallback(() => {\n        var url = '/edit-community/' + pk + '/'\n        var myHeaders = new Headers()\n        myHeaders.append('Authorization', `JWT ${localStorage.getItem('token')}`)\n        myHeaders.append('id', pk)\n\n        var formdata = new FormData();\n        formdata.append('name', communityName)\n        formdata.append('description', communityDescription)\n        formdata.append('zipcode', communityZipcode)\n        formdata.append('home_page_highlight', homePageHighlight)\n        formdata.append('display_leaders_on_home_page', showLeaders.toString())\n        formdata.append('is_closed', communityVisibility.toString())\n        if (photoURL)\n            formdata.append('photo_file', photoFile)\n\n        localStorage.setItem('community-name', communityName)\n        localStorage.setItem('community-zipcode', communityZipcode)\n\n        var requestOptions = {\n            method: 'PUT',\n            headers: myHeaders,\n            body: formdata,\n            redirect: 'follow'\n        }\n\n        fetch(url, requestOptions)\n            .then(response => response.text())\n            .then(result =>\n                window.location.reload()\n            )\n            .catch(error => console.log('error', error))\n    })\n\n    return (\n        <div>\n            <CommunityNavbar />\n            <Container style={containerStyle}>\n                <Columns isMultiline={true}>\n                    <Columns.Column size={3}>\n                        <SideBar />\n                    </Columns.Column>\n                    <Columns.Column size={9}>\n                        <Heading size={4}>Community Options</Heading>\n                        <Field>\n                            <Control>\n                                <Label>\n                                    Community Name\n                                </Label>\n                                <Input\n                                    name='Community Name'\n                                    value={communityName}\n                                    onChange={(e) => setCommunityName(e.target.value)}\n                                    placeholder={communityName}\n                                />\n                                <p style={{ fontSize: '80%' }} className='has-text-grey'>\n                                    e.g., Helping Hands of Springfield, Helping Hands for Mary\n                                </p>\n                            </Control>\n                        </Field>\n                        <Field>\n                            <Control>\n                                <Label>\n                                    About Our Community\n                                </Label>\n                                <Textarea\n                                    name='Community Description'\n                                    value={communityDescription}\n                                    onChange={(e) => setCommunityDescription(e.target.value)}\n                                    placeholder={communityDescription}\n                                />\n                                <p style={{ fontSize: '80%' }} className='has-text-grey'>\n                                    This information is shown on your about page and home page\n                                </p>\n                            </Control>\n                        </Field>\n                        <Label>\n                            Homepage Photo\n                        </Label>\n                        <div style={{ width: 320, marginBottom: '3%' }}>\n                            <Field>\n                                <Control>\n                                    <InputFile\n                                        value={photoFile}\n                                        icon={<Icon icon='upload' />}\n                                        onChange={(e) => {\n                                            setPhotoURL(URL.createObjectURL(e.target.files[0]))\n                                            setPhotoFile(e.target.files[0])\n                                        }}\n                                    />\n                                </Control>\n                            </Field>\n                            <Image\n                                src={photoURL ? photoURL : photoFile}\n                            />\n                        </div>\n                        <Field style={{ maxWidth: '30%' }}>\n                            <Control>\n                                <Label>\n                                    ZIP/Postal Code\n                                </Label>\n                                <Input\n                                    name='Community Zipcode'\n                                    value={communityZipcode}\n                                    onChange={(e) => setCommunityZipcode(e.target.value)}\n                                    placeholder={communityZipcode}\n                                />\n                            </Control>\n                        </Field>\n                        <Field>\n                            <Label>Community Time Zone</Label>\n                            <Control>\n                                <Select\n                                    name='Timezone'\n                                    value={communityTimezone}\n                                    onChange={(e) => setCommunityTimezone(e.target.value)}\n                                    >\n                                    {timeZones.map((zone) => (\n                                        <option>\n                                            {zone}\n                                        </option>\n                                    ))}\n                                </Select>\n                            </Control>\n                        </Field>\n                        <Field>\n                            <Label>\n                                Community Visibility\n                            </Label>\n                            <CheckboxField\n                                checked={communityVisibility}\n                                text={'Allow friends and family to find this community by name and/or postal code.'}\n                                onChange={(e) => setCommunityVisibility(e.target.checked)}\n                            />\n                            <p style={{ fontSize: '80%' }} className='has-text-grey'>\n                                If disabled, your friends and family will only be able to find your community if they know the community id\n                            </p>\n                        </Field>\n\n                        <Heading size={4} style={{ marginTop: '5%' }}>Community Home Page</Heading>\n                        <Field>\n                            <Label>Home Page Highlight</Label>\n                            <Control>\n                                <Select name='Home Page Highlight' value={homePageHighlight} onChange={(e) => setHomePageHighlight(e.target.value)}>\n                                    <option>Calendar</option>\n                                    <option>Family Updates</option>\n                                    <option>Ways to Help</option>\n                                    <option>Message Board</option>\n                                    <option>Photo Gallery</option>\n                                    <option>Well Wishes</option>\n                                </Select>\n                            </Control>\n                            <p style={{ fontSize: '80%' }} className='has-text-grey'>\n                                This is what will show in the middle section of the community's home page.\n                            </p>\n                        </Field>\n                        <Field>\n                            <Label>\n                                Show Coordinators on Home Page\n                            </Label>\n                            <CheckboxField checked={showLeaders} text={'Display Coordinator list on home page.'} onChange={(e) => setShowLeaders(e.target.checked)} />\n                            <p style={{ fontSize: '80%' }} className='has-text-grey'>\n                                If checked, Members will see the list of Coordinators under the sections list on your Community home page\n                            </p>\n                        </Field>\n                        <Columns style={{ marginTop: '5%' }}>\n                            <Columns.Column size={3}>\n                                <Link to='/community-home'>\n                                    <Button\n                                        className='is-primary is-inverted'\n                                        style={{\n                                            marginBottom: '1rem',\n                                            boxShadow: '1px 1px 3px 2px rgba(0,0,0,0.1)',\n                                        }}\n                                        fullwidth={true}\n                                    >\n                                        Cancel\n                                    </Button>\n                                </Link>\n                            </Columns.Column>\n                            <Columns.Column size={3}>\n                                <Button\n                                    style={{\n                                        marginBottom: '1rem',\n                                        boxShadow: '1px 1px 3px 2px rgba(0,0,0,0.1)',\n                                    }}\n                                    fullwidth={true}\n                                    color='primary'\n                                    onClick={() => editCommunity()}\n                                >\n                                    Save\n                                </Button>\n                            </Columns.Column>\n                        </Columns>\n                    </Columns.Column>\n                </Columns>\n            </Container>\n        </div>\n\n    )\n}","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport { useHistory } from 'react-router-dom'\n\nimport { Input } from 'react-bulma-components/lib/components/form'\nimport Container from 'react-bulma-components/lib/components/container'\nimport Heading from 'react-bulma-components/lib/components/heading'\nimport Table from 'react-bulma-components/lib/components/table'\nimport Columns from 'react-bulma-components/lib/components/columns'\nimport Button from 'react-bulma-components/lib/components/button'\nimport { UserPlus, AlertCircle } from 'react-feather'\n\nimport CommunityNavbar from '../components/communityNavbar'\n\nexport default function CommunityPeople() {\n  var containerStyle = {\n    margin: '5% auto',\n    maxWidth: '1050px',\n    padding: '4rem',\n    border: '0.1rem solid #E5E5E5',\n    borderRadius: '1rem',\n  }\n\n  var noteStyle = {\n    color: '#E5E5E5',\n    fontStyle: 'italic',\n    margin: '15px',\n  }\n\n  const [people, setPeople] = useState([])\n  const [userRole, setUserRole] = useState('')\n  const [search, setSearch] = useState('')\n\n  let history = useHistory()\n\n  useEffect(() => {\n    axios\n      .get('/community-people/', {\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('token')}`,\n          'Content-Type': 'application/json',\n        },\n        params: JSON.stringify({\n          user: localStorage.getItem('email'),\n          community: localStorage.getItem('community-name'),\n        }),\n      })\n      .then(\n        (response) => {\n          setPeople(Array.from(response.data.people))\n          setUserRole(response.data.user_role)\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [])\n\n  return (\n    <div>\n      <CommunityNavbar />\n      <Container style={containerStyle}>\n        <Columns>\n          <Columns.Column size={6}>\n            <Heading size={4}>Community Members</Heading>\n          </Columns.Column>\n          <Columns.Column size={3}>\n            <Button\n              style={{\n                marginBottom: '1rem',\n                boxShadow: '1px 1px 3px 2px rgba(0,0,0,0.1)',\n              }}\n              color='primary'\n              onClick={() => history.push('/add-people')}\n              fullwidth={true}\n            >\n              <div>\n                <UserPlus size={12} style={{ marginRight: '5px' }} />\n                Invite Members\n              </div>\n            </Button>\n          </Columns.Column>\n          <Columns.Column size={3}>\n            <Button\n              style={{\n                marginBottom: '1rem',\n                boxShadow: '1px 1px 3px 2px rgba(0,0,0,0.1)',\n              }}\n              color='primary'\n              onClick={() => history.push('/join-requests')}\n              fullwidth={true}\n            >\n              <div>\n                <AlertCircle size={12} style={{ marginRight: '5px' }} />\n                Review Join Requests\n              </div>\n            </Button>\n          </Columns.Column>\n        </Columns>\n        <Input\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n          placeholder='Search members by name'\n          style={{ marginBottom: '3%' }}\n        />\n        <Table>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Email</th>\n              <th>Phone Number</th>\n            </tr>\n          </thead>\n          <tbody>\n            {people.filter(\n              (p) =>\n                search === '' ||\n                (p.first_name + p.last_name)\n                  .toLowerCase()\n                  .includes(search.toLowerCase())\n            ).length > 0 ? (\n              people\n                .filter(\n                  (p) =>\n                    search === '' ||\n                    (p.first_name + p.last_name)\n                      .toLowerCase()\n                      .includes(search.toLowerCase())\n                )\n                .filter((p) => p.is_approved)\n                .map((p, index) => (\n                  <tr key={index}>\n                    <td>\n                      <strong>\n                        <Link\n                          to={{\n                            pathname: 'community/' + p.first_name + p.last_name,\n                            state: {\n                              first_name: p.first_name,\n                              last_name: p.last_name,\n                              email: p.email,\n                              phone_number_1: p.phone_number_1,\n                              phone_number_1_type: p.phone_number_1_type,\n                              phone_number_2: p.phone_number_2,\n                              phone_number_2_type: p.phone_number_2_type,\n                              address_line_1: p.address_line_1,\n                              address_line_2: p.address_line_2,\n                              city: p.city,\n                              state: p.state,\n                              zipcode: p.zipcode,\n                              country: p.country,\n                              role: p.role,\n                              pk: p.pk,\n                            },\n                          }}\n                        >\n                          {p.first_name} {p.last_name}\n                        </Link>\n                      </strong>\n                      <br />\n                      {p.role}\n                    </td>\n                    <td>{p.email}</td>\n                    <td>{p.phone_number_1}</td>\n                  </tr>\n                ))\n            ) : (\n              <tr className='has-text-grey-light' style={noteStyle}>\n                <td>No members match this search.</td>\n              </tr>\n            )}\n          </tbody>\n        </Table>\n      </Container>\n    </div>\n  )\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport axios from 'axios'\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\nimport 'react-big-calendar/lib/sass/styles.scss'\nimport ImageGallery from 'react-image-gallery'\nimport '../../node_modules/react-image-gallery/styles/css/image-gallery.css'\n\nimport Container from 'react-bulma-components/lib/components/container'\nimport Box from 'react-bulma-components/lib/components/box'\nimport Menu from 'react-bulma-components/lib/components/menu'\nimport Columns from 'react-bulma-components/lib/components/columns'\nimport Heading from 'react-bulma-components/lib/components/heading'\nimport CommunityNavbar from '../components/communityNavbar'\nimport Button from 'react-bulma-components/lib/components/button'\nimport { Select, Control } from 'react-bulma-components/lib/components/form'\nimport Image from 'react-bulma-components/lib/components/image'\nimport Message from 'react-bulma-components/lib/components/message'\nimport Card from 'react-bulma-components/lib/components/card'\nimport Media from 'react-bulma-components/lib/components/media'\nimport Content from 'react-bulma-components/lib/components/content'\nimport Modal from 'react-bulma-components/lib/components/modal'\nimport Section from 'react-bulma-components/lib/components/section'\n\nimport CustomSections from '../components/customSections'\nimport {\n  Edit,\n  Home,\n  Users,\n  Mail,\n  Phone,\n  Link as LinkIcon,\n  Calendar as CalendarIcon,\n  CreditCard,\n  RefreshCw,\n  Star,\n  Layers,\n} from 'react-feather'\n\nexport default function CommunityHome(props) {\n  let history = useHistory()\n  const [description, setDescription] = useState('')\n  const [profilePhoto, setProfilePhoto] = useState('')\n  const token = localStorage.getItem('token')\n  const [coordinators, setCoordinators] = useState([])\n\n  const [selectedMonth, setSelectedMonth] = useState(moment().format('MMMM'))\n  const [selectedYear, setSelectedYear] = useState(moment().format('YYYY'))\n  const [date, setDate] = useState()\n  const localizer = momentLocalizer(moment)\n\n  const [events, setEvents] = useState([])\n\n  const [showWelcomeCard, setShowWelcomeCard] = useState(true)\n  const [showLeaders, setShowLeaders] = useState(true)\n\n  const [displayCalendar, setDisplayCalendar] = useState(false)\n  const [displayFamilyUpdates, setDisplayFamilyUpdates] = useState(false)\n  const [displayWaysToHelp, setDisplayWaystoHelp] = useState(false)\n  const [displayMessageBoard, setDisplayMessageBoard] = useState(false)\n  const [displayPhotoGallery, setDisplayPhotoGallery] = useState(false)\n  const [displayWellWishes, setDisplayWellWishes] = useState(false)\n\n  const [wellWishes, setWellWishes] = useState([])\n  const [familyUpdates, setFamilyUpdates] = useState([])\n  const [waystoHelp, setWaysToHelp] = useState('')\n  const [photoGallery, setPhotoGallery] = useState('')\n\n  const [userRole, setUserRole] = useState('')\n  const [showLeaveCommunityModal, setShowLeaveCommunityModal] = useState(false)\n\n  const years = [...Array(15).keys()].map((i) => i + 2020)\n  const months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ]\n\n  var linkStyle = {\n    fontSize: '0.8em',\n  }\n\n  var containerStyle = {\n    margin: '5% 5%',\n    maxWidth: '100%',\n  }\n\n  var noteStyle = {\n    fontSize: '0.75rem',\n    fontStyle: 'italic',\n    textAlign: 'center',\n    padding: '20px',\n    backgroundColor: 'hsl(0, 0%, 96%)',\n    borderRadius: '10px',\n  }\n\n  //adds volunteer to activity\n  const removeCommunityMember = useCallback(() => {\n    const param = JSON.stringify({\n      community: localStorage.getItem('community-id'),\n      user: localStorage.getItem('email'),\n    })\n\n    axios\n      .post('/remove-user-from-community/', param, {\n        headers: {\n          Authorization: `JWT ${token}`,\n          'Content-Type': 'application/json',\n        },\n      })\n      .then(\n        (response) => {\n          history.push('/my-communities')\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [token])\n\n  function updateDate() {\n    setDate(moment(`${selectedMonth} ${selectedYear}`, 'MMMM YYYY').toDate())\n  }\n\n  function processEvents(data) {\n    data.forEach((activity) => {\n      if (typeof activity['start_time'] === 'string') {\n        activity['start_time'] = new Date(activity['start_time'])\n        activity['end_time'] = new Date(activity['end_time'])\n        activity['title'] = activity['activity_type'] + ': ' + activity['title']\n      }\n    })\n    return data\n  }\n\n  useEffect(() => {\n    axios\n      .get('/one-community/', {\n        headers: {\n          Authorization: `JWT ${token}`,\n        },\n        params: {\n          pk: localStorage.getItem('community-id'),\n        },\n      })\n      .then(\n        (response) => {\n          setDescription(response.data[0].description)\n          setShowLeaders(response.data[0].display_leaders_on_home_page)\n          setProfilePhoto(response.data[0].photo_file)\n          if (response.data[0].home_page_highlight === 'Calendar') {\n            setDisplayCalendar(true)\n          } else if (\n            response.data[0].home_page_highlight === 'Family Updates'\n          ) {\n            setDisplayFamilyUpdates(true)\n            axios\n              .get('/announcement', {\n                headers: {\n                  Authorization: `JWT ${token}`,\n                },\n                params: {\n                  name: localStorage.getItem('community-name'),\n                  zipcode: localStorage.getItem('community-zipcode'),\n                  is_closed: localStorage.getItem('community-is-closed'),\n                },\n              })\n              .then(\n                (response) => {\n                  setFamilyUpdates(response.data)\n                },\n                (error) => {\n                  console.log(error)\n                }\n              )\n          } else if (response.data[0].home_page_highlight === 'Ways to Help') {\n            setDisplayWaystoHelp(true)\n            setWaysToHelp(response.data[0].ways_to_help)\n          } else if (response.data[0].home_page_highlight === 'Message Board') {\n            setDisplayMessageBoard(true)\n          } else if (response.data[0].home_page_highlight === 'Photo Gallery') {\n            setDisplayPhotoGallery(true)\n            axios\n              .get('/photos', {\n                headers: {\n                  Authorization: `JWT ${token}`,\n                },\n                params: {\n                  name: localStorage.getItem('community-name'),\n                  zipcode: localStorage.getItem('community-zipcode'),\n                  is_closed: localStorage.getItem('community-is-closed'),\n                },\n              })\n              .then(\n                (response) => {\n                  var gallery = []\n\n                  response.data.forEach((p) => {\n                    gallery.push({\n                      original: p.photo.split('?')[0],\n                      thumbnail: p.photo.split('?')[0],\n                      originalTitle: p.title,\n                      thumbnailTitle: p.title,\n                      description: p.description,\n                    })\n                  })\n                  setPhotoGallery(gallery)\n                },\n                (error) => {\n                  console.log(error)\n                }\n              )\n          } else if (response.data[0].home_page_highlight === 'Well Wishes') {\n            setDisplayWellWishes(true)\n            axios\n              .get('/well-wishes', {\n                headers: {\n                  Authorization: `JWT ${token}`,\n                },\n                params: {\n                  name: localStorage.getItem('community-name'),\n                  zipcode: localStorage.getItem('community-zipcode'),\n                  is_closed: localStorage.getItem('community-is-closed'),\n                },\n              })\n              .then(\n                (response) => {\n                  setWellWishes(response.data)\n                },\n                (error) => {\n                  console.log(error)\n                }\n              )\n          }\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [token])\n\n  useEffect(() => {\n    axios\n      .get(`/community-coordinators/${localStorage.getItem('community-id')}`, {\n        headers: {\n          Authorization: `JWT ${token}`,\n        },\n      })\n      .then(\n        (response) => {\n          const options = response.data.map((item) => ({\n            label: `${item['first_name']} ${item['last_name']}`,\n            value: item['id'],\n            email: item['email'],\n            phone: item['phone_number_1'],\n          }))\n          setCoordinators(options)\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [token])\n\n  useEffect(() => {\n    axios\n      .get(`/activities/${localStorage.getItem('community-id')}`, {\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('token')}`,\n        },\n      })\n      .then(\n        (response) => {\n          setEvents(response.data)\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [])\n\n  useEffect(() => {\n    axios\n      .get('/community-people/', {\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('token')}`,\n          'Content-Type': 'application/json',\n        },\n        params: JSON.stringify({\n          user: localStorage.getItem('email'),\n          community: localStorage.getItem('community-name'),\n        }),\n      })\n      .then(\n        (response) => {\n          localStorage.setItem('user-role', response.data.user_role)\n          setUserRole(response.data.user_role)\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [])\n\n  const WelcomeCardStaff = (\n    <Message color='primary'>\n      <Message.Header>\n        Welcome!\n        <Button remove onClick={() => setShowWelcomeCard(false)} />\n      </Message.Header>\n      <Message.Body>\n        Here are our top <b>3 tips</b> for getting started:\n        <br />\n        1. <Link to='/add-people'>Invite</Link> members to join this community\n        <br />\n        2. Create a <Link to='/create-new-activity'>Calendar Activity</Link> to\n        let members volunteer\n        <br />\n        3. Add an <Link to='/create-announcement'>Update</Link> to keep friends\n        and family in the loop\n      </Message.Body>\n    </Message>\n  )\n\n  const WelcomeCardMember = (\n    <Message color='primary'>\n      <Message.Header>\n        Welcome!\n        <Button remove onClick={() => setShowWelcomeCard(false)} />\n      </Message.Header>\n      <Message.Body>\n        Here are our top <strong>3 tips</strong> for getting started:\n        <br />\n        1. <Link to='/add-people'>Tell your friends</Link> to join this\n        community\n        <br />\n        2. View your <Link to='/calendar'>calendar</Link> activities\n        <br />\n        3. View <Link to='/announcements'>updates</Link> recently made to this\n        care community\n      </Message.Body>\n    </Message>\n  )\n\n  const calendar = (\n    <div>\n      <Control>\n        <Select\n          value={selectedMonth}\n          onChange={(e) => setSelectedMonth(e.target.value)}\n          style={{ marginRight: '10px' }}\n        >\n          {months.map((month, index) => (\n            <option value={month} key={index}>\n              {month}\n            </option>\n          ))}\n        </Select>\n        <Select\n          value={selectedYear}\n          onChange={(e) => setSelectedYear(e.target.value)}\n          style={{ marginRight: '10px' }}\n        >\n          {years.map((year, index) => (\n            <option value={year} key={index}>\n              {year}\n            </option>\n          ))}\n        </Select>\n        <Button\n          onClick={updateDate}\n          style={{ color: 'white', backgroundColor: '#2C8595' }}\n        >\n          <RefreshCw size={12} style={{ marginRight: '5px' }} /> Go\n        </Button>\n      </Control>\n      <br />\n      <div\n        className='rbc-calendar'\n        style={{ height: '50%', marginBottom: '3%' }}\n      >\n        <Calendar\n          localizer={localizer}\n          style={{ height: 450 }}\n          toolbar={false}\n          date={date}\n          onNavigate={(date) => setDate(date)}\n          events={processEvents(events)}\n          startAccessor='start_time'\n          endAccessor='end_time'\n          allDayAccessor='all_day'\n          popup={true}\n          eventPropGetter={(event) => ({\n            style: {\n              backgroundColor: event.color,\n            },\n          })}\n        />\n      </div>\n    </div>\n  )\n\n  const wellWishesContainer = (\n    <div>\n      {wellWishes\n        .slice()\n        .reverse()\n        .map((a, index) => {\n          return (\n            <Card key={index} style={{ marginBottom: '5%' }}>\n              <Card.Content>\n                <Media.Item style={{ marginBottom: '2%' }}>\n                  <Heading subtitle size={6}>\n                    <b>{a.author_name}</b> posted in{' '}\n                    <b className='has-theme-color'>Well Wishes</b>\n                  </Heading>\n                  <Heading size={4}>{a.subject}</Heading>\n                </Media.Item>\n                <Content>\n                  <div dangerouslySetInnerHTML={{ __html: a.message }}></div>\n                </Content>\n                <p style={{ fontSize: '80%' }} className='has-text-grey'>\n                  {a.date_time}\n                </p>\n              </Card.Content>\n            </Card>\n          )\n        })}\n    </div>\n  )\n\n  const waysToHelpContainer = (\n    <Card style={{ marginBottom: '5%' }}>\n      <Card.Content>\n        <Media.Item style={{ marginBottom: '2%' }}>\n          <Heading size={4}>Ways to Help</Heading>\n        </Media.Item>\n        <Content>\n          <div dangerouslySetInnerHTML={{ __html: waystoHelp }}></div>\n        </Content>\n      </Card.Content>\n    </Card>\n  )\n\n  const familyUpdatesContainer = (\n    <div>\n      {familyUpdates\n        .slice()\n        .reverse()\n        .map((a, index) => {\n          return (\n            <Card key={index} style={{ marginBottom: '5%' }}>\n              <Card.Content>\n                <Media.Item style={{ marginBottom: '2%' }}>\n                  <Heading subtitle size={6}>\n                    <b>{a.author_name}</b> posted in{' '}\n                    <b className='has-theme-color'>Family Updates</b>\n                  </Heading>\n                  <Heading size={4}>{a.subject}</Heading>\n                </Media.Item>\n                <Content>\n                  <div dangerouslySetInnerHTML={{ __html: a.message }}></div>\n                </Content>\n                <p style={{ fontSize: '80%' }} className='has-text-grey'>\n                  {a.date_time}\n                </p>\n              </Card.Content>\n            </Card>\n          )\n        })}\n    </div>\n  )\n\n  const photoGalleryContainer = (\n    <div>\n      {photoGallery.length === 0 ? (\n        <p style={noteStyle}>No photos have been added to this gallery.</p>\n      ) : (\n        <ImageGallery\n          items={photoGallery}\n          thumbnailPosition='right'\n          autoPlay={true}\n        />\n      )}\n    </div>\n  )\n\n  return (\n    <div>\n      <CommunityNavbar />\n      <Container style={containerStyle}>\n        <Columns isMultiline={true}>\n          <Columns.Column size={3}>\n            <Box>\n              <Image src={profilePhoto} style={{ marginBottom: '7%' }} />\n              <br />\n              <Heading size={6}>\n                <Home size={12} /> About Community\n              </Heading>\n              <p style={{ fontSize: '0.8em' }}>{description}</p>\n              <hr />\n              {showLeaders && coordinators.length !== 0 ? (\n                <div>\n                  <Heading size={6}>\n                    <Users size={12} /> Community Leaders\n                  </Heading>\n                  {coordinators.map((c, index) => (\n                    <div style={{ marginBottom: '10px' }} key={index}>\n                      <p style={{ fontWeight: 'bold', fontSize: '0.8em' }}>\n                        {c.label}\n                      </p>\n                      <p style={linkStyle}>\n                        <Mail size={10} style={{ margin: '0 5px' }} />\n                        <a\n                          href={'mailto:' + c.email}\n                          className='has-theme-color'\n                        >\n                          {c.email}\n                        </a>\n                      </p>\n                      <p style={{ fontSize: '0.8em' }}>\n                        {' '}\n                        <Phone size={10} style={{ margin: '0 5px' }} />\n                        {c.phone}\n                      </p>\n                    </div>\n                  ))}\n                </div>\n              ) : (\n                <></>\n              )}\n              {localStorage.getItem('user-role') === 'Administrator' ? (\n                <div>\n                  <hr />\n                  <Button color='primary'>\n                    <Link to='/edit-community' style={{ color: 'white' }}>\n                      <Edit size={12} /> Edit Community\n                    </Link>\n                  </Button>\n                </div>\n              ) : (\n                <div>\n                  <hr />\n                  <Button\n                    onClick={() => setShowLeaveCommunityModal(true)}\n                    style={{\n                      boxShadow: '1px 1px 3px 2px rgba(0,0,0,0.1)',\n                    }}\n                    color='primary'\n                  >\n                    Leave community\n                  </Button>\n                  <Modal\n                    show={showLeaveCommunityModal}\n                    onClose={() => setShowLeaveCommunityModal(false)}\n                    closeOnBlur={true}\n                  >\n                    <Modal.Card>\n                      <Modal.Card.Head\n                        onClose={() => setShowLeaveCommunityModal(false)}\n                      >\n                        <Modal.Card.Title>Leave Community</Modal.Card.Title>\n                      </Modal.Card.Head>\n                      <Section style={{ backgroundColor: 'white' }}>\n                        Are you sure you want to leave this community? You can't\n                        undo this action.\n                      </Section>\n                      <Modal.Card.Foot\n                        style={{\n                          alignItems: 'center',\n                          justifyContent: 'space-between',\n                        }}\n                      >\n                        <Button\n                          onClick={() => setShowLeaveCommunityModal(false)}\n                        >\n                          Cancel\n                        </Button>\n                        <Button\n                          color='primary'\n                          onClick={() => removeCommunityMember()}\n                        >\n                          Leave Community\n                        </Button>\n                      </Modal.Card.Foot>\n                    </Modal.Card>\n                  </Modal>\n                </div>\n              )}\n            </Box>\n          </Columns.Column>\n          <Columns.Column size={7}>\n            {showWelcomeCard &&\n              (localStorage.getItem('is-staff') === 'true'\n                ? WelcomeCardStaff\n                : WelcomeCardMember)}\n            {/* What to show depends on what the user specified for homepage highlight in edit community */}\n            {displayCalendar && calendar}\n            {displayWellWishes && wellWishesContainer}\n            {displayFamilyUpdates && familyUpdatesContainer}\n            {displayWaysToHelp && waysToHelpContainer}\n            {displayPhotoGallery && photoGalleryContainer}\n          </Columns.Column>\n          <Columns.Column size={2}>\n            {userRole === 'Administrator' ? (\n              <Link to='/create-new-activity' style={{ color: 'white' }}>\n                <Button color='primary' className='is-fullwidth'>\n                  <div>\n                    <CalendarIcon size={12} style={{ marginRight: '5px' }} />\n                    Create Activity\n                  </div>\n                </Button>\n              </Link>\n            ) : (\n              <Link to='#' style={{ color: 'white' }}>\n                <div>\n                  <Button color='primary' className='is-fullwidth'>\n                    My Activities\n                  </Button>\n                </div>\n              </Link>\n            )}\n            <a\n              href='https://www.heretoserve.org/'\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              <Button\n                className='is-primary is-inverted'\n                style={{\n                  marginTop: '1rem',\n                  boxShadow: '1px 1px 3px 2px rgba(0,0,0,0.1)',\n                }}\n                fullwidth={true}\n              >\n                <div>\n                  <LinkIcon size={12} style={{ marginRight: '5px' }} />\n                  Here to Serve\n                </div>\n              </Button>\n            </a>\n            <a\n              href='https://heretoserve.salsalabs.org/secureonlinedonationform/index.html'\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              <Button\n                className='is-primary is-inverted'\n                style={{\n                  marginTop: '1rem',\n                  boxShadow: '1px 1px 3px 2px rgba(0,0,0,0.1)',\n                }}\n                fullwidth={true}\n              >\n                <div>\n                  <CreditCard size={12} style={{ marginRight: '5px' }} />\n                  Donate Now!\n                </div>\n              </Button>\n            </a>\n            <br />\n            <Menu>\n              <Menu.List>\n                <CustomSections />\n                <Link to='/create-custom-section'>\n                  <p className='sidebar'>\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\n                      <Star size={12} style={{ marginRight: '10px' }} />{' '}\n                      <p>Create Custom Section</p>\n                    </div>\n                  </p>\n                </Link>\n                <Link to='/manage-custom-sections'>\n                  <p className='sidebar'>\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\n                      <Layers size={12} style={{ marginRight: '10px' }} />{' '}\n                      <p>Manage Custom Sections</p>\n                    </div>\n                  </p>\n                </Link>\n              </Menu.List>\n            </Menu>\n          </Columns.Column>\n        </Columns>\n      </Container>\n    </div>\n  )\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport axios from 'axios'\nimport { Editor } from '@tinymce/tinymce-react'\n\nimport Container from 'react-bulma-components/lib/components/container'\nimport Columns from 'react-bulma-components/lib/components/columns'\nimport Heading from 'react-bulma-components/lib/components/heading'\nimport CommunityNavbar from '../components/communityNavbar'\nimport Button from 'react-bulma-components/lib/components/button'\nimport SideBar from '../components/sidebar'\nimport { Edit, XCircle, Coffee } from 'react-feather'\n\nexport default function WaysToHelp(props) {\n  const token = localStorage.getItem('token')\n  const [isEditing, setIsEditing] = useState(false)\n  const [content, setContent] = useState('')\n  const [newContent, setNewContent] = useState('')\n\n  var containerStyle = {\n    margin: '5% 5%',\n    maxWidth: '100%',\n  }\n\n  var noteStyle = {\n    fontSize: '0.75rem',\n    fontStyle: 'italic',\n    textAlign: 'center',\n    padding: '20px',\n    backgroundColor: 'hsl(0, 0%, 96%)',\n    borderRadius: '10px',\n  }\n\n  useEffect(() => {\n    axios\n      .get('/one-community/', {\n        headers: {\n          Authorization: `JWT ${token}`,\n        },\n        params: {\n          pk: localStorage.getItem('community-id'),\n        },\n      })\n      .then(\n        (response) => {\n          setContent(response.data[0].ways_to_help)\n          setNewContent(response.data[0].ways_to_help)\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [token])\n\n  const editWaysToHelp = useCallback(() => {\n    var url = '/edit-ways-to-help/'\n    var myHeaders = new Headers()\n    myHeaders.append('Authorization', `JWT ${localStorage.getItem('token')}`)\n\n    var formdata = new FormData()\n    formdata.append('name', localStorage.getItem('community-name'))\n    formdata.append('zipcode', localStorage.getItem('community-zipcode'))\n    formdata.append('is_closed', localStorage.getItem('community-is-closed'))\n    formdata.append('ways_to_help', newContent)\n\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: formdata,\n      redirect: 'follow',\n    }\n\n    fetch(url, requestOptions)\n      .then((response) => response.text())\n      .then((result) => window.location.reload())\n      .catch((error) => console.log('error', error))\n  })\n\n  if (isEditing) {\n    return (\n      <div>\n        <CommunityNavbar />\n        <Container style={containerStyle}>\n          <Columns isMultiline={true}>\n            <Columns.Column size={3}>\n              <SideBar />\n            </Columns.Column>\n            <Columns.Column size={9}>\n              <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                <Heading size={4}>Ways to Help</Heading>\n\n                <XCircle onClick={() => setIsEditing(false)} color='#F83D34' />\n              </div>\n              <div>\n                <input\n                  id='my-file'\n                  type='file'\n                  name='my-file'\n                  style={{ display: 'none' }}\n                />\n                <Editor\n                  initialValue={newContent}\n                  init={{\n                    height: 500,\n                    menubar: false,\n                    plugins: [\n                      'advlist autolink lists link image charmap print preview anchor',\n                      'searchreplace wordcount visualblocks code fullscreen',\n                      'insertdatetime media table contextmenu paste code',\n                    ],\n                    toolbar:\n                      'insertfile undo redo | formatselect | bold italic backcolor | \\\n                              alignleft aligncenter alignright alignjustify | \\\n                              bullist numlist outdent indent | link image media | help',\n                    file_browser_callback_types: 'image',\n                    file_picker_callback: function (callback, value, meta) {\n                      if (meta.filetype ==='image') {\n                        var input = document.getElementById('my-file')\n                        input.click()\n                        input.onchange = function () {\n                          var file = input.files[0]\n                          var reader = new FileReader()\n                          reader.onload = function (e) {\n                            callback(e.target.result, {\n                              alt: file.name,\n                            })\n                          }\n                          reader.readAsDataURL(file)\n                        }\n                      }\n                    },\n                    paste_data_images: true,\n                  }}\n                  onEditorChange={(content, editor) => setNewContent(content)}\n                />\n                <br />\n                <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                  <Button color='primary' onClick={() => editWaysToHelp()}>\n                    Finish\n                  </Button>\n                </div>\n              </div>\n            </Columns.Column>\n          </Columns>\n        </Container>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <CommunityNavbar />\n      <Container style={containerStyle}>\n        <Columns isMultiline={true}>\n          <Columns.Column size={3}>\n            <SideBar />\n          </Columns.Column>\n          <Columns.Column size={9}>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <Heading size={4}>Ways to Help</Heading>\n              <Edit onClick={() => setIsEditing(true)} />\n            </div>\n            <div>\n              {content === '' ? (\n                <p style={noteStyle}>\n                  <Coffee size={100} color='#E5E5E5' />\n                  <br />\n                  <br />\n                  Sit tight! Nothing has been posted yet.\n                </p>\n              ) : (\n                <div dangerouslySetInnerHTML={{ __html: content }}></div>\n              )}\n            </div>\n          </Columns.Column>\n        </Columns>\n      </Container>\n    </div>\n  )\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport Container from 'react-bulma-components/lib/components/container'\nimport Columns from 'react-bulma-components/lib/components/columns'\nimport Heading from 'react-bulma-components/lib/components/heading'\nimport CommunityNavbar from '../components/communityNavbar'\nimport Button from 'react-bulma-components/lib/components/button'\nimport { Editor } from '@tinymce/tinymce-react'\nimport {Coffee, Edit2, X } from 'react-feather'\n\nimport SideBar from '../components/sidebar'\nimport PostCard from '../components/postCard'\n\nimport axios from 'axios'\n\nimport {\n  Control,\n  Label,\n  Field,\n  Input,\n} from 'react-bulma-components/lib/components/form'\n\nexport default function WellWishes(props) {\n  const token = localStorage.getItem('token')\n  const [showForm, setShowForm] = useState(false)\n  const [wellwishes, setWellWishes] = useState([])\n\n  const [subject, setSubject] = useState('')\n  const [message, setMessage] = useState('')\n  const [validForm, setValidForm] = useState(false)\n  let history = useHistory()\n\n  var containerStyle = {\n    margin: '5% 5%',\n    maxWidth: '100%',\n  }\n\n  var formContainerStyle = {\n    padding: '5%',\n    border: '1px solid hsl(0, 0%, 86%)',\n    borderRadius: '10px',\n    marginTop: '20px',\n  }\n\n  var noteStyle = {\n    fontSize: '0.75rem',\n    fontStyle: 'italic',\n    textAlign: 'center',\n    padding: '20px',\n    backgroundColor: 'hsl(0, 0%, 96%)',\n    borderRadius: '10px',\n  }\n\n  useEffect(() => {\n    const formValues = [subject, message]\n    const notValidForm = formValues.some((formVal) => {\n      return formVal === ''\n    })\n    setValidForm(notValidForm)\n  }, [subject, message])\n\n  const handleSubmit = useCallback(() => {\n    let dateTime =\n      new Date().toLocaleDateString() +\n      ' at ' +\n      new Date().toLocaleTimeString([], {\n        hour: 'numeric',\n        minute: '2-digit',\n        hour12: true,\n      })\n\n    const param = JSON.stringify({\n      subject: subject,\n      message: message,\n      date_time: dateTime,\n      user: localStorage.getItem('email'),\n      community: localStorage.getItem('community-name'),\n      author_name: '',\n    })\n\n    axios\n      .post('/add-well-wish/', param, {\n        headers: {\n          Authorization: `JWT ${token}`,\n          'Content-Type': 'application/json',\n        },\n      })\n      .then(\n        (response) => {\n          window.location.reload()\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [subject, message])\n\n  useEffect(() => {\n    axios\n      .get('/well-wishes', {\n        headers: {\n          Authorization: `JWT ${token}`,\n        },\n        params: {\n          name: localStorage.getItem('community-name'),\n          zipcode: localStorage.getItem('community-zipcode'),\n          is_closed: localStorage.getItem('community-is-closed'),\n        },\n      })\n      .then(\n        (response) => {\n          setWellWishes(response.data)\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [token])\n\n  return (\n    <div>\n      <CommunityNavbar />\n      <Container style={containerStyle}>\n        <Columns isMultiline={true}>\n          <Columns.Column size={3}>\n            <SideBar />\n          </Columns.Column>\n          <Columns.Column size={9}>\n            <Columns>\n              <Columns.Column size={9}>\n                <Heading size={4}>Well Wishes</Heading>\n              </Columns.Column>\n              <Columns.Column size={3}>\n                <Button\n                  onClick={() => setShowForm(!showForm)}\n                  color='primary'\n                  className='is-fullwidth'\n                >\n                  <div>\n                    {showForm ? (\n                      <X size={12} style={{ marginRight: '5px' }} />\n                    ) : (\n                      <Edit2 size={12} style={{ marginRight: '5px' }} />\n                    )}\n\n                    {showForm ? 'Hide Message Form' : 'Leave a Message'}\n                  </div>\n                </Button>\n              </Columns.Column>\n            </Columns>\n            <div>\n              <p>\n                Well Wishes is the place to drop a line to say hello, post a\n                prayer or let the family you are helping know that you’re\n                thinking about them.\n              </p>\n            </div>\n\n            {showForm && (\n              <div>\n                <div style={formContainerStyle}>\n                  <Field>\n                    <Label>\n                      Subject<span style={{ color: '#F83D34' }}>*</span>\n                    </Label>\n                    <Control>\n                      <Input\n                        value={subject}\n                        onChange={(e) => setSubject(e.target.value)}\n                      />\n                    </Control>\n                  </Field>\n                  <Field>\n                    <Label>\n                      Message<span style={{ color: '#F83D34' }}>*</span>\n                    </Label>\n                    <Control>\n                      <input\n                        id='my-file'\n                        type='file'\n                        name='my-file'\n                        style={{ display: 'none' }}\n                      />\n                      <Editor\n                        initialValue={message}\n                        init={{\n                          height: 500,\n                          menubar: false,\n                          plugins: [\n                            'advlist autolink lists link image charmap print preview anchor',\n                            'searchreplace wordcount visualblocks code fullscreen',\n                            'insertdatetime media table contextmenu paste code',\n                          ],\n                          toolbar:\n                            'insertfile undo redo | formatselect | bold italic backcolor | \\\n                              alignleft aligncenter alignright alignjustify | \\\n                              bullist numlist outdent indent | link image media | help',\n                          file_browser_callback_types: 'image',\n                          file_picker_callback: function (\n                            callback,\n                            value,\n                            meta\n                          ) {\n                            if (meta.filetype == 'image') {\n                              var input = document.getElementById('my-file')\n                              input.click()\n                              input.onchange = function () {\n                                var file = input.files[0]\n                                var reader = new FileReader()\n                                reader.onload = function (e) {\n                                  callback(e.target.result, {\n                                    alt: file.name,\n                                  })\n                                }\n                                reader.readAsDataURL(file)\n                              }\n                            }\n                          },\n                          paste_data_images: true,\n                        }}\n                        onEditorChange={(content, editor) =>\n                          setMessage(content)\n                        }\n                      />\n                    </Control>\n                  </Field>\n                </div>\n                <br />\n                <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                  <Button\n                    color='primary'\n                    disabled={validForm}\n                    onClick={() => handleSubmit()}\n                  >\n                    Finish\n                  </Button>\n                </div>\n              </div>\n            )}\n\n            <br />\n            <div>\n              {wellwishes.length > 0 ? (\n                wellwishes\n                  .slice()\n                  .reverse()\n                  .map((a, index) => {\n                    return (\n                      <PostCard\n                        key={index}\n                        subject={a.subject}\n                        message={a.message}\n                        dateTime={a.date_time}\n                        user={a.author_name}\n                        id={a.id}\n                        type='well-wish'\n                      />\n                    )\n                  })\n              ) : (\n                <p style={noteStyle}>\n                  <Coffee size={100} color='#E5E5E5' />\n                  <br />\n                  <br />\n                  Sit tight! Nothing has been posted yet.\n                </p>\n              )}\n            </div>\n          </Columns.Column>\n        </Columns>\n      </Container>\n    </div>\n  )\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useHistory } from 'react-router-dom'\n\nimport Container from 'react-bulma-components/lib/components/container'\nimport Columns from 'react-bulma-components/lib/components/columns'\nimport Heading from 'react-bulma-components/lib/components/heading'\nimport CommunityNavbar from '../components/communityNavbar'\nimport Button from 'react-bulma-components/lib/components/button'\nimport {\n  Select,\n  Control,\n  Label,\n  Field,\n  Input,\n  Textarea,\n  Checkbox,\n  Radio,\n} from 'react-bulma-components/lib/components/form'\nimport axios from 'axios'\nimport SideBar from '../components/sidebar'\n\nexport default function CreateCustomSection(props) {\n  const token = localStorage.getItem('token')\n  const [name, setName] = useState('')\n  const [title, setTitle] = useState('')\n  const [type, setType] = useState('')\n  const [description, setDescription] = useState('')\n  const [link, setLink] = useState('')\n  const [validForm, setValidForm] = useState(false)\n  let history = useHistory()\n\n  var formContainerStyle = {\n    padding: '5%',\n    border: '1px solid hsl(0, 0%, 86%)',\n    borderRadius: '10px',\n  }\n\n  var containerStyle = {\n    margin: '5% 5%',\n    maxWidth: '100%',\n  }\n\n  var noteStyle = {\n    fontSize: '0.75rem',\n    fontStyle: 'italic',\n  }\n\n  useEffect(() => {\n    axios\n      .get('/one-community/', {\n        headers: {\n          Authorization: `JWT ${token}`,\n        },\n        params: {\n          pk: localStorage.getItem('community-id'),\n        },\n      })\n      .then()\n  }, [token])\n\n  useEffect(() => {\n    const formValues = [name, type]\n    const notValidForm = formValues.some((formVal) => {\n      return (\n        formVal === '' ||\n        (type === 'BUTTON' && link === '') ||\n        (type !== 'BUTTON' && title === '')\n      )\n    })\n    setValidForm(notValidForm)\n  }, [name, title, type, link])\n\n  useEffect(() => {\n    if (type !== 'BUTTON') {\n      setDescription('')\n    }\n  }, [type])\n\n  const handleSubmit = useCallback(() => {\n    const param = JSON.stringify({\n      name: name,\n      title: type === 'BUTTON' ? name : title,\n      type: type,\n      description: description,\n      link: link,\n      community: localStorage.getItem('community-name'),\n      general_content: '',\n    })\n\n    axios\n      .post('/add-custom-section/', param, {\n        headers: {\n          Authorization: `JWT ${token}`,\n          'Content-Type': 'application/json',\n        },\n      })\n      .then(\n        (response) => {\n          history.push('/community-home')\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [name, title, type, description, link])\n\n  return (\n    <div>\n      <CommunityNavbar />\n      <Container style={containerStyle}>\n        <Columns isMultiline={true}>\n          <Columns.Column size={3}>\n            <SideBar />\n          </Columns.Column>\n          <Columns.Column size={9}>\n            <Heading size={4}>Create Custom Section</Heading>\n            <div style={formContainerStyle}>\n              <Field>\n                <Label>\n                  Name\n                  <span style={{ color: '#F83D34' }}>*</span>\n                </Label>\n                <span style={noteStyle}>\n                  This will be displayed in the sidebar.\n                </span>\n                <Control>\n                  <Input\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                  />\n                </Control>\n              </Field>\n              {type !== 'BUTTON' && (\n                <Field>\n                  <Label>\n                    Title\n                    <span style={{ color: '#F83D34' }}>*</span>\n                  </Label>\n                  <span style={noteStyle}>\n                    This will be displayed as the title of the page.\n                  </span>\n                  <Control>\n                    <Input\n                      value={title}\n                      onChange={(e) => setTitle(e.target.value)}\n                    />\n                  </Control>\n                </Field>\n              )}\n              <Field>\n                <Label>\n                  Type<span style={{ color: '#F83D34' }}>*</span>\n                </Label>\n                <Control style={{ marginBottom: '10px' }}>\n                  <Radio\n                    onChange={(e) => setType(e.target.value)}\n                    checked={type === 'DP'}\n                    value='DP'\n                  >\n                    {' '}\n                    Discussions and Pages\n                  </Radio>\n                  <br />\n                  <Radio\n                    onChange={(e) => setType(e.target.value)}\n                    checked={type === 'GENERAL'}\n                    value='GENERAL'\n                  >\n                    {' '}\n                    General\n                  </Radio>\n                  <br />\n                  <Radio\n                    onChange={(e) => setType(e.target.value)}\n                    checked={type === 'BUTTON'}\n                    value='BUTTON'\n                  >\n                    {' '}\n                    Button\n                  </Radio>\n                </Control>\n              </Field>\n              <Field>\n                <Label>\n                  {type !== 'BUTTON' ? 'Description' : 'Link'}\n                  {type === 'BUTTON' && (\n                    <span style={{ color: '#F83D34' }}>*</span>\n                  )}\n                </Label>\n                <Control>\n                  {type !== 'BUTTON' ? (\n                    <Textarea\n                      value={description}\n                      onChange={(e) => setDescription(e.target.value)}\n                    />\n                  ) : (\n                    <Input\n                      value={link}\n                      onChange={(e) => setLink(e.target.value)}\n                    />\n                  )}\n                </Control>\n              </Field>\n            </div>\n            <br />\n            <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n              <Link to='#'>\n                <Button\n                  color='primary'\n                  className='is-fullwidth'\n                  disabled={validForm}\n                  onClick={() => handleSubmit()}\n                >\n                  Finish\n                </Button>\n              </Link>\n            </div>\n          </Columns.Column>\n        </Columns>\n      </Container>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Page, Text, Document, StyleSheet, View } from '@react-pdf/renderer'\nimport PropTypes from 'prop-types'\nimport axios from 'axios'\nimport Moment from 'moment';\nimport { extendMoment } from 'moment-range';\n\n\nexport default function PDF(props) {\n  const BORDER_COLOR = '#bfbfbf'\n  const BORDER_STYLE = 'solid'\n  const COL1_WIDTH = 10\n  const COLN_WIDTH = (100 - COL1_WIDTH) / 3\n  const styles = StyleSheet.create({\n    body: {\n      paddingTop: 30,\n      paddingBottom: 65,\n      paddingHorizontal: 35,\n      fontFamily: 'Times-Roman'\n    },\n    title: {\n      fontSize: 18,\n      textAlign: 'center',\n      marginBottom: 10,\n      fontFamily: 'Times-Roman'\n    },\n    helpText: {\n      fontSize: 8,\n      marginBottom: 10,\n      color: 'grey',\n      fontFamily: 'Times-Roman'\n    },\n    subtitle: {\n      fontSize: 12,\n      fontFamily: 'Times-Roman',\n      marginBottom: '2%'\n    },\n    text: {\n      fontSize: 11,\n      textAlign: 'justify',\n      fontFamily: 'Times-Roman',\n      marginBottom: '2%'\n    },\n    header: {\n      fontSize: 8,\n      marginBottom: 20,\n      textAlign: 'center',\n      color: 'grey',\n      fontFamily: 'Times-Roman'\n    },\n    table: {\n      display: \"table\",\n      width: \"auto\",\n      borderStyle: BORDER_STYLE,\n      borderColor: BORDER_COLOR,\n      borderWidth: 1,\n      borderRightWidth: 0,\n      borderBottomWidth: 0\n    },\n    tableRow: {\n      margin: \"auto\",\n      flexDirection: \"row\"\n    },\n    tableCol1Header: {\n      width: COL1_WIDTH + '%',\n      borderStyle: BORDER_STYLE,\n      borderColor: BORDER_COLOR,\n      borderBottomColor: '#000',\n      borderWidth: 1,\n      borderLeftWidth: 0,\n      borderTopWidth: 0\n    },\n    tableColHeader: {\n      width: COLN_WIDTH + \"%\",\n      borderStyle: BORDER_STYLE,\n      borderColor: BORDER_COLOR,\n      borderBottomColor: '#000',\n      borderWidth: 1,\n      borderLeftWidth: 0,\n      borderTopWidth: 0\n    },\n    tableCol1: {\n      width: COL1_WIDTH + '%',\n      borderStyle: BORDER_STYLE,\n      borderColor: BORDER_COLOR,\n      borderWidth: 1,\n      borderLeftWidth: 0,\n      borderTopWidth: 0\n    },\n    tableCol: {\n      width: COLN_WIDTH + \"%\",\n      borderStyle: BORDER_STYLE,\n      borderColor: BORDER_COLOR,\n      borderWidth: 1,\n      borderLeftWidth: 0,\n      borderTopWidth: 0\n    },\n    tableCellHeader: {\n      margin: 5,\n      fontSize: 12,\n      fontWeight: 500\n    },\n    tableCell: {\n      margin: 5,\n      fontSize: 10\n    }\n  });\n\n  const [activities, setActivities] = useState([])\n  const moment = extendMoment(Moment);\n\n  useEffect(() => {\n    axios\n      .get(`/activities/${localStorage.getItem('community-id')}`, {\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('token')}`,\n        },\n      })\n      .then(\n        (response) => {\n          setActivities(response.data)\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [])\n\n  const monthMap = new Map()\n  monthMap['January'] = 1\n  monthMap['February'] = 2\n  monthMap['March'] = 3\n  monthMap['April'] = 4\n  monthMap['May'] = 5\n  monthMap['June'] = 6\n  monthMap['July'] = 7\n  monthMap['August'] = 8\n  monthMap['September'] = 9\n  monthMap['October'] = 10\n  monthMap['November'] = 11\n  monthMap['December'] = 12\n\n  return (\n    <Document>\n      <Page style={styles.body}>\n        <Text style={styles.header} fixed>\n          Created on {(new Date()).toString()}\n        </Text>\n        <Text style={styles.title}>Activity Report for {localStorage.getItem('community-name')}'s Community</Text>\n        <Text style={styles.helpText}>\n          All tasks in the above event for the selected dates below are shown. To view a different date range,\n          please select the dates and click on the View Report button.\n                </Text>\n        <Text style={styles.subtitle}>\n          Filtering parameters:\n        </Text>\n        {props.search !== '' ?\n          (<Text style={styles.text}>\n            Search term: {props.search}\n          </Text>)\n          :\n          (<></>)\n        }\n        <Text style={styles.text}>\n          Activity type: {props.activity_type === 'Filter by Activity Type' ? ('All') : (props.activity_type)}\n        </Text>\n        <Text style={styles.text}>\n          Start date: {props.start_month} {props.start_day}, {props.start_year}\n        </Text>\n        <Text style={styles.text}>\n          End date: {props.end_month} {props.end_day}, {props.end_year}\n        </Text>\n        <View style={styles.table}>\n          <View style={styles.tableRow}>\n            <View style={styles.tableCol}>\n              <Text style={styles.tableCell}>Activity</Text>\n            </View>\n            <View style={styles.tableCol}>\n              <Text style={styles.tableCell}>Time</Text>\n            </View>\n            <View style={styles.tableCol}>\n              <Text style={styles.tableCell}>Avg. Volunteer Time/Person (Requested)</Text>\n            </View>\n            <View style={styles.tableCol}>\n              <Text style={styles.tableCell}>Avg. Volunteer Time/Person (Actual)</Text>\n            </View>\n          </View>\n          {activities.filter(\n            (a) =>\n              (props.search === '' || (a.title).toLowerCase().includes(props.search.toLowerCase()))\n              &&\n              (props.activity_type === 'Filter by Activity Type' || a.activity_type === props.activity_type)\n              &&\n              (moment().range(\n                moment(props.start_year + '-' + monthMap[props.start_month] + '-' + props.start_day, 'YYYY-MM-DD'),\n                moment(props.end_year + '-' + monthMap[props.end_month] + '-' + props.end_day, 'YYYY-MM-DD'))\n                .contains(moment(a.start_time.substr(0, 10), 'YYYY-MM-DD'))\n              )\n          ).length > 0 ? (\n              activities.filter(\n                (a) =>\n                  (props.search === '' || (a.title).toLowerCase().includes(props.search.toLowerCase()))\n                  &&\n                  (props.activity_type === 'Filter by Activity Type' || a.activity_type === props.activity_type)\n                  &&\n                  (moment().range(\n                    moment(props.start_year + '-' + monthMap[props.start_month] + '-' + props.start_day, 'YYYY-MM-DD'),\n                    moment(props.end_year + '-' + monthMap[props.end_month] + '-' + props.end_day, 'YYYY-MM-DD'))\n                    .contains(moment(a.start_time.substr(0, 10), 'YYYY-MM-DD'))\n                  ))\n                .map((a) => (\n                  <View style={styles.tableRow} key={a.id}>\n                    <View style={styles.tableCol}>\n                      <Text style={styles.tableCell}>{a.activity_type}: {a.title}</Text>\n                    </View>\n                    <View style={styles.tableCol}>\n                      <Text style={styles.tableCell}>{\n                        moment(a.start_time).format('LL')}{' '}\n                        between {moment(a.start_time).add(new Date(a.start_time).getTimezoneOffset(), 'm').format('LT')}{' '}\n                        and {moment(a.end_time).add(new Date(a.start_time).getTimezoneOffset(), 'm').format('LT')}\n                      </Text>\n                    </View>\n                    {a.activity_type !== 'Occasion' ?\n                      <View style={styles.tableCol}>\n                        <Text style={styles.tableCell}>\n                          {a.est_hours_per_volunteer} hours <br />{Math.round(a.est_minutes_per_volunteer)} minutes\n                        </Text>\n                      </View>\n                      :\n                      <View style={styles.tableCol}>\n                        <Text style={styles.tableCell}>\n                          N/A\n                        </Text>\n                      </View>\n                    }\n\n                    {a.activity_type !== 'Occasion' && a.actual_hours_per_volunteer !== 0 && a.actual_minutes_per_volunteer !== 0 ?\n                      <View style={styles.tableCol}>\n                        <Text style={styles.tableCell}>{a.actual_hours_per_volunteer} hours {Math.round(a.actual_minutes_per_volunteer)} minutes</Text>\n                      </View>\n                      :\n                      a.activity_type !== 'Occasion' ?\n                        (<View style={styles.tableCol}>\n                          <Text style={styles.tableCell}>No volunteers have signed-up</Text>\n                        </View>)\n                        :\n                        (<View style={styles.tableCol}>\n                          <Text style={styles.tableCell}>Occasions do not have volunteers</Text>\n                        </View>)\n                    }\n                  </View>\n                ))\n            ) : (\n              <Text style={styles.text}>\n                No activities match this search.\n              </Text>\n            )}\n        </View>\n      </Page>\n    </Document>\n  )\n}\n\nPDF.propTypes = {\n  activity_type: PropTypes.string.isRequired,\n  start_day: PropTypes.string.isRequired,\n  start_month: PropTypes.string.isRequired,\n  start_year: PropTypes.string.isRequired,\n  end_day: PropTypes.string.isRequired,\n  end_month: PropTypes.string.isRequired,\n  end_year: PropTypes.string.isRequired,\n  search: PropTypes.string.isRequired,\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport axios from 'axios'\nimport Moment from 'moment';\nimport { extendMoment } from 'moment-range';\nimport { PDFDownloadLink } from '@react-pdf/renderer'\n\nimport { Input, Select, Field, Label, Control } from 'react-bulma-components/lib/components/form'\nimport Container from 'react-bulma-components/lib/components/container'\nimport Heading from 'react-bulma-components/lib/components/heading'\nimport Table from 'react-bulma-components/lib/components/table'\nimport Columns from 'react-bulma-components/lib/components/columns'\nimport Button from 'react-bulma-components/lib/components/button'\n\nimport PDF from '../components/activityPDF'\nimport CommunityNavbar from '../components/communityNavbar'\nimport SideBar from '../components/sidebar'\n\nexport default function ActivityReport() {\n    // Create styles\n    var containerStyle = {\n        margin: '5% 5%',\n        maxWidth: '100%',\n    }\n\n    var formContainerStyle = {\n        padding: '5%',\n        border: '1px solid hsl(0, 0%, 86%)',\n        borderRadius: '10px',\n    }\n\n    var noteStyle = {\n        color: '#E5E5E5',\n        fontStyle: 'italic',\n        margin: '15px',\n    }\n\n    const activityTypes = [\n        'Filter by Activity Type',\n        'Giving Rides',\n        'Preparing Meals',\n        'Shopping',\n        'Childcare',\n        'Pet Care',\n        'House Cleaning',\n        'Laundry',\n        'Visits',\n        'Miscellaneous',\n        'Occasion'\n    ]\n\n    const years = Array.from(Array(5).keys()).map((y) => (y + (new Date().getFullYear())))\n    const count = Array.from(Array(51).keys()).slice(1, 51)\n\n\n    const monthMap = new Map()\n    monthMap['January'] = 1\n    monthMap['February'] = 2\n    monthMap['March'] = 3\n    monthMap['April'] = 4\n    monthMap['May'] = 5\n    monthMap['June'] = 6\n    monthMap['July'] = 7\n    monthMap['August'] = 8\n    monthMap['September'] = 9\n    monthMap['October'] = 10\n    monthMap['November'] = 11\n    monthMap['December'] = 12\n\n    const months = [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December',\n    ]\n\n    const nextMonthMap = {\n        'January': 'February',\n        'February': 'March',\n        'March': 'April',\n        'April': 'May',\n        'May': 'June',\n        'June': 'July',\n        'July': 'August',\n        'August': 'September',\n        'September': 'October',\n        'October': 'November',\n        'November': 'December',\n        'December': 'Janurary',\n    }\n\n    // Date range\n    const [startMonth, setStartMonth] = useState(months[new Date().getMonth()])\n    const [startDay, setStartDay] = useState(new Date().getDate())\n    const [startYear, setStartYear] = useState(new Date().getFullYear())\n    const [endMonth, setEndMonth] = useState(nextMonthMap[months[new Date().getMonth()]])\n    const [endDay, setEndDay] = useState(new Date().getDate())\n    const [endYear, setEndYear] = useState(new Date().getFullYear())\n\n    const [activities, setActivities] = useState([])\n    const [search, setSearch] = useState('')\n    const [selectedActivityType, setSelectedActivityType] = useState('Filter by Activity Type')\n    const moment = extendMoment(Moment);\n\n    useEffect(() => {\n        axios\n            .get(`/activities/${localStorage.getItem('community-id')}`, {\n                headers: {\n                    Authorization: `JWT ${localStorage.getItem('token')}`,\n                },\n            })\n            .then(\n                (response) => {\n                    setActivities(response.data)\n                },\n                (error) => {\n                    console.log(error)\n                }\n            )\n    }, [])\n\n    const isDateWithinRange = useCallback((date) => {\n        // Might need to offset date from UTC to actual timezone\n        var dateFormatted = moment(date.substr(0, 10), 'YYYY-MM-DD')\n        var startDate = moment(startYear + '-' + monthMap[startMonth] + '-' + startDay, 'YYYY-MM-DD')\n        var endDate = moment(endYear + '-' + monthMap[endMonth] + '-' + endDay, 'YYYY-MM-DD')\n        var range = moment().range(startDate, endDate)\n        return range.contains(dateFormatted)\n    }, [startDay, startMonth, startYear, endDay, endMonth, endYear])\n\n    return (\n        <div>\n            <CommunityNavbar />\n            <Container style={containerStyle}>\n                <Columns isMultiline={true}>\n                    <Columns.Column size={3}>\n                        <SideBar />\n                    </Columns.Column>\n                    <Columns.Column size={9}>\n                        <Columns>\n                            <Columns.Column size={8}>\n                                <Heading size={4}>Activity Report</Heading>\n                            </Columns.Column>\n                            <Columns.Column size={4}>\n                                <Columns>\n                                    <Columns.Column>\n                                        <PDFDownloadLink\n                                            document={\n                                                <PDF\n                                                    activity_type={selectedActivityType}\n                                                    start_day={startDay}\n                                                    start_month={startMonth}\n                                                    start_year={startYear}\n                                                    end_day={endDay}\n                                                    end_month={endMonth}\n                                                    end_year={endYear}\n                                                    search={search}\n                                                />\n                                            }\n                                            fileName=\"report.pdf\"\n                                        >\n                                            <Button\n                                                style={{\n                                                    marginBottom: '1rem',\n                                                    boxShadow: '1px 1px 3px 2px rgba(0,0,0,0.1)',\n                                                }}\n                                                color='primary'\n                                                fullwidth={true}\n                                            >\n                                                Export Report\n                                            </Button>\n                                        </PDFDownloadLink>\n                                    </Columns.Column>\n                                </Columns>\n                            </Columns.Column>\n                        </Columns>\n                        <Container style={formContainerStyle}>\n                            <Columns>\n                                <Columns.Column size={8}>\n                                    <Input\n                                        value={search}\n                                        onChange={(e) => setSearch(e.target.value)}\n                                        placeholder='Search activities by name'\n                                        style={{ marginBottom: '3%' }}\n                                    />\n                                </Columns.Column>\n                                <Columns.Column size={4}>\n                                    <Field>\n                                        <Control>\n                                            <Select\n                                                onChange={(e) => setSelectedActivityType(e.target.value)}\n                                                name='selectedActivityType'\n                                                value={selectedActivityType}\n                                            >\n                                                {activityTypes.map((type) => (<option>{type}</option>))}\n                                            </Select>\n                                        </Control>\n                                    </Field>\n                                </Columns.Column>\n                            </Columns>\n                            <Columns style={{ marginTop: '-3%', marginBottom: '3%' }}>\n                                <Columns.Column size={5}>\n                                    <Field>\n                                        <Label>Start Date</Label>\n                                        <Control>\n                                            <Select\n                                                onChange={(e) => setStartMonth(e.target.value)}\n                                                name='startMonth'\n                                                value={startMonth}\n                                                style={{ marginRight: '10px' }}\n                                            >\n                                                {months.map((m) => (\n                                                    <option>{m}</option>\n                                                ))}\n                                            </Select>\n                                            <Select\n                                                onChange={(e) => setStartDay(e.target.value)}\n                                                name='startDay'\n                                                value={startDay}\n                                                style={{ marginRight: '10px' }}\n                                            >\n                                                {count.slice(0, 31).map((d) => (\n                                                    <option>{d}</option>\n                                                ))}\n                                            </Select>\n                                            <Select\n                                                onChange={(e) => setStartYear(e.target.value)}\n                                                name='startYear'\n                                                value={startYear}\n                                            >\n                                                {years.map((y) => (\n                                                    <option>{y}</option>\n                                                ))}\n                                            </Select>\n                                        </Control>\n                                    </Field>\n                                </Columns.Column>\n                                <Columns.Column size={5}>\n                                    <Field>\n                                        <Label>End Date</Label>\n                                        <Control>\n                                            <Select\n                                                onChange={(e) => setEndMonth(e.target.value)}\n                                                name='endMonth'\n                                                value={endMonth}\n                                                style={{ marginRight: '10px' }}\n                                            >\n                                                {months.map((m) => (\n                                                    <option>{m}</option>\n                                                ))}\n                                            </Select>\n                                            <Select\n                                                onChange={(e) => setEndDay(e.target.value)}\n                                                name='endDay'\n                                                value={endDay}\n                                                style={{ marginRight: '10px' }}\n                                            >\n                                                {count.slice(0, 31).map((d) => (\n                                                    <option>{d}</option>\n                                                ))}\n                                            </Select>\n                                            <Select\n                                                onChange={(e) => setEndYear(e.target.value)}\n                                                name='endYear'\n                                                value={endYear}\n                                            >\n                                                {years.map((y) => (\n                                                    <option>{y}</option>\n                                                ))}\n                                            </Select>\n                                        </Control>\n                                    </Field>\n                                </Columns.Column>\n                            </Columns>\n\n                            <Table id='center-table'>\n                                <thead>\n                                    <tr>\n                                        <th>Activity</th>\n                                        <th>Time</th>\n                                        <th>Volunteer Status</th>\n                                        <th>Average Volunteer Time/Person <br />(Requested)</th>\n                                        <th>Average Volunteer Time/Person <br />(Actual)</th>\n                                        <th>Active Status</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {activities.filter(\n                                        (a) =>\n                                            (search === '' || (a.title).toLowerCase().includes(search.toLowerCase()))\n                                            &&\n                                            (selectedActivityType === 'Filter by Activity Type' || a.activity_type === selectedActivityType)\n                                            &&\n                                            isDateWithinRange(a.start_time)\n                                    ).length > 0 ? (\n                                            activities.filter(\n                                                (a) =>\n                                                    (search === '' || (a.title).toLowerCase().includes(search.toLowerCase()))\n                                                    &&\n                                                    (selectedActivityType === 'Filter by Activity Type' || a.activity_type === selectedActivityType)\n                                                    &&\n                                                    (isDateWithinRange(a.start_time))\n                                            )\n                                                .map((a) => (\n                                                    <tr key={a.id}>\n                                                        <td>\n                                                            <strong>{a.title}</strong> <br />{a.activity_type}\n                                                        </td>\n                                                        <td>\n                                                            {moment(a.start_time).format('LL')}<br />\n                                                            Between {moment(a.start_time).add(new Date(a.start_time).getTimezoneOffset(), 'm').format('LT')}{' '}\n                                                            and {moment(a.end_time).add(new Date(a.start_time).getTimezoneOffset(), 'm').format('LT')}\n                                                        </td>\n                                                        <td>\n                                                            {a.volunteers.length}/{a.num_volunteers_needed} volunteers\n                                                        </td>\n                                                        {a.activity_type !== 'Occasion' ?\n                                                            (<td>{a.est_hours_per_volunteer} hours <br />{Math.round(a.est_minutes_per_volunteer)} minutes</td>) :\n                                                            (<td>N/A</td>)}\n\n                                                        {a.activity_type !== 'Occasion' && (a.actual_hours_per_volunteer !== 0 || a.actual_minutes_per_volunteer !== 0) ?\n                                                            <td>\n                                                                {a.actual_hours_per_volunteer} hours <br />{Math.round(a.actual_minutes_per_volunteer)} minutes\n                                                            </td>\n                                                            :\n                                                            a.activity_type !== 'Occasion' ?\n                                                                (<td>\n                                                                    No volunteers have signed-up\n                                                                </td>)\n                                                                :\n                                                                (<td>\n                                                                    Occasions do not have volunteers\n                                                                </td>)\n                                                        }\n                                                        {a.is_active ?\n                                                            (<td> Active</td>)\n                                                            :\n                                                            (<td>Inactive</td>)\n                                                        }\n                                                    </tr>\n                                                ))\n                                        ) : (\n                                            <p className='has-text-grey-light' style={noteStyle}>\n                                                No activities match this search.\n                                            </p>\n                                        )}\n                                </tbody>\n                            </Table>\n                        </Container>\n                    </Columns.Column>\n                </Columns>\n            </Container>\n        </div>\n    )\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport axios from 'axios'\nimport { Editor } from '@tinymce/tinymce-react'\nimport { useHistory } from 'react-router-dom'\n\nimport Container from 'react-bulma-components/lib/components/container'\nimport Columns from 'react-bulma-components/lib/components/columns'\nimport Heading from 'react-bulma-components/lib/components/heading'\nimport CommunityNavbar from '../components/communityNavbar'\nimport Button from 'react-bulma-components/lib/components/button'\nimport SideBar from '../components/sidebar'\nimport PostCard from '../components/postCard'\n\nimport {\n  Textarea,\n  Input,\n  Label,\n  Field,\n  Control,\n} from 'react-bulma-components/lib/components/form'\n\nexport default function CustomGeneral(props) {\n  const token = localStorage.getItem('token')\n  const [isEditing, setIsEditing] = useState(false)\n  const [showDPForm, setShowDPForm] = useState(false)\n\n  const [title, setTitle] = useState('')\n  const [newTitle, setNewTitle] = useState('')\n  const [type, setType] = useState('')\n  const [description, setDescription] = useState('')\n  const [newDescription, setNewDescription] = useState('')\n  const [content, setContent] = useState('')\n  const [newContent, setNewContent] = useState('')\n  const [discussionPosts, setDiscussionPosts] = useState([])\n\n  const [subject, setSubject] = useState('')\n  const [message, setMessage] = useState('')\n  const [validForm, setValidForm] = useState(false)\n  let history = useHistory()\n\n  var containerStyle = {\n    margin: '5% 5%',\n    maxWidth: '100%',\n  }\n\n  var noteStyle = {\n    fontSize: '0.75rem',\n    fontStyle: 'italic',\n    textAlign: 'center',\n    padding: '20px',\n    backgroundColor: 'hsl(0, 0%, 96%)',\n    borderRadius: '10px',\n  }\n\n  var formContainerStyle = {\n    padding: '5%',\n    border: '1px solid hsl(0, 0%, 86%)',\n    borderRadius: '10px',\n    marginTop: '20px',\n  }\n\n  useEffect(() => {\n    const formValues = [subject, message]\n    const notValidForm = formValues.some((formVal) => {\n      return formVal === ''\n    })\n    setValidForm(notValidForm)\n  }, [subject, message])\n\n  useEffect(() => {\n    axios\n      .get('/one-custom-section/', {\n        headers: {\n          Authorization: `JWT ${token}`,\n        },\n        params: {\n          section_id: props.location.state.section,\n        },\n      })\n      .then(\n        (response) => {\n          setTitle(response.data[0].title)\n          setNewTitle(response.data[0].title)\n          setType(response.data[0].type)\n          setDescription(response.data[0].description)\n          setNewDescription(response.data[0].description)\n          setContent(response.data[0].general_content)\n          setNewContent(response.data[0].general_content)\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [token, props.location.state.section])\n\n  const editCustomSection = useCallback(() => {\n    var url = '/edit-custom-section/'\n    var myHeaders = new Headers()\n    myHeaders.append('Authorization', `JWT ${localStorage.getItem('token')}`)\n\n    var formdata = new FormData()\n\n    formdata.append('section_id', props.location.state.section)\n    formdata.append('title', newTitle)\n    formdata.append('description', newDescription)\n    formdata.append('general_content', newContent)\n\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: formdata,\n      redirect: 'follow',\n    }\n\n    fetch(url, requestOptions)\n      .then((response) => response.text())\n      .then((result) => window.location.reload())\n      .catch((error) => console.log('error', error))\n  })\n\n  const handleSubmit = useCallback(() => {\n    let dateTime =\n      new Date().toLocaleDateString() +\n      ' at ' +\n      new Date().toLocaleTimeString([], {\n        hour: 'numeric',\n        minute: '2-digit',\n        hour12: true,\n      })\n\n    const param = JSON.stringify({\n      section: props.location.state.section,\n      subject: subject,\n      message: message,\n      date_time: dateTime,\n      user: localStorage.getItem('email'),\n      community: localStorage.getItem('community-name'),\n      author_name: '',\n    })\n\n    axios\n      .post('/add-discussion-post/', param, {\n        headers: {\n          Authorization: `JWT ${token}`,\n          'Content-Type': 'application/json',\n        },\n      })\n      .then(\n        (response) => {\n          window.location.reload()\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [subject, message])\n\n  useEffect(() => {\n    axios\n      .get('/discussion-posts', {\n        headers: {\n          Authorization: `JWT ${token}`,\n        },\n        params: {\n          section_id: props.location.state.section,\n        },\n      })\n      .then(\n        (response) => {\n          console.log(response.data)\n          setDiscussionPosts(response.data)\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [token, props.location.state.section])\n\n  useEffect(() => {\n    setIsEditing(false)\n  }, [props.location.state.section])\n\n  return (\n    <div>\n      <CommunityNavbar />\n      <Container style={containerStyle}>\n        <Columns isMultiline={true}>\n          <Columns.Column size={3}>\n            <SideBar />\n          </Columns.Column>\n          <Columns.Column size={9}>\n            {isEditing ? (\n              <Columns>\n                <Columns.Column size={8}>\n                  <Input\n                    value={newTitle}\n                    onChange={(e) => setNewTitle(e.target.value)}\n                  />\n                </Columns.Column>\n                <Columns.Column size={2}>\n                  <Button\n                    className='is-fullwidth'\n                    onClick={() => setIsEditing(false)}\n                  >\n                    Cancel\n                  </Button>\n                </Columns.Column>\n                <Columns.Column size={2}>\n                  <Button\n                    color='primary'\n                    className='is-fullwidth'\n                    onClick={() => editCustomSection()}\n                  >\n                    Finish\n                  </Button>\n                </Columns.Column>\n              </Columns>\n            ) : (\n              <Columns>\n                <Columns.Column size={10}>\n                  <Heading size={4}>{title}</Heading>\n                </Columns.Column>\n                <Columns.Column size={2}>\n                  <Button\n                    color='primary'\n                    className='is-fullwidth'\n                    onClick={() => setIsEditing(true)}\n                  >\n                    Edit\n                  </Button>\n                </Columns.Column>\n              </Columns>\n            )}\n            {isEditing ? (\n              <div>\n                <Label>Description</Label>\n                <Textarea\n                  value={newDescription}\n                  onChange={(e) => setNewDescription(e.target.value)}\n                />\n\n                <br />\n                {type === 'GENERAL' && (\n                  <div>\n                    <Label>Content</Label>\n                    <Editor\n                      initialValue={newContent}\n                      init={{\n                        height: 500,\n                        menubar: false,\n                        plugins: [\n                          'advlist autolink lists link image charmap print preview anchor',\n                          'searchreplace visualblocks code fullscreen',\n                          'insertdatetime media table paste code help wordcount',\n                        ],\n                        toolbar:\n                          'undo redo | formatselect | link image | bold italic backcolor | \\\n                      alignleft aligncenter alignright alignjustify | \\\n                      bullist numlist outdent indent | removeformat | help',\n                      }}\n                      onEditorChange={(content, editor) =>\n                        setNewContent(content)\n                      }\n                    />\n                  </div>\n                )}\n              </div>\n            ) : (\n              <div>\n                {type === 'DP' ? (\n                  <Columns>\n                    <Columns.Column size={10}>\n                      <p>{description}</p>\n                      {description !== '' && <br />}\n                    </Columns.Column>\n                    <Columns.Column size={2}>\n                      <Button\n                        onClick={() => setShowDPForm(!showDPForm)}\n                        color='primary'\n                        className='is-fullwidth'\n                      >\n                        {showDPForm ? 'Hide Form' : 'New Post'}\n                      </Button>\n                    </Columns.Column>\n                  </Columns>\n                ) : (\n                  <div>\n                    <p>{description}</p>\n                    {description !== '' && <br />}\n                  </div>\n                )}\n                {type === 'GENERAL' && (\n                  <div>\n                    {content === '' ? (\n                      <p style={noteStyle}>\n                        No content has been posted for this page.\n                      </p>\n                    ) : (\n                      <div dangerouslySetInnerHTML={{ __html: content }}></div>\n                    )}\n                  </div>\n                )}\n                {type === 'DP' && (\n                  <div>\n                    {showDPForm && (\n                      <div>\n                        <div style={formContainerStyle}>\n                          <Field>\n                            <Label>\n                              Subject<span style={{ color: '#F83D34' }}>*</span>\n                            </Label>\n                            <Control>\n                              <Input\n                                value={subject}\n                                onChange={(e) => setSubject(e.target.value)}\n                              />\n                            </Control>\n                          </Field>\n                          <Field>\n                            <Label>\n                              Message<span style={{ color: '#F83D34' }}>*</span>\n                            </Label>\n                            <Control>\n                              <Editor\n                                initialValue={message}\n                                init={{\n                                  height: 300,\n                                  menubar: false,\n                                  plugins: [\n                                    'advlist autolink lists link image charmap print preview anchor',\n                                    'searchreplace visualblocks code fullscreen',\n                                    'insertdatetime media table paste code help wordcount',\n                                  ],\n                                  toolbar:\n                                    'undo redo | formatselect | link image | bold italic backcolor | \\\n                      alignleft aligncenter alignright alignjustify | \\\n                      bullist numlist outdent indent | removeformat | help',\n                                }}\n                                onEditorChange={(content, editor) =>\n                                  setMessage(content)\n                                }\n                              />\n                            </Control>\n                          </Field>\n                        </div>\n                        <br />\n                        <div\n                          style={{\n                            display: 'flex',\n                            justifyContent: 'flex-end',\n                          }}\n                        >\n                          <Button\n                            color='primary'\n                            disabled={validForm}\n                            onClick={() => handleSubmit()}\n                          >\n                            Finish\n                          </Button>\n                        </div>\n                      </div>\n                    )}\n                    {discussionPosts.length == 0 ? (\n                      <p style={noteStyle}>\n                        No posts have been made for this page.\n                      </p>\n                    ) : (\n                      <div>\n                        {discussionPosts\n                          .slice()\n                          .reverse()\n                          .map((a, index) => {\n                            return (\n                              <PostCard\n                                key={index}\n                                subject={a.subject}\n                                message={a.message}\n                                dateTime={a.date_time}\n                                user={a.author_name}\n                                id={a.id}\n                                type='discussion-post'\n                              />\n                            )\n                          })}\n                      </div>\n                    )}\n                  </div>\n                )}\n              </div>\n            )}\n          </Columns.Column>\n        </Columns>\n      </Container>\n    </div>\n  )\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport axios from 'axios'\n\nimport Container from 'react-bulma-components/lib/components/container'\nimport Columns from 'react-bulma-components/lib/components/columns'\nimport Heading from 'react-bulma-components/lib/components/heading'\nimport CommunityNavbar from '../components/communityNavbar'\nimport Button from 'react-bulma-components/lib/components/button'\nimport SideBar from '../components/sidebar'\nimport Image from 'react-bulma-components/lib/components/image'\nimport Box from 'react-bulma-components/lib/components/box'\nimport {\n  Textarea,\n  Label,\n  Field,\n  Control,\n  InputFile,\n  Input,\n} from 'react-bulma-components/lib/components/form'\nimport Icon from 'react-bulma-components/lib/components/icon'\nimport ImageGallery from 'react-image-gallery'\nimport { Image as ImageIcon, X } from 'react-feather'\nimport '../../node_modules/react-image-gallery/styles/css/image-gallery.css'\n\nexport default function PhotoGallery(props) {\n  const token = localStorage.getItem('token')\n  const [isEditing, setIsEditing] = useState(false)\n  const [content, setContent] = useState('')\n  const [newContent, setNewContent] = useState('')\n  const [title, setTitle] = useState('')\n  const [file, setFile] = useState('')\n  const [fileURL, setFileURL] = useState('')\n  const [description, setDescription] = useState('')\n  const [photos, setPhotos] = useState([])\n\n  var containerStyle = {\n    margin: '5% 5%',\n    maxWidth: '100%',\n  }\n\n  var noteStyle = {\n    fontSize: '0.75rem',\n    fontStyle: 'italic',\n    textAlign: 'center',\n    padding: '20px',\n    backgroundColor: 'hsl(0, 0%, 96%)',\n    borderRadius: '10px',\n  }\n\n  var formContainerStyle = {\n    padding: '5%',\n    border: '1px solid hsl(0, 0%, 86%)',\n    borderRadius: '10px',\n    marginTop: '20px',\n  }\n\n  useEffect(() => {\n    axios\n      .get('/one-community/', {\n        headers: {\n          Authorization: `JWT ${token}`,\n        },\n        params: {\n          pk: localStorage.getItem('community-id'),\n        },\n      })\n      .then(\n        (response) => {\n          setContent(response.data[0].ways_to_help)\n          setNewContent(response.data[0].ways_to_help)\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [token])\n\n  useEffect(() => {\n    axios\n      .get('/photos', {\n        headers: {\n          Authorization: `JWT ${token}`,\n        },\n        params: {\n          name: localStorage.getItem('community-name'),\n          zipcode: localStorage.getItem('community-zipcode'),\n          is_closed: localStorage.getItem('community-is-closed'),\n        },\n      })\n      .then(\n        (response) => {\n          var gallery = []\n\n          response.data.forEach((p) => {\n            gallery.push({\n              original: p.photo.split('?')[0],\n              thumbnail: p.photo.split('?')[0],\n              originalTitle: p.title,\n              thumbnailTitle: p.title,\n              description: p.description,\n            })\n          })\n          setPhotos(gallery)\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [token])\n\n  const addPhoto = useCallback(() => {\n    var url = '/add-photo/'\n    var myHeaders = new Headers()\n    myHeaders.append('Authorization', `JWT ${localStorage.getItem('token')}`)\n\n    var formdata = new FormData()\n    formdata.append('community-id', localStorage.getItem('community-id'))\n    formdata.append('title', title)\n    formdata.append('description', description)\n    formdata.append('photo', file)\n    formdata.append('community', '')\n\n    console.log(formdata)\n\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: formdata,\n      redirect: 'follow',\n    }\n\n    fetch(url, requestOptions)\n      .then((response) => response.text())\n      .then((result) => window.location.reload())\n      .catch((error) => console.log('error', error))\n  })\n\n  const showModal = (p) => {}\n\n  if (isEditing) {\n    return (\n      <div>\n        <CommunityNavbar />\n        <Container style={containerStyle}>\n          <Columns isMultiline={true}>\n            <Columns.Column size={3}>\n              <SideBar />\n            </Columns.Column>\n            <Columns.Column size={9}>\n              <Columns>\n                <Columns.Column size={9}>\n                  <Heading size={4}>Photo Gallery</Heading>\n                </Columns.Column>\n                <Columns.Column size={3}>\n                  <Button\n                    className='is-fullwidth'\n                    onClick={() => setIsEditing(false)}\n                  >\n                    <div>\n                      <X size={12} style={{ marginRight: '5px' }} />\n                      Cancel\n                    </div>\n                  </Button>\n                </Columns.Column>\n              </Columns>\n\n              <div style={formContainerStyle}>\n                <Field>\n                  <Label>Title</Label>\n                  <Input\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                  />\n                </Field>\n                <Field>\n                  <Label>Description</Label>\n                  <Textarea\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                  />\n                </Field>\n                <Field>\n                  <Label>\n                    Select Photo<span style={{ color: '#F83D34' }}>*</span>\n                  </Label>\n                  <Control>\n                    <InputFile\n                      value={file}\n                      icon={<Icon icon='upload' />}\n                      fullwidth={true}\n                      onChange={(e) => {\n                        setFileURL(URL.createObjectURL(e.target.files[0]))\n                        setFile(e.target.files[0])\n                      }}\n                    />\n                  </Control>\n                </Field>\n                <Columns>\n                  <Columns.Column size={3}>\n                    <Image\n                      src={\n                        fileURL !== ''\n                          ? fileURL\n                          : 'https://vignette.wikia.nocookie.net/project-pokemon/images/4/47/Placeholder.png/revision/latest?cb=20170330235552&format=original'\n                      }\n                    />\n                  </Columns.Column>\n                </Columns>\n                <Button color='primary' onClick={() => addPhoto()}>\n                  Finish\n                </Button>\n              </div>\n            </Columns.Column>\n          </Columns>\n        </Container>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <CommunityNavbar />\n      <Container style={containerStyle}>\n        <Columns isMultiline={true}>\n          <Columns.Column size={3}>\n            <SideBar />\n          </Columns.Column>\n          <Columns.Column size={9}>\n            <Columns>\n              <Columns.Column size={9}>\n                <Heading size={4}>Photo Gallery</Heading>\n              </Columns.Column>\n              <Columns.Column size={3}>\n                <Button\n                  color='primary'\n                  className='is-fullwidth'\n                  onClick={() => setIsEditing(true)}\n                >\n                  <div>\n                    <ImageIcon size={12} style={{ marginRight: '5px' }} />\n                    Add New Photo\n                  </div>\n                </Button>\n              </Columns.Column>\n            </Columns>\n\n            {photos.length === 0 ? (\n              <p style={noteStyle}>\n                No photos have been added to this gallery.\n              </p>\n            ) : (\n              <Box>\n                <ImageGallery items={photos} thumbnailPosition='right' />\n              </Box>\n            )}\n          </Columns.Column>\n        </Columns>\n      </Container>\n    </div>\n  )\n}\n\n/*\n{photos.length === 0 ? (\n                <p style={noteStyle}>\n                  No photos have been added to this gallery.\n                </p>\n              ) : (\n                photos.map((p) => (\n                  <Columns.Column size={3} key={p.uuid}>\n                    <Image\n                      src={p.photo.split('?')[0]}\n                      onClick={() => showModal(p)}\n                    />\n                  </Columns.Column>\n                ))\n              )} */\n","import React, { useState, useEffect, useCallback } from 'react'\nimport axios from 'axios'\nimport { Editor } from '@tinymce/tinymce-react'\n\nimport Container from 'react-bulma-components/lib/components/container'\nimport Columns from 'react-bulma-components/lib/components/columns'\nimport Heading from 'react-bulma-components/lib/components/heading'\nimport CommunityNavbar from '../components/communityNavbar'\nimport Button from 'react-bulma-components/lib/components/button'\nimport SideBar from '../components/sidebar'\nimport { Edit2, XCircle, X, Coffee, CheckCircle } from 'react-feather'\nimport {\n  Control,\n  Label,\n  Field,\n  Input,\n} from 'react-bulma-components/lib/components/form'\nimport PostCard from '../components/postCard'\n\nexport default function MessageBoard(props) {\n  const token = localStorage.getItem('token')\n  const [showForm, setShowForm] = useState(false)\n  const [messages, setMessages] = useState([])\n\n  const [subject, setSubject] = useState('')\n  const [message, setMessage] = useState('')\n  const [validForm, setValidForm] = useState(false)\n\n  var containerStyle = {\n    margin: '5% 5%',\n    maxWidth: '100%',\n  }\n\n  var noteStyle = {\n    fontSize: '0.75rem',\n    fontStyle: 'italic',\n    textAlign: 'center',\n    padding: '20px',\n    backgroundColor: 'hsl(0, 0%, 96%)',\n    borderRadius: '10px',\n  }\n\n  var formContainerStyle = {\n    padding: '5%',\n    border: '1px solid hsl(0, 0%, 86%)',\n    borderRadius: '10px',\n    marginTop: '20px',\n  }\n\n  useEffect(() => {\n    const formValues = [subject, message]\n    const notValidForm = formValues.some((formVal) => {\n      return formVal === ''\n    })\n    setValidForm(notValidForm)\n  }, [subject, message])\n\n  const handleSubmit = useCallback(() => {\n    let dateTime =\n      new Date().toLocaleDateString() +\n      ' at ' +\n      new Date().toLocaleTimeString([], {\n        hour: 'numeric',\n        minute: '2-digit',\n        hour12: true,\n      })\n\n    const param = JSON.stringify({\n      subject: subject,\n      message: message,\n      date_time: dateTime,\n      user: localStorage.getItem('email'),\n      community: localStorage.getItem('community-name'),\n      author_name: '',\n    })\n\n    axios\n      .post('/add-message/', param, {\n        headers: {\n          Authorization: `JWT ${token}`,\n          'Content-Type': 'application/json',\n        },\n      })\n      .then(\n        (response) => {\n          window.location.reload()\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [subject, message])\n\n  useEffect(() => {\n    axios\n      .get('/messages', {\n        headers: {\n          Authorization: `JWT ${token}`,\n        },\n        params: {\n          name: localStorage.getItem('community-name'),\n          zipcode: localStorage.getItem('community-zipcode'),\n          is_closed: localStorage.getItem('community-is-closed'),\n        },\n      })\n      .then(\n        (response) => {\n          setMessages(response.data)\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [token])\n\n  return (\n    <div>\n      <CommunityNavbar />\n      <Container style={containerStyle}>\n        <Columns isMultiline={true}>\n          <Columns.Column size={3}>\n            <SideBar />\n          </Columns.Column>\n          <Columns.Column size={9}>\n            <Columns>\n              <Columns.Column size={9}>\n                <Heading size={4}>Message Board</Heading>\n              </Columns.Column>\n              <Columns.Column size={3}>\n                <Button\n                  onClick={() => setShowForm(!showForm)}\n                  color='primary'\n                  className='is-fullwidth'\n                >\n                  {showForm ? (\n                    <div>\n                      <X size={12} style={{ marginRight: '5px' }} />\n                      Hide Message Form\n                    </div>\n                  ) : (\n                    <div>\n                      <Edit2 size={12} style={{ marginRight: '5px' }} />\n                      Leave a Message\n                    </div>\n                  )}\n                </Button>\n              </Columns.Column>\n            </Columns>\n            {showForm && (\n              <div>\n                <div style={formContainerStyle}>\n                  <Field>\n                    <Label>\n                      Subject<span style={{ color: '#F83D34' }}>*</span>\n                    </Label>\n                    <Control>\n                      <Input\n                        value={subject}\n                        onChange={(e) => setSubject(e.target.value)}\n                      />\n                    </Control>\n                  </Field>\n                  <Field>\n                    <Label>\n                      Message<span style={{ color: '#F83D34' }}>*</span>\n                    </Label>\n                    <Control>\n                    <input\n                      id='my-file'\n                      type='file'\n                      name='my-file'\n                      style={{ display: 'none' }}\n                    />\n                    <Editor\n                      initialValue={message}\n                      init={{\n                        height: 500,\n                        menubar: false,\n                        plugins: [\n                          'advlist autolink lists link image charmap print preview anchor',\n                          'searchreplace wordcount visualblocks code fullscreen',\n                          'insertdatetime media table contextmenu paste code',\n                        ],\n                        toolbar:\n                          'insertfile undo redo | formatselect | bold italic backcolor | \\\n                                  alignleft aligncenter alignright alignjustify | \\\n                                  bullist numlist outdent indent | link image media | help',\n                        file_browser_callback_types: 'image',\n                        file_picker_callback: function (callback, value, meta) {\n                          if (meta.filetype == 'image') {\n                            var input = document.getElementById('my-file')\n                            input.click()\n                            input.onchange = function () {\n                              var file = input.files[0]\n                              var reader = new FileReader()\n                              reader.onload = function (e) {\n                                callback(e.target.result, {\n                                  alt: file.name,\n                                })\n                              }\n                              reader.readAsDataURL(file)\n                            }\n                          }\n                        },\n                        paste_data_images: true,\n                      }}\n                      onEditorChange={(content, editor) => setMessage(content)}\n                    />\n                    </Control>\n                  </Field>\n                </div>\n                <br />\n                <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                  <Button\n                    color='primary'\n                    disabled={validForm}\n                    onClick={() => handleSubmit()}\n                  >\n                    <CheckCircle size={12} style={{ marginRight: '5px' }} />\n                    Finish\n                  </Button>\n                </div>\n                <br />\n              </div>\n            )}\n            <div>\n              {messages.length > 0 ? (\n                messages\n                  .slice()\n                  .reverse()\n                  .map((a, index) => {\n                    return (\n                      <PostCard\n                        key={index}\n                        subject={a.subject}\n                        message={a.message}\n                        dateTime={a.date_time}\n                        user={a.author_name}\n                        id={a.id}\n                        type='message'\n                      />\n                    )\n                  })\n              ) : (\n                <p style={noteStyle}>\n                  <Coffee size={100} color='#E5E5E5' />\n                  <br />\n                  <br />\n                  Sit tight! Nothing has been posted yet.\n                </p>\n              )}\n            </div>\n          </Columns.Column>\n        </Columns>\n      </Container>\n    </div>\n  )\n}\n","import React, { useState, useEffect, useCallback } from \"react\"\n\nimport Container from 'react-bulma-components/lib/components/container';\nimport Columns from 'react-bulma-components/lib/components/columns'\nimport Heading from 'react-bulma-components/lib/components/heading'\nimport Button from 'react-bulma-components/lib/components/button';\nimport {\n    Field,\n    Control,\n    Input,\n    Label,\n} from 'react-bulma-components/lib/components/form'\n\nimport SideNavAccount from '../components/sideNavAccount'\n\nexport default function PasswordSettings() {\n    const [currentPassword, setCurrentPassword] = useState('')\n    const [newPassword, setNewPassword] = useState('')\n    const [confirmNewPassword, setConfirmNewPassword] = useState('')\n\n    var containerStyle = {\n        margin: '3% auto',\n        maxWidth: '80%',\n        padding: '4rem',\n    }\n\n\n    return (\n        <Container style={containerStyle}>\n            <Columns>\n                <Columns.Column style={{ maxWidth: '30%' }}>\n                    <SideNavAccount />\n                </Columns.Column>\n                <Columns.Column>\n                    {/* Password Settings */}\n                    <Heading size={4}>Edit Password</Heading>\n                    <Field style={{ maxWidth: '50%' }}>\n                        <Label>Current Password</Label>\n                        <Control>\n                            <Input\n                                value={currentPassword}\n                                onChange={e => setCurrentPassword(e.target.value)}\n                                placeholder=''\n                            />\n                        </Control>\n                    </Field>\n                    <Field style={{ maxWidth: '50%' }}>\n                        <Label>New Password</Label>\n                        <Control>\n                            <Input\n                                value={newPassword}\n                                onChange={e => setNewPassword(e.target.value)}\n                                placeholder=''\n                            />\n                        </Control>\n                    </Field>\n                    <Field style={{ maxWidth: '50%', marginBottom: '8%'}}>\n                        <Label>Confirm New Password</Label>\n                        <Control>\n                            <Input\n                                value={confirmNewPassword}\n                                onChange={e => setConfirmNewPassword(e.target.value)}\n                                placeholder=''\n                            />\n                        </Control>\n                    </Field>\n                    <Button \n                        color=\"primary\" \n                        fullwidth={true} \n                        style={{maxWidth: '40%', marginTop: '8%'}} \n                    >\n                        SAVE CHANGES\n                    </Button>\n                </Columns.Column>\n            </Columns>\n        </Container>\n    );\n}","import React, { useState, useEffect, useCallback } from 'react'\nimport DayPicker, { DateUtils } from 'react-day-picker'\nimport 'react-day-picker/lib/style.css'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport moment from 'moment'\n\nimport Container from 'react-bulma-components/lib/components/container'\nimport Columns from 'react-bulma-components/lib/components/columns'\nimport Heading from 'react-bulma-components/lib/components/heading'\nimport CommunityNavbar from '../components/communityNavbar'\nimport Button from 'react-bulma-components/lib/components/button'\nimport Tabs from 'react-bulma-components/lib/components/tabs'\nimport {\n    Select,\n    Control,\n    Label,\n    Field,\n    Input,\n    Textarea,\n    Checkbox,\n} from 'react-bulma-components/lib/components/form'\nimport MultiSelect from 'react-multi-select-component'\nimport SideBar from '../components/sidebar'\n\nexport default function ActivityEdit() {\n    //Styles\n    var containerStyle = {\n        margin: '5% 5%',\n        maxWidth: '100%',\n    }\n    var formContainerStyle = {\n        padding: '5%',\n        border: '1px solid hsl(0, 0%, 86%)',\n        borderTop: 'none',\n        borderRadius: '0px 0px 10px 10px',\n    }\n    var noteStyle = {\n        fontSize: '0.75rem',\n        fontStyle: 'italic',\n        marginBottom: '5px',\n    }\n    var checkboxStyle = {\n        fontSize: '0.75rem',\n        fontStyle: 'italic',\n        margin: '5px 0',\n        display: 'flex',\n        justifyContent: 'flex-start',\n    }\n\n    const activityPk = localStorage.getItem('activity-id')\n\n    const years = Array.from(Array(5).keys()).map((y) => (y + (new Date().getFullYear())))\n    const months = [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December',\n    ]\n\n    const times = [\n        '12:00 AM',\n        '12:15 AM',\n        '12:30 AM',\n        '12:45 AM',\n        '1:00 AM',\n        '1:15 AM',\n        '1:30 AM',\n        '1:45 AM',\n        '2:00 AM',\n        '2:15 AM',\n        '2:30 AM',\n        '2:45 AM',\n        '3:00 AM',\n        '3:15 AM',\n        '3:30 AM',\n        '3:45 AM',\n        '4:00 AM',\n        '4:15 AM',\n        '4:30 AM',\n        '4:45 AM',\n        '5:00 AM',\n        '5:15 AM',\n        '5:30 AM',\n        '5:45 AM',\n        '5:00 AM',\n        '5:15 AM',\n        '5:30 AM',\n        '5:45 AM',\n        '5:00 AM',\n        '5:15 AM',\n        '5:30 AM',\n        '5:45 AM',\n        '6:00 AM',\n        '6:15 AM',\n        '6:30 AM',\n        '6:45 AM',\n        '7:00 AM',\n        '7:15 AM',\n        '7:30 AM',\n        '7:45 AM',\n        '8:00 AM',\n        '8:15 AM',\n        '8:30 AM',\n        '8:45 AM',\n        '9:00 AM',\n        '9:15 AM',\n        '9:30 AM',\n        '9:45 AM',\n        '10:00 AM',\n        '10:15 AM',\n        '10:30 AM',\n        '10:45 AM',\n        '11:00 AM',\n        '11:15 AM',\n        '11:30 AM',\n        '11:45 AM',\n        '12:00 PM',\n        '12:15 PM',\n        '12:30 PM',\n        '12:45 PM',\n        '1:00 PM',\n        '1:15 PM',\n        '1:30 PM',\n        '1:45 PM',\n        '2:00 PM',\n        '2:15 PM',\n        '2:30 PM',\n        '2:45 PM',\n        '3:00 PM',\n        '3:15 PM',\n        '3:30 PM',\n        '3:45 PM',\n        '4:00 PM',\n        '4:15 PM',\n        '4:30 PM',\n        '4:45 PM',\n        '5:00 PM',\n        '5:15 PM',\n        '5:30 PM',\n        '5:45 PM',\n        '6:00 PM',\n        '6:15 PM',\n        '6:30 PM',\n        '6:45 PM',\n        '7:00 PM',\n        '7:15 PM',\n        '7:30 PM',\n        '7:45 PM',\n        '8:00 PM',\n        '8:15 PM',\n        '8:30 PM',\n        '8:45 PM',\n        '9:00 PM',\n        '9:15 PM',\n        '9:30 PM',\n        '9:45 PM',\n        '10:00 PM',\n        '10:15 PM',\n        '10:30 PM',\n        '10:45 PM',\n        '11:00 PM',\n        '11:15 PM',\n        '11:30 PM',\n        '11:45 PM',\n    ]\n    const count = Array.from(Array(51).keys()).slice(1, 51)\n\n    const [activeTab, setActiveTab] = useState('What')\n    const [validForm, setValidForm] = useState(false)\n\n    //What\n    const [category, setCategory] = useState('')\n    const [activityName, setActivityName] = useState('')\n    const [notes, setNotes] = useState('')\n\n    //When\n    const [startTime, setStartTime] = useState('12:00 PM')\n    const [endTime, setEndTime] = useState('12:00 PM')\n    const [noEndTime, setNoEndTime] = useState(false)\n    const [allDay, setAllDay] = useState(false)\n    const [startMonth, setStartMonth] = useState(months[new Date().getMonth()])\n    const [startDay, setStartDay] = useState(new Date().getDate())\n    const [startYear, setStartYear] = useState(new Date().getFullYear())\n    const [endMonth, setEndMonth] = useState(months[new Date().getMonth()])\n    const [endDay, setEndDay] = useState(new Date().getDate())\n    const [endYear, setEndYear] = useState(new Date().getFullYear())\n    const [selectedDays, setSelectedDays] = useState([])\n\n    //Where\n    const [pickupLocation, setPickupLocation] = useState('')\n    const [destination, setDestination] = useState('')\n    const [location, setLocation] = useState('')\n\n    //Who\n    const [estimatedHours, setEstimatedHours] = useState(0)\n    const [estimatedMinutes, setEstimatedMinutes] = useState(0)\n    const [numVolunteers, setNumVolunteers] = useState(1)\n    const [coordinators, setCoordinators] = useState([])\n    const [selectedCoordinators, setSelectedCoordinators] = useState([])\n    const [volunteers, setVolunteers] = useState([])\n\n    //Dietary Restrictions (kept in case checkbox implementation is needed)\n    const [dietaryRestrictions, setDietaryRestrictions] = useState([])\n\n    const monthDiff = (d1, d2) => {\n        var months\n        months = (d2.getFullYear() - d1.getFullYear()) * 12\n        months -= d1.getMonth()\n        months += d2.getMonth()\n        return months <= 0 ? 0 : months\n    }\n\n\n    const handleDayClick = (day, modifiers = {}) => {\n        if (modifiers.disabled) {\n            return\n        }\n        const newSelectedDays = selectedDays\n        if (modifiers.selected) {\n            setSelectedDays(\n                newSelectedDays.filter(\n                    (selectedDay) => !DateUtils.isSameDay(selectedDay, day)\n                )\n            )\n        } else {\n            setSelectedDays(newSelectedDays.concat([day]))\n        }\n    }\n\n    useEffect(() => {\n        const formValues = [\n            activityName,\n            startDay,\n            startMonth,\n            startYear,\n            estimatedHours,\n            estimatedMinutes,\n            numVolunteers,\n        ]\n        const notValidForm =\n            formValues.some((formVal) => {\n                return formVal === ''\n            }) ||\n            isNaN(estimatedHours) ||\n            isNaN(estimatedMinutes)\n\n        if (notValidForm) {\n            setValidForm(false)\n        } else {\n            setValidForm(true)\n        }\n    }, [\n        activityName,\n        startDay,\n        startMonth,\n        startYear,\n        estimatedHours,\n        estimatedMinutes,\n        numVolunteers,\n    ])\n\n    const parseDate = (date, isStartDate) => {\n        var splitDate = date.split('-')\n        var YYYY = splitDate[0]\n        var MM = splitDate[1]\n        var DDTHMSZ = splitDate[2]\n        var splitDDTHMSZ = DDTHMSZ.split('T')\n        var DD = splitDDTHMSZ[0]\n        var Time = moment(splitDDTHMSZ[1].substr(0, splitDDTHMSZ[1].length - 1), 'HH:mm:ss').format('h:mm A')\n        isStartDate ? setStartDay(DD) : setEndDay(DD)\n        isStartDate ? setStartMonth(months[parseInt(MM) - 1]) : setEndMonth(months[parseInt(MM) - 1])\n        isStartDate ? setStartYear(YYYY) : setEndYear(YYYY)\n        isStartDate ? setStartTime(Time) : setEndTime(Time)\n    }\n\n    useEffect(() => {\n        axios\n            .get(`/community-coordinators/${localStorage.getItem('community-id')}`, {\n                headers: {\n                    Authorization: `JWT ${localStorage.getItem('token')}`,\n                },\n            })\n            .then(\n                (response) => {\n                    const options = response.data.map((item) => ({ label: `${item['first_name']} ${item['last_name']}`, value: item['id'] }))\n                    setCoordinators(options)\n                },\n                (error) => {\n                    console.log(error)\n                }\n            )\n    }, [])\n\n\n    // API call to prepopulate fields relevant to activity\n    useEffect(() => {\n        axios\n            .get(`/edit-activity/${activityPk}/`, {\n                headers: {\n                    Authorization: `JWT ${localStorage.getItem('token')}`,\n                },\n            })\n            .then(\n                (response) => {\n                    // What tab items\n                    setCategory(response.data.activity_type)\n                    setActivityName(response.data.title)\n                    setNotes(response.data.description)\n\n                    // When tab items\n                    parseDate(response.data.start_time, true)\n                    parseDate(response.data.end_time, false)\n                    setAllDay(response.data.all_day)\n                    \n                        \n                    var tempSelectedDays = []\n                    for(var i = 0; i < response.data.selected_days.length; i++){\n                        var day = response.data.selected_days[i][0].split('-')\n                        var year = parseInt(day[0])\n                        var month = parseInt(day[1])-1\n                        var date = parseInt(day[2].split('T')[0])\n                        tempSelectedDays.push(new Date(year, month, date))\n                    }\n                    setSelectedDays(tempSelectedDays)\n\n                    // Where tab items\n                    if (response.data.activity_type === 'Giving Rides') {\n                        setPickupLocation(response.data.pickup_location)\n                        setDestination(response.data.destination_location)\n                    }\n                    else if (response.data.activity_type === 'Preparing Meals') {\n                        setLocation(response.data.delivery_location)\n                        let initDietaryRestrictions = [\n                            { name: 'Vegetarian', isChecked: false },\n                            { name: 'Kosher', isChecked: false },\n                            { name: 'Nut-free', isChecked: false },\n                            { name: 'Lactose-free', isChecked: false },\n                            { name: 'Wheat-free', isChecked: false },\n                            { name: 'Gluten-free', isChecked: false },\n                            { name: 'Soy-free', isChecked: false },\n                            { name: 'Sugar-free', isChecked: false },\n                            { name: 'Low-fat', isChecked: false },\n                            { name: 'Low-carb', isChecked: false },\n                            { name: 'Low-salt', isChecked: false },\n                        ]\n                        for (var j = 0; j < initDietaryRestrictions.length; j++) {\n                            if (response.data.dietary_restrictions.includes(initDietaryRestrictions[j].name))\n                                initDietaryRestrictions[i].isChecked = true\n                        }\n                        setDietaryRestrictions(initDietaryRestrictions)\n                    }\n                    else {\n                        setLocation(response.data.location)\n                    }\n\n                    // Who tab items\n                    const options = response.data.coordinators.map((item) => ({ label: `${item['first_name']} ${item['last_name']}`, value: item['id'] }))\n                    setSelectedCoordinators(options)\n                    setEstimatedHours(response.data.est_hours)\n                    setEstimatedMinutes(response.data.est_minutes)\n                    setNumVolunteers(response.data.num_volunteers_needed)\n                    setVolunteers(response.data.volunteers)\n                },\n                (error) => {\n                    console.log(error)\n                }\n            )\n    }, [activityPk])\n\n    function removeActivity(pk) {\n        var url = '/edit-activity/' + pk + '/'\n        var myHeaders = new Headers()\n        myHeaders.append('Authorization', `JWT ${localStorage.getItem('token')}`)\n\n        var requestOptions = {\n            method: 'DELETE',\n            headers: myHeaders,\n            redirect: 'follow'\n        }\n\n        fetch(url, requestOptions)\n            .then(response => response.text())\n            .then(result => window.location.reload())\n            .catch(error => console.log('error', error));\n    }\n\n    const handleSubmit = useCallback(() => {\n        removeActivity(activityPk)\n\n        let dietaryRestrictionStatus = {}\n        dietaryRestrictions.forEach((restriction) => dietaryRestrictionStatus[restriction.name] = restriction.isChecked)\n\n        let coordinatorIds = []\n        selectedCoordinators.forEach((coordinator) => coordinatorIds.push(coordinator['value']))\n\n        let volunteerIds = []\n        volunteers.forEach((volunteer) => volunteerIds.push(volunteer['id']))\n\n        const param = JSON.stringify({\n            'title': activityName,\n            'description': notes,\n            'activity_type': category,\n            'community': localStorage.getItem('community-id'),\n            \"dates\": selectedDays,\n            'est_hours': estimatedHours,\n            'est_minutes': estimatedMinutes,\n            'num_volunteers_needed': numVolunteers,\n            'pickup_location': pickupLocation,\n            'destination_location': destination,\n            'location': location,\n            'dietary_restrictions': dietaryRestrictionStatus,\n            'start_time': startTime,\n            'end_time': endTime,\n            'all_day': allDay,\n            'no_end_time': noEndTime,\n            'coordinators': coordinatorIds,\n            'volunteers': volunteerIds,\n        })\n        axios.post('/activity/', param, {\n            headers: {\n                'Authorization': `JWT ${localStorage.getItem('token')}`,\n                'Content-Type': 'application/json',\n            },\n        })\n            .then(\n                (response, err) => {\n                    console.log(err)\n                })\n\n    }, [category, activityName, notes, estimatedHours, estimatedMinutes, startYear, endYear, startMonth, endMonth, startDay, endDay, startTime, endTime, selectedDays, numVolunteers, selectedCoordinators, dietaryRestrictions, pickupLocation, destination, location, dietaryRestrictions, activityPk])\n\n    return (\n        <div>\n            <CommunityNavbar />\n            <Container style={containerStyle}>\n                <Columns isMultiline={true}>\n                    <Columns.Column size={3}>\n                        <SideBar />\n                    </Columns.Column>\n                    <Columns.Column size={9}>\n                        <Heading size={4}>Edit Activity</Heading>\n                        {activeTab === 'What' ? (\n                            <Tabs type='boxed' size='small' style={{ marginBottom: '0' }}>\n                                <Tabs.Tab active onClick={() => setActiveTab('What')}>\n                                    What\n                                </Tabs.Tab>\n                                <Tabs.Tab onClick={() => setActiveTab('When')}>When</Tabs.Tab>\n                                <Tabs.Tab onClick={() => setActiveTab('Where')}>Where</Tabs.Tab>\n                                <Tabs.Tab onClick={() => setActiveTab('Who')}>Who</Tabs.Tab>\n                            </Tabs>\n                        ) : activeTab === 'When' ? (\n                            <Tabs type='boxed' size='small' style={{ marginBottom: '0' }}>\n                                <Tabs.Tab onClick={() => setActiveTab('What')}>What</Tabs.Tab>\n                                <Tabs.Tab active onClick={() => setActiveTab('When')}>\n                                    When\n                                </Tabs.Tab>\n                                <Tabs.Tab onClick={() => setActiveTab('Where')}>Where</Tabs.Tab>\n                                <Tabs.Tab onClick={() => setActiveTab('Who')}>Who</Tabs.Tab>\n                            </Tabs>\n                        ) : activeTab === 'Where' ? (\n                            <Tabs type='boxed' size='small' style={{ marginBottom: '0' }}>\n                                <Tabs.Tab onClick={() => setActiveTab('What')}>What</Tabs.Tab>\n                                <Tabs.Tab onClick={() => setActiveTab('When')}>When</Tabs.Tab>\n                                <Tabs.Tab active onClick={() => setActiveTab('Where')}>\n                                    Where\n                                </Tabs.Tab>\n                                <Tabs.Tab onClick={() => setActiveTab('Who')}>Who</Tabs.Tab>\n                            </Tabs>\n                        ) : (\n                            <Tabs type='boxed' size='small' style={{ marginBottom: '0' }}>\n                                <Tabs.Tab onClick={() => setActiveTab('What')}>What</Tabs.Tab>\n                                <Tabs.Tab onClick={() => setActiveTab('When')}>When</Tabs.Tab>\n                                <Tabs.Tab onClick={() => setActiveTab('Where')}>Where</Tabs.Tab>\n                                <Tabs.Tab active onClick={() => setActiveTab('Who')}>\n                                    Who\n                                </Tabs.Tab>\n                            </Tabs>\n                        )}\n\n                        {activeTab === 'What' ? (\n                            <div className='what' style={formContainerStyle}>\n                                <div style={{ marginBottom: '2%' }}>\n                                    <Label>Category: <span style={{ color: '#F83D34' }}>*</span></Label>{category}\n                                </div>\n                                <Field>\n                                    <Label>\n                                        Activity Name<span style={{ color: '#F83D34' }}>*</span>\n                                    </Label>\n                                    <Control>\n                                        <Input maxLength={120}\n                                            value={activityName}\n                                            onChange={(e) => setActivityName(e.target.value)}\n                                        />\n                                    </Control>\n                                    {category === 'Giving Rides' ? (<p style={{ fontSize: '80%' }} className='has-text-grey'>example: \"Rides to medical appointment, Social Event, Soccer practice, Carpool.\"</p>) : (<></>)}\n                                    {category === 'Preparing Meals' ? (<p style={{ fontSize: '80%' }} className='has-text-grey'>example: \"Weekday Dinners, Sunday Brunch.\"</p>) : (<></>)}\n                                    {category === 'Shopping' ? (<p style={{ fontSize: '80%' }} className='has-text-grey'>example: \"Grocery shopping, Pharmacy pick-up.\"</p>) : (<></>)}\n                                    {category === 'Childcare' ? (<p style={{ fontSize: '80%' }} className='has-text-grey'>example: \"Weekday a.m. childcare, Weekend eve babysitting.\"</p>) : (<></>)}\n                                    {category === 'Pet Care' ? (<p style={{ fontSize: '80%' }} className='has-text-grey'>example: \"Weekday a.m. pet care, Weekend eve pet care.\"</p>) : (<></>)}\n                                    {category === 'Laundry' ? (<p style={{ fontSize: '80%' }} className='has-text-grey'>example: \"Weekly laundry load.\"</p>) : (<></>)}\n                                    {category === 'House Cleaning' ? (<p style={{ fontSize: '80%' }} className='has-text-grey'>example: \"Bathroom cleaning, Tidying bed.\"</p>) : (<></>)}\n                                    {category === 'Visits' ? (<p style={{ fontSize: '80%' }} className='has-text-grey'>example: \"Afternoon reading, Weekend visits.\"</p>) : (<></>)}\n                                    {category === 'Miscellaneous' ? (<p style={{ fontSize: '80%' }} className='has-text-grey'>examples: \"House cleaning, Lawn care, or other general errands.\"</p>) : (<></>)}\n                                    {category === 'Occasion' ? (<p style={{ fontSize: '80%' }} className='has-text-grey'>Need to keep track of important dates or milestones? Add important occasions such as birthdays, anniversaries, and more.</p>) : (<></>)}\n                                </Field>\n                                {category === 'Preparing Meals' && (\n                                    <Field>\n                                        <Label>Dietary Restrictions</Label>\n                                        <Columns>\n                                            <Columns.Column>\n                                                <Control>\n                                                    {dietaryRestrictions.map((restriction, i) => (\n                                                        <div style={checkboxStyle}>\n                                                            <Checkbox\n                                                                style={{ marginRight: '10px' }}\n                                                                onChange={() => {\n                                                                    setDietaryRestrictions((dietaryRestrictions) => {\n                                                                        dietaryRestrictions[i].isChecked = !dietaryRestrictions[i].isChecked\n                                                                        return dietaryRestrictions\n                                                                    })\n                                                                }}\n                                                                checked={dietaryRestrictions[i].isChecked}\n                                                            />\n                                                            <p>{restriction.name}</p>\n                                                        </div>\n                                                    ))}\n                                                </Control>\n                                            </Columns.Column>\n                                        </Columns>\n                                    </Field>\n                                )}\n                                <Field>\n                                    <Label>Notes</Label>\n                                    <Control>\n                                        <Textarea\n                                            value={notes}\n                                            onChange={(e) => setNotes(e.target.value)}\n                                        />\n                                    </Control>\n                                    {category === 'Giving Rides' ? (<p style={{ fontSize: '80%' }} className='has-text-grey'>examples: <br />- travel time <br />- other stops</p>) : (<></>)}\n                                    {category === 'Preparing Meals' ? (<p style={{ fontSize: '80%' }} className='has-text-grey'>examples: <br />- allergies <br />- no. people <br />- delivery instr.</p>) : (<></>)}\n                                    {category === 'Shopping' ? (<p style={{ fontSize: '80%' }} className='has-text-grey'>example: <br />- items needed</p>) : (<></>)}\n                                    {category === 'Childcare' ? (<p style={{ fontSize: '80%' }} className='has-text-grey'>example: <br />- feeding instructions<br />- kids favorites</p>) : (<></>)}\n                                    {category === 'Pet Care' ? (<p style={{ fontSize: '80%' }} className='has-text-grey'>example: <br />- feeding insrtuctions<br />- favorite pet toys</p>) : (<></>)}\n                                    {category === 'Laundry' ? (<p style={{ fontSize: '80%' }} className='has-text-grey'>example: <br />- washing machine settings</p>) : (<></>)}\n                                    {category === 'House Cleaning' ? (<p style={{ fontSize: '80%' }} className='has-text-grey'>example: <br />- rooms to clean</p>) : (<></>)}\n                                    {category === 'Visits' ? (<p style={{ fontSize: '80%' }} className='has-text-grey'>examples: <br />- additional instructions <br />- favorites <br />- activity ideas</p>) : (<></>)}\n                                    {category === 'Occasion' ? (<p style={{ fontSize: '80%' }} className='has-text-grey'>Share important information with members of your Community about this occasion.</p>) : (<></>)}\n                                </Field>\n                            </div>\n                        ) : activeTab === 'When' ? (\n                            <div className='when' style={formContainerStyle}>\n                                <Label>\n                                    Select Time<span style={{ color: '#F83D34' }}>*</span>\n                                </Label>\n                                <Columns>\n                                    <Columns.Column>\n                                        <Field style={{ marginRight: '10px' }}>\n                                            {category === 'Giving Rides' ? (<p>Pick-up Time</p>) : (<p>Start Time</p>)}\n                                            <Control>\n                                                <Select\n                                                    onChange={(e) => setStartTime(e.target.value)}\n                                                    name='startTime'\n                                                    value={startTime}\n                                                    disabled={allDay}\n                                                >\n                                                    {times.map((t) => (\n                                                        <option>{t}</option>\n                                                    ))}\n                                                </Select>\n                                                <div style={checkboxStyle}>\n                                                    <Checkbox\n                                                        style={{ marginRight: '10px' }}\n                                                        onChange={() => { setAllDay(!allDay) }}\n                                                    />\n                                                    <p>All Day</p>\n                                                </div>\n                                            </Control>\n                                        </Field>\n                                    </Columns.Column>\n                                    <Columns.Column>\n                                        <Field>\n                                            {category === 'Giving Rides' ? (<p>Drop-off Time {'(optional)'}</p>) : (<p>End Time {'(optional)'}</p>)}\n                                            <Control>\n                                                <Select\n                                                    onChange={(e) => setEndTime(e.target.value)}\n                                                    name='endTime'\n                                                    value={endTime}\n                                                    disabled={noEndTime}\n                                                >\n                                                    {times.map((t) => (\n                                                        <option>{t}</option>\n                                                    ))}\n                                                </Select>\n                                                <div style={checkboxStyle}>\n                                                    <Checkbox\n                                                        style={{ marginRight: '10px' }}\n                                                        onChange={() => { setNoEndTime(!noEndTime) }}\n                                                    />\n                                                    <p>None</p>\n                                                </div>\n                                            </Control>\n                                        </Field>\n                                    </Columns.Column>\n                                </Columns>\n                                <Label>\n                                    Select Dates<span style={{ color: '#F83D34' }}>*</span>\n                                </Label>\n                                Date Range\n                                <br />\n                                <Columns>\n                                    <Columns.Column>\n                                        <Field>\n                                            <Control>\n                                                <p style={noteStyle}>Start Date</p>\n                                                <Select\n                                                    onChange={(e) => setStartMonth(e.target.value)}\n                                                    name='startMonth'\n                                                    value={startMonth}\n                                                    style={{ marginRight: '10px' }}\n                                                >\n                                                    {months.map((m) => (\n                                                        <option>{m}</option>\n                                                    ))}\n                                                </Select>\n                                                <Select\n                                                    onChange={(e) => setStartDay(e.target.value)}\n                                                    name='startDay'\n                                                    value={startDay}\n                                                    style={{ marginRight: '10px' }}\n                                                >\n                                                    {count.slice(0, 31).map((d) => (\n                                                        <option>{d}</option>\n                                                    ))}\n                                                </Select>\n                                                <Select\n                                                    onChange={(e) => setStartYear(e.target.value)}\n                                                    name='startYear'\n                                                    value={startYear}\n                                                >\n                                                    {years.map((y) => (\n                                                        <option>{y}</option>\n                                                    ))}\n                                                </Select>\n                                            </Control>\n                                        </Field>\n                                    </Columns.Column>\n                                    <Columns.Column>\n                                        <Field>\n                                            <Control>\n                                                <p style={noteStyle}>End Date</p>\n                                                <Select\n                                                    onChange={(e) => setEndMonth(e.target.value)}\n                                                    name='endMonth'\n                                                    value={endMonth}\n                                                    style={{ marginRight: '10px' }}\n                                                >\n                                                    {months.map((m) => (\n                                                        <option>{m}</option>\n                                                    ))}\n                                                </Select>\n                                                <Select\n                                                    onChange={(e) => setEndDay(e.target.value)}\n                                                    name='endDay'\n                                                    value={endDay}\n                                                    style={{ marginRight: '10px' }}\n                                                >\n                                                    {count.slice(0, 31).map((d) => (\n                                                        <option>{d}</option>\n                                                    ))}\n                                                </Select>\n                                                <Select\n                                                    onChange={(e) => setEndYear(e.target.value)}\n                                                    name='endYear'\n                                                    value={endYear}\n                                                >\n                                                    {years.map((y) => (\n                                                        <option>{y}</option>\n                                                    ))}\n                                                </Select>\n                                            </Control>\n                                        </Field>\n                                    </Columns.Column>\n                                </Columns>\n                                <p style={noteStyle}>\n                                    <b>Select all applicable dates on the calendar below.</b>\n                                </p>\n                                <DayPicker\n                                    selectedDays={selectedDays}\n                                    onDayClick={handleDayClick}\n                                    month={new Date(startYear, months.indexOf(startMonth))}\n                                    numberOfMonths={\n                                        monthDiff(\n                                            new Date(startYear, months.indexOf(startMonth), startDay),\n                                            new Date(endYear, months.indexOf(endMonth), endDay)\n                                        ) + 1\n                                    }\n                                    disabledDays={[\n                                        {\n                                            after: new Date(\n                                                endYear,\n                                                months.indexOf(endMonth),\n                                                endDay\n                                            ),\n                                            before: new Date(\n                                                startYear,\n                                                months.indexOf(startMonth),\n                                                startDay\n                                            ),\n                                        },\n                                    ]}\n                                />\n                            </div>\n                        ) : activeTab === 'Where' ? (\n                            <div className='where' style={formContainerStyle}>\n                                <Label>Location</Label>\n                                {category === 'Giving Rides' ? (\n                                    <div style={{ marginBottom: '10px' }}>\n                                        <Field>\n                                            Pick-up Location\n                                            <Control>\n                                                <Textarea\n                                                    value={pickupLocation}\n                                                    onChange={(e) => setPickupLocation(e.target.value)}\n                                                    placeholder='Example: 123 Main Street, New York, NY'\n                                                />\n                                            </Control>\n                                        </Field>\n                                        <Field>\n                                            Destination\n                                            <Control>\n                                                <Textarea\n                                                    value={destination}\n                                                    onChange={(e) => setDestination(e.target.value)}\n                                                    placeholder='Example: 456 Walnut Ave, New York, NY'\n                                                />\n                                            </Control>\n                                            <p style={{ fontSize: '80%' }} className='has-text-grey'>\n                                                The system will try to automatically display directions to the specified address(es) specified.\n                                                For best results, please use this format: Address, City, State all on one line.\n                                            </p>\n                                        </Field>\n                                    </div>\n                                ) : (\n                                        <Field>\n                                            <Control>\n                                                <Textarea\n                                                    value={location}\n                                                    onChange={(e) => setLocation(e.target.value)}\n                                                    placeholder={\n                                                        category === 'Preparing Meals' && 'Delivery Location'\n                                                    }\n                                                />\n                                            </Control>\n                                            <p style={{ fontSize: '80%' }} className='has-text-grey'>\n                                                The system will try to automatically display directions to the specified address(es) specified.\n                                                For best results, please use this format: Address, City, State all on one line.\n                                            </p>\n                                        </Field>\n                                    )}\n                            </div>\n                        ) : (\n                            <div className='who' style={formContainerStyle}>\n                                <Field>\n                                    <Label>\n                                        Activity Coordinator(s)\n                                        <span style={{ color: '#F83D34' }}>*</span>\n                                    </Label>\n                                    <MultiSelect\n                                        options={coordinators}\n                                        value={selectedCoordinators}\n                                        onChange={setSelectedCoordinators}\n                                        labelledBy={'Select'}\n                                    />\n                                </Field>\n                                    <Label>\n                                        Estimated Average Task Time\n                                        <span style={{ color: '#F83D34' }}>*</span>\n                                    </Label>\n                                    <Columns>\n                                        <Columns.Column>\n                                            <Field>\n                                                <Control>\n                                                    <Input\n                                                        value={estimatedHours}\n                                                        onChange={(e) => setEstimatedHours(e.target.value)}\n                                                        placeholder='Hours'\n                                                    />\n                                                </Control>\n                                            </Field>\n                                            <Field>\n                                                <Control>\n                                                    <Input\n                                                        value={estimatedMinutes}\n                                                        onChange={(e) => setEstimatedMinutes(e.target.value)}\n                                                        placeholder='Minutes'\n                                                    />\n                                                </Control>\n                                            </Field>\n                                            <p style={{ fontSize: '80%' }} className='has-text-grey'>\n                                                Optional. The estimated time for a Volunteer to complete this task. This information is used for Activity Status Reports.\n                                            </p>\n                                        </Columns.Column>\n                                        <Columns.Column></Columns.Column>\n                                    </Columns>\n\n                                    <Field>\n                                        <Label>\n                                            Volunteers\n                                            <span style={{ color: '#F83D34' }}>*</span>\n                                        </Label>\n                                        <Control>\n                                            <div style={{ display: 'flex', alignItems: 'center' }}>\n                                                <Select\n                                                    onChange={(e) => setNumVolunteers(e.target.value)}\n                                                    name='numVolunteers'\n                                                    value={numVolunteers}\n                                                    style={{ marginRight: '10px' }}\n                                                >\n                                                    {count.map((c) => (\n                                                        <option>{c}</option>\n                                                    ))}\n                                                </Select>\n                                                Volunteers per task/time\n                                            </div>\n                                        </Control>\n                                    </Field>\n                                </div>\n                            )}\n                        <div\n                            style={{\n                                display: 'flex',\n                                justifyContent: 'space-between',\n                                marginTop: '20px',\n                            }}\n                        >\n                            <Link to='#'>\n                                <Button\n                                    className='is-primary is-inverted'\n                                    onClick={() =>\n                                        setActiveTab(\n                                            activeTab === 'When'\n                                                ? 'What'\n                                                : activeTab === 'Where'\n                                                    ? 'When'\n                                                    : 'Where'\n                                        )\n                                    }\n                                    style={{ display: activeTab === 'What' ? 'none' : 'block' }}\n                                >\n                                    Back\n                                </Button>\n                            </Link>\n                            <Link to={activeTab === 'Who' ? '/calendar' : '#'} style={{ color: 'white' }}>\n                                <Button\n                                    color='primary'\n                                    onClick={() => activeTab === 'Who' ? handleSubmit() :\n                                        setActiveTab(\n                                            activeTab === 'What'\n                                                ? 'When'\n                                                : activeTab === 'When'\n                                                    ? 'Where'\n                                                    : 'Who'\n                                        )\n                                    }\n                                    disabled={activeTab === 'Who' ? !validForm : false}\n                                >\n                                    {activeTab !== 'Who' ? 'Continue' : 'Finish'}\n                                </Button>\n                            </Link>\n                        </div>\n                    </Columns.Column>\n                </Columns>\n            </Container>\n        </div>\n    )\n}","import React, { useState, useEffect, useCallback } from 'react'\nimport { Edit2 } from 'react-feather'\nimport axios from 'axios'\nimport {\n  Control,\n  Label,\n  Field,\n  Input,\n  Textarea,\n} from 'react-bulma-components/lib/components/form'\nimport Modal from 'react-bulma-components/lib/components/modal'\nimport Heading from 'react-bulma-components/lib/components/heading'\nimport Button from 'react-bulma-components/lib/components/button'\n\nvar noteStyle = {\n  fontSize: '0.75rem',\n  fontStyle: 'italic',\n}\n\nconst EditCustomSection = ({\n  id,\n  name,\n  type,\n  title,\n  description,\n  link,\n  general_content,\n}) => {\n  const token = localStorage.getItem('token')\n  const [showEdit, setShowEdit] = useState(false)\n  const [newName, setNewName] = useState(name)\n  const [newTitle, setNewTitle] = useState(title)\n  const [newDescription, setNewDescription] = useState(description)\n  const [newLink, setNewLink] = useState(link)\n  const [validForm, setValidForm] = useState(false)\n\n  useEffect(() => {\n    const formValues = [name, type]\n    const notValidForm = formValues.some((formVal) => {\n      return (\n        formVal === '' ||\n        (type === 'BUTTON' && link === '') ||\n        (type !== 'BUTTON' && title === '')\n      )\n    })\n    setValidForm(notValidForm)\n  }, [newName, newTitle, newLink])\n\n  const handleSubmit = useCallback(() => {\n    const param = JSON.stringify({\n      section_id: id,\n      name: newName,\n      title: type === 'BUTTON' ? newName : newTitle,\n      type: type,\n      description: newDescription,\n      link: newLink,\n      community: localStorage.getItem('community-name'),\n      general_content: general_content,\n    })\n\n    axios\n      .post('/edit-custom-section/', param, {\n        headers: {\n          Authorization: `JWT ${token}`,\n          'Content-Type': 'application/json',\n        },\n      })\n      .then(\n        (response) => {\n          window.location.reload()\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [newName, newTitle, type, newDescription, newLink])\n\n  return (\n    <span>\n      <Button\n        color='primary'\n        style={{ marginRight: '10px' }}\n        onClick={() => setShowEdit(true)}\n      >\n        <Edit2 size={12} style={{ marginRight: '10px' }} />\n        Edit\n      </Button>\n      <Modal\n        show={showEdit}\n        onClose={() => setShowEdit(false)}\n        closeOnBlur={true}\n      >\n        <Modal.Content>\n          <div\n            style={{\n              backgroundColor: 'white',\n              borderRadius: '5px',\n              padding: '5%',\n            }}\n          >\n            <Heading size={5}>Edit Custom Section</Heading>\n            <Field>\n              <Label>\n                Name\n                <span style={{ color: '#F83D34' }}>*</span>\n              </Label>\n              <span style={noteStyle}>\n                This will be displayed in the sidebar.\n              </span>\n              <Control>\n                <Input\n                  value={newName}\n                  onChange={(e) => setNewName(e.target.value)}\n                />\n              </Control>\n            </Field>\n            {type !== 'BUTTON' && (\n              <Field>\n                <Label>\n                  Title\n                  <span style={{ color: '#F83D34' }}>*</span>\n                </Label>\n                <span style={noteStyle}>\n                  This will be displayed as the title of the page.\n                </span>\n                <Control>\n                  <Input\n                    value={newTitle}\n                    onChange={(e) => setNewTitle(e.target.value)}\n                  />\n                </Control>\n              </Field>\n            )}\n            <Field>\n              <Label>\n                {type !== 'BUTTON' ? 'Description' : 'Link'}\n                {type === 'BUTTON' && (\n                  <span style={{ color: '#F83D34' }}>*</span>\n                )}\n              </Label>\n              <Control>\n                {type !== 'BUTTON' ? (\n                  <Textarea\n                    value={newDescription}\n                    onChange={(e) => setNewDescription(e.target.value)}\n                  />\n                ) : (\n                  <Input\n                    value={newLink}\n                    onChange={(e) => setNewLink(e.target.value)}\n                  />\n                )}\n              </Control>\n            </Field>\n            <br />\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'space-between',\n              }}\n            >\n              <Button className='is-light' onClick={() => setShowEdit(false)}>\n                Cancel\n              </Button>\n              <Button\n                color='primary'\n                disabled={validForm}\n                onClick={() => handleSubmit()}\n              >\n                <Edit2 size={12} style={{ marginRight: '10px' }} />\n                Edit Section\n              </Button>\n            </div>\n          </div>\n        </Modal.Content>\n      </Modal>\n    </span>\n  )\n}\n\nexport default EditCustomSection\n","import React, { useState, useCallback } from 'react'\nimport { Trash2 } from 'react-feather'\n\nimport Modal from 'react-bulma-components/lib/components/modal'\nimport Heading from 'react-bulma-components/lib/components/heading'\nimport Button from 'react-bulma-components/lib/components/button'\n\nconst DeleteCustomSection = ({ id }) => {\n  const token = localStorage.getItem('token')\n  const [showDelete, setShowDelete] = useState(false)\n\n  // Delete custom section\n  const deleteSection = useCallback(() => {\n    var url = '/delete-custom-section/'\n    var myHeaders = new Headers()\n    myHeaders.append('Authorization', `JWT ${localStorage.getItem('token')}`)\n    myHeaders.append('id', id)\n\n    var formdata = new FormData()\n    formdata.append('id', id)\n\n    var requestOptions = {\n      method: 'DELETE',\n      headers: myHeaders,\n      body: formdata,\n      redirect: 'follow',\n    }\n\n    fetch(url, requestOptions)\n      .then((response) => response.text())\n      .then((result) => window.location.reload())\n      .catch((error) => console.log('error', error))\n  })\n\n  return (\n    <span>\n      <Button\n        style={{\n          boxShadow: '1px 1px 3px 2px rgba(0,0,0,0.1)',\n        }}\n        color='danger'\n        onClick={() => setShowDelete(true)}\n      >\n        <Trash2 size={12} style={{ marginRight: '10px' }} />\n        Delete\n      </Button>\n      <Modal\n        show={showDelete}\n        onClose={() => setShowDelete(false)}\n        closeOnBlur={true}\n      >\n        <Modal.Content>\n          <div\n            style={{\n              backgroundColor: 'white',\n              borderRadius: '5px',\n              padding: '5%',\n            }}\n          >\n            <Heading size={5}>Delete Custom Section</Heading>\n            <p>\n              Are you sure you want to delete this custom section? You can't\n              undo this action.\n            </p>\n            <br />\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'space-between',\n              }}\n            >\n              <Button className='is-light' onClick={() => setShowDelete(false)}>\n                Cancel\n              </Button>\n              <Button color='danger' onClick={() => deleteSection()}>\n                <Trash2 size={12} style={{ marginRight: '10px' }} />\n                Delete Section\n              </Button>\n            </div>\n          </div>\n        </Modal.Content>\n      </Modal>\n    </span>\n  )\n}\n\nexport default DeleteCustomSection\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Container from 'react-bulma-components/lib/components/container'\nimport Columns from 'react-bulma-components/lib/components/columns'\nimport Heading from 'react-bulma-components/lib/components/heading'\nimport CommunityNavbar from '../components/communityNavbar'\nimport Table from 'react-bulma-components/lib/components/table'\nimport axios from 'axios'\nimport SideBar from '../components/sidebar'\nimport EditCustomSection from '../components/editCustomSection'\nimport DeleteCustomSection from '../components/deleteCustomSection'\n\nexport default function ManageCustomSections() {\n  const token = localStorage.getItem('token')\n  const [sections, setSections] = useState([])\n\n\n  var formContainerStyle = {\n    padding: '5%',\n    border: '1px solid hsl(0, 0%, 86%)',\n    borderRadius: '10px',\n  }\n\n  var containerStyle = {\n    margin: '5% 5%',\n    maxWidth: '100%',\n  }\n\n  var noteStyle = {\n    fontSize: '0.75rem',\n    fontStyle: 'italic',\n  }\n\n  useEffect(() => {\n    axios\n      .get('/one-community/', {\n        headers: {\n          Authorization: `JWT ${token}`,\n        },\n        params: {\n          pk: localStorage.getItem('community-id'),\n        },\n      })\n      .then()\n  }, [token])\n\n  // Get custom sections\n  useEffect(() => {\n    axios\n      .get('/community-custom-sections/', {\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('token')}`,\n        },\n        params: {\n          name: localStorage.getItem('community-name'),\n        },\n      })\n      .then(\n        (response) => {\n          setSections(response.data)\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [])\n\n  return (\n    <div>\n      <CommunityNavbar />\n      <Container style={containerStyle}>\n        <Columns isMultiline={true}>\n          <Columns.Column size={3}>\n            <SideBar />\n          </Columns.Column>\n          <Columns.Column size={9}>\n            <Heading size={4}>Manage Custom Sections</Heading>\n            <Container style={formContainerStyle}>\n              <Table>\n                <thead>\n                  <tr>\n                    <th>Section Name</th>\n                    <th>Section Type</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {sections.length !== 0 ? (\n                    sections.map((s, index) => (\n                      <tr key={index}>\n                        <td>\n                          <strong>\n                            {s.type === 'BUTTON' ? (\n                              <a href={s.link} target='_blank'>\n                                {s.name}\n                              </a>\n                            ) : (\n                              <Link\n                                to={{\n                                  pathname: '/custom/' + s.name,\n                                  state: {\n                                    section: s.id,\n                                  },\n                                }}\n                              >\n                                {s.name}\n                              </Link>\n                            )}\n                          </strong>\n                          <br />\n                          {s.title}\n                        </td>\n                        <td>\n                          {s.type === 'DP'\n                            ? 'Discussions and Pages'\n                            : s.type === 'BUTTON'\n                            ? 'Button'\n                            : 'General'}\n                        </td>\n                        <td>\n                          <EditCustomSection\n                            id={s.id}\n                            name={s.name}\n                            type={s.type}\n                            title={s.title}\n                            description={s.description}\n                            link={s.link}\n                            general_content={s.general_content}\n                          />\n                          <DeleteCustomSection id={s.id} />\n                        </td>\n                      </tr>\n                    ))\n                  ) : (\n                    <tr className='has-text-grey-light' style={noteStyle}>\n                      <td>No custom sections created.</td>\n                    </tr>\n                  )}\n                </tbody>\n              </Table>\n            </Container>\n          </Columns.Column>\n        </Columns>\n      </Container>\n    </div>\n  )\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport { useHistory } from 'react-router-dom'\n\nimport { Input } from 'react-bulma-components/lib/components/form'\nimport Container from 'react-bulma-components/lib/components/container'\nimport Heading from 'react-bulma-components/lib/components/heading'\nimport Table from 'react-bulma-components/lib/components/table'\nimport Columns from 'react-bulma-components/lib/components/columns'\nimport Button from 'react-bulma-components/lib/components/button'\nimport { UserPlus, Check } from 'react-feather'\nimport SideBar from '../components/sidebar'\nimport CommunityNavbar from '../components/communityNavbar'\n\nexport default function CommunityPeople() {\n  var containerStyle = {\n    margin: '5% 5%',\n    maxWidth: '100%',\n  }\n\n  var noteStyle = {\n    color: '#E5E5E5',\n    fontStyle: 'italic',\n    margin: '15px',\n  }\n\n  const [people, setPeople] = useState([])\n  const [userRole, setUserRole] = useState('')\n  const [search, setSearch] = useState('')\n\n  let history = useHistory()\n\n  const roleMap = {\n    'Community Leader': 'COMM_LEADER',\n    Coordinator: 'COORDINATOR',\n    'Community Member': 'COMM_MEMBER',\n  }\n\n  useEffect(() => {\n    axios\n      .get('/community-people/', {\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('token')}`,\n          'Content-Type': 'application/json',\n        },\n        params: JSON.stringify({\n          user: localStorage.getItem('email'),\n          community: localStorage.getItem('community-name'),\n        }),\n      })\n      .then(\n        (response) => {\n          setPeople(Array.from(response.data.people))\n          setUserRole(response.data.user_role)\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [])\n\n  const editRole = useCallback((email, role) => {\n    const param = JSON.stringify({\n      'community-id': localStorage.getItem('community-id'),\n      'user-email': email,\n      role: roleMap[role],\n      is_approved: true,\n    })\n    axios\n      .post('/edit-community-user-role/', param, {\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('token')}`,\n          'Content-Type': 'application/json',\n        },\n      })\n      .then((result) => window.location.reload())\n      .catch((error) => console.log('error', error))\n  })\n\n  return (\n    <div>\n      <CommunityNavbar />\n      <Container style={containerStyle}>\n        <Columns isMultiline={true}>\n          <Columns.Column size={3}>\n            <SideBar />\n          </Columns.Column>\n          <Columns.Column size={9}>\n            <Heading size={4}>Review Join Requests</Heading>\n            <Input\n              value={search}\n              onChange={(e) => setSearch(e.target.value)}\n              placeholder='Search requests by name'\n              style={{ marginBottom: '3%' }}\n            />\n            <Table>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Email</th>\n                  <th>Approve Request</th>\n                </tr>\n              </thead>\n              <tbody>\n                {people.filter(\n                  (p) =>\n                    search === '' ||\n                    (p.first_name + p.last_name)\n                      .toLowerCase()\n                      .includes(search.toLowerCase())\n                ).length > 0 ? (\n                  people\n                    .filter(\n                      (p) =>\n                        search === '' ||\n                        (p.first_name + p.last_name)\n                          .toLowerCase()\n                          .includes(search.toLowerCase())\n                    )\n                    .filter((p) => !p.is_approved)\n                    .map((p, index) => (\n                      <tr key={index}>\n                        <td>\n                          <strong>\n                            <Link\n                              to={{\n                                pathname:\n                                  'community/' + p.first_name + p.last_name,\n                                state: {\n                                  first_name: p.first_name,\n                                  last_name: p.last_name,\n                                  email: p.email,\n                                  phone_number_1: p.phone_number_1,\n                                  phone_number_1_type: p.phone_number_1_type,\n                                  phone_number_2: p.phone_number_2,\n                                  phone_number_2_type: p.phone_number_2_type,\n                                  address_line_1: p.address_line_1,\n                                  address_line_2: p.address_line_2,\n                                  city: p.city,\n                                  state: p.state,\n                                  zipcode: p.zipcode,\n                                  country: p.country,\n                                  role: p.role,\n                                  pk: p.pk,\n                                },\n                              }}\n                            >\n                              {p.first_name} {p.last_name}\n                            </Link>\n                          </strong>\n                          <br />\n                          {p.role}\n                        </td>\n                        <td>{p.email}</td>\n                        <td>\n                          <Button\n                            color='primary'\n                            onClick={() => editRole(p.email, p.role)}\n                          >\n                            <Check size={12} style={{ marginRight: '10px' }} />\n                            Approve\n                          </Button>\n                        </td>\n                      </tr>\n                    ))\n                ) : (\n                  <tr className='has-text-grey-light' style={noteStyle}>\n                    <td>No join requests.</td>\n                  </tr>\n                )}\n              </tbody>\n            </Table>\n          </Columns.Column>\n        </Columns>\n      </Container>\n    </div>\n  )\n}\n","import React, { useState, useCallback, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport Container from 'react-bulma-components/lib/components/container'\nimport Heading from 'react-bulma-components/lib/components/heading'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\n\nimport {\n  Textarea,\n  Control,\n  Label,\n  Field,\n  Input,\n} from 'react-bulma-components/lib/components/form'\nimport Columns from 'react-bulma-components/lib/components/columns'\nimport Button from 'react-bulma-components/lib/components/button'\nimport MultiSelect from '@khanacademy/react-multi-select'\n\nimport CommunityNavbar from '../components/communityNavbar'\n\nexport default function EmailMembers() {\n  var containerStyle = {\n    margin: '5% auto',\n    maxWidth: '800px',\n    maxHeight: '1000px',\n    padding: '4rem',\n    border: '0.1rem solid #E5E5E5',\n    borderRadius: '1rem',\n  }\n\n  const token = localStorage.getItem('token')\n  const [inputEmail, setInputEmail] = useState('')\n  const [firstName, setFirstName] = useState('') // User sending the email\n  const [lastName, setLastName] = useState('') // User sending the email\n  const [success, setSuccess] = useState(false)\n  const [subject, setSubject] = useState('')\n  const [content, setContent] = useState('')\n  const [members, setMembers] = useState([])\n  const [selectedMembers, setSelectedMembers] = useState([])\n\n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      fetch('/current_user/', {\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('token')}`,\n        },\n      })\n        .then((res) => res.json())\n        .then((json) => {\n          setFirstName(json.first_name)\n          setLastName(json.last_name)\n        })\n    }\n  }, [])\n\n  useEffect(() => {\n    axios\n      .get('/community-people/', {\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('token')}`,\n          'Content-Type': 'application/json',\n        },\n        params: JSON.stringify({\n          user: localStorage.getItem('email'),\n          community: localStorage.getItem('community-name'),\n        }),\n      })\n      .then(\n        (response) => {\n          const options = response.data.people.map((item) => ({\n            label: `${item['first_name']} ${item['last_name']}`,\n            value: item['email'],\n          }))\n          setMembers(options)\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [])\n\n  let history = useHistory()\n  const sendEmail = useCallback((fromEmail, toEmails, community, sender) => {\n    setSuccess(true)\n    fetch('/send-email/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `JWT ${localStorage.getItem('token')}`,\n      },\n      body: JSON.stringify({\n        from_email: fromEmail,\n        to_emails: toEmails,\n        community: community,\n        sender: sender,\n        subject: subject,\n        content: content,\n      }),\n    })\n      .then((res) => res.json())\n      .then(\n        (json) => {\n          setSuccess(true)\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [])\n\n  if (success) {\n    return (\n      <div>\n        <CommunityNavbar />\n        <Container style={containerStyle}>\n          An email has been sent to the addresses you provided.\n          <br />\n          <Button\n            className='is-primary is-inverted'\n            style={{\n              marginTop: '3%',\n              boxShadow: '1px 1px 3px 2px rgba(0,0,0,0.1)',\n            }}\n            onClick={() => setSuccess(false)}\n          >\n            Back\n          </Button>\n        </Container>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <CommunityNavbar />\n      <Container style={containerStyle}>\n        <Heading size={4}>Email Members</Heading>\n        <strong>Send from:</strong> {localStorage.getItem('email')}\n        <Field>\n          <Label>Send to:</Label>\n          <Control>\n            <MultiSelect\n              valueRenderer={(selectedMembers) => (\n                <span width='100%'>\n                  Selected {selectedMembers.length} users{' '}\n                </span>\n              )}\n              options={members}\n              selected={selectedMembers}\n              onSelectedChanged={(selected) => setSelectedMembers(selected)}\n            />\n          </Control>\n        </Field>\n        <br />\n        <strong>Subject:</strong>\n        <Input\n          value={subject}\n          onChange={(e) => setSubject(e.target.value)}\n          placeholder='Enter subject of email message.'\n        ></Input>\n        <br />\n        <br />\n        <strong>Message:</strong>\n        <Textarea\n          value={content}\n          onChange={(e) => setContent(e.target.value)}\n          placeholder='Enter body of email message.'\n        ></Textarea>\n        <Columns style={{ marginTop: '5%' }}>\n          <Columns.Column>\n            <Link to='/community-people'>\n              <Button\n                className='is-primary is-inverted'\n                style={{\n                  marginBottom: '1rem',\n                  boxShadow: '1px 1px 3px 2px rgba(0,0,0,0.1)',\n                }}\n                fullwidth={true}\n              >\n                Cancel\n              </Button>\n            </Link>\n          </Columns.Column>\n          <Columns.Column>\n            <Button\n              color='primary'\n              style={{\n                marginBottom: '1rem',\n                boxShadow: '1px 1px 3px 2px rgba(0,0,0,0.1)',\n              }}\n              fullwidth={true}\n              onClick={() =>\n                sendEmail(\n                  localStorage.getItem('email'),\n                  selectedMembers,\n                  localStorage.getItem('community-name'),\n                  firstName + ' ' + lastName\n                )\n              }\n            >\n              Send Email\n            </Button>\n          </Columns.Column>\n        </Columns>\n      </Container>\n    </div>\n  )\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport axios from 'axios'\nimport Moment from 'moment'\nimport { Link } from 'react-router-dom'\nimport { Edit2, Trash2, CheckCircle, PauseCircle } from 'react-feather'\nimport { extendMoment } from 'moment-range'\n\nimport { Input, Select, Field, Label, Control } from 'react-bulma-components/lib/components/form'\nimport Container from 'react-bulma-components/lib/components/container'\nimport Heading from 'react-bulma-components/lib/components/heading'\nimport Table from 'react-bulma-components/lib/components/table'\nimport Columns from 'react-bulma-components/lib/components/columns'\nimport Button from 'react-bulma-components/lib/components/button'\nimport Modal from 'react-bulma-components/lib/components/modal'\nimport Section from 'react-bulma-components/lib/components/section'\n\nimport CommunityNavbar from '../components/communityNavbar'\nimport SideBar from '../components/sidebar'\n\nexport default function ManageActivities() {\n    // Create styles\n    var containerStyle = {\n        margin: '5% 5%',\n        maxWidth: '100%',\n    }\n\n    var formContainerStyle = {\n        padding: '5%',\n        border: '1px solid hsl(0, 0%, 86%)',\n        borderRadius: '10px',\n    }\n\n    var noteStyle = {\n        color: '#E5E5E5',\n        fontStyle: 'italic',\n        margin: '15px',\n    }\n\n    const activityTypes = [\n        'Filter by Activity Type',\n        'Giving Rides',\n        'Preparing Meals',\n        'Shopping',\n        'Childcare',\n        'Pet Care',\n        'House Cleaning',\n        'Laundry',\n        'Visits',\n        'Miscellaneous',\n        'Occasion'\n    ]\n\n    const years = Array.from(Array(5).keys()).map((y) => (y + (new Date().getFullYear())))\n\n    const count = Array.from(Array(51).keys()).slice(1, 51)\n\n    const monthMap = new Map()\n    monthMap['January'] = 1\n    monthMap['February'] = 2\n    monthMap['March'] = 3\n    monthMap['April'] = 4\n    monthMap['May'] = 5\n    monthMap['June'] = 6\n    monthMap['July'] = 7\n    monthMap['August'] = 8\n    monthMap['September'] = 9\n    monthMap['October'] = 10\n    monthMap['November'] = 11\n    monthMap['December'] = 12\n\n    const months = [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December',\n    ]\n\n    const nextMonthMap = {\n        'January': 'February',\n        'February': 'March',\n        'March': 'April',\n        'April': 'May',\n        'May': 'June',\n        'June': 'July',\n        'July': 'August',\n        'August': 'September',\n        'September': 'October',\n        'October': 'November',\n        'November': 'December',\n        'December': 'Janurary',\n    }\n\n    // Date range\n    const [startMonth, setStartMonth] = useState(months[new Date().getMonth()])\n    const [startDay, setStartDay] = useState(new Date().getDate())\n    const [startYear, setStartYear] = useState(new Date().getFullYear())\n    const [endMonth, setEndMonth] = useState(nextMonthMap[months[new Date().getMonth()]])\n    const [endDay, setEndDay] = useState(new Date().getDate())\n    const [endYear, setEndYear] = useState(new Date().getFullYear())\n\n    const [activities, setActivities] = useState([])\n    const [search, setSearch] = useState('')\n    const [selectedActivityType, setSelectedActivityType] = useState('Filter by Activity Type')\n    const moment = extendMoment(Moment);\n\n    const [showRemoveModal, setShowRemoveModel] = useState(false)\n    const [isDeactivate, setIsDeactivate] = useState(false)\n\n    const [selectedActivityId, setSelectedActivityId] = useState(0)\n    const [selectedActivityTitle, setSelectedActivityTitle] = useState('')\n\n    useEffect(() => {\n        axios\n            .get(`/activities/${localStorage.getItem('community-id')}`, {\n                headers: {\n                    Authorization: `JWT ${localStorage.getItem('token')}`,\n                },\n            })\n            .then(\n                (response) => {\n                    setActivities(response.data)\n                },\n                (error) => {\n                    console.log(error)\n                }\n            )\n    }, [])\n\n    const deactivateActivity = useCallback((pk) => {\n        setIsDeactivate(false)\n        setShowRemoveModel(false)\n        var url = '/edit-activity/' + pk + '/'\n        var myHeaders = new Headers()\n        myHeaders.append('Authorization', `JWT ${localStorage.getItem('token')}`)\n    \n        const param = JSON.stringify({\n          'is_active' : false\n        })\n    \n        axios\n            .patch(url, param, {\n              headers: {\n                'Authorization': `JWT ${localStorage.getItem('token')}`,\n                'Content-Type': 'application/json',\n              },\n            })\n              .then(\n                (response, err) => {\n                  console.log(err)\n                })\n              .then(result => window.location.reload())\n    })\n\n    //toggles popup view for delete and deactivate\n    function deactivate(deactivate, id, title) {\n        setSelectedActivityId(id)\n        setSelectedActivityTitle(title)\n        setIsDeactivate(deactivate);\n        setShowRemoveModel(true);\n    }\n\n    const removeActivity = useCallback((pk) => {\n        var url = '/edit-activity/' + pk + '/'\n        var myHeaders = new Headers()\n        myHeaders.append('Authorization', `JWT ${localStorage.getItem('token')}`)\n    \n        var requestOptions = {\n            method: 'DELETE',\n            headers: myHeaders,\n            redirect: 'follow'\n        }\n    \n        fetch(url, requestOptions)\n        .then(response => response.text())\n        .then(result => window.location.reload())\n        .catch(error => console.log('error', error));\n    })\n    \n\n    const isDateWithinRange = useCallback((date) => {\n        // Might need to offset date from UTC to actual timezone\n        var dateFormatted = moment(date.substr(0, 10), 'YYYY-MM-DD')\n        var startDate = moment(startYear + '-' + monthMap[startMonth] + '-' + startDay, 'YYYY-MM-DD')\n        var endDate = moment(endYear + '-' + monthMap[endMonth] + '-' + endDay, 'YYYY-MM-DD')\n        var range = moment().range(startDate, endDate)\n        return range.contains(dateFormatted)\n    }, [startDay, startMonth, startYear, endDay, endMonth, endYear])\n\n    return (\n        <div>\n            <CommunityNavbar />\n            <Container style={containerStyle}>\n                <Columns isMultiline={true}>\n                    <Columns.Column size={3}>\n                        <SideBar />\n                    </Columns.Column>\n                    <Columns.Column size={9}>\n                        <Heading size={4}>Manage Activities</Heading>\n                        <Container style={formContainerStyle}>\n                            <Columns>\n                                <Columns.Column size={8}>\n                                    <Input\n                                        value={search}\n                                        onChange={(e) => setSearch(e.target.value)}\n                                        placeholder='Search activities by name'\n                                        style={{ marginBottom: '3%' }}\n                                    />\n                                </Columns.Column>\n                                <Columns.Column size={4}>\n                                    <Field>\n                                        <Control>\n                                            <Select\n                                                onChange={(e) => setSelectedActivityType(e.target.value)}\n                                                name='selectedActivityType'\n                                                value={selectedActivityType}\n                                            >\n                                                {activityTypes.map((type) => (<option>{type}</option>))}\n                                            </Select>\n                                        </Control>\n                                    </Field>\n                                </Columns.Column>\n                            </Columns>\n                            <Columns style={{ marginTop: '-3%', marginBottom: '3%' }}>\n                                <Columns.Column size={5}>\n                                    <Field>\n                                        <Label>Start Date</Label>\n                                        <Control>\n                                            <Select\n                                                onChange={(e) => setStartMonth(e.target.value)}\n                                                name='startMonth'\n                                                value={startMonth}\n                                                style={{ marginRight: '10px' }}\n                                            >\n                                                {months.map((m) => (\n                                                    <option>{m}</option>\n                                                ))}\n                                            </Select>\n                                            <Select\n                                                onChange={(e) => setStartDay(e.target.value)}\n                                                name='startDay'\n                                                value={startDay}\n                                                style={{ marginRight: '10px' }}\n                                            >\n                                                {count.slice(0, 31).map((d) => (\n                                                    <option>{d}</option>\n                                                ))}\n                                            </Select>\n                                            <Select\n                                                onChange={(e) => setStartYear(e.target.value)}\n                                                name='startYear'\n                                                value={startYear}\n                                            >\n                                                {years.map((y) => (\n                                                    <option>{y}</option>\n                                                ))}\n                                            </Select>\n                                        </Control>\n                                    </Field>\n                                </Columns.Column>\n                                <Columns.Column size={5}>\n                                    <Field>\n                                        <Label>End Date</Label>\n                                        <Control>\n                                            <Select\n                                                onChange={(e) => setEndMonth(e.target.value)}\n                                                name='endMonth'\n                                                value={endMonth}\n                                                style={{ marginRight: '10px' }}\n                                            >\n                                                {months.map((m) => (\n                                                    <option>{m}</option>\n                                                ))}\n                                            </Select>\n                                            <Select\n                                                onChange={(e) => setEndDay(e.target.value)}\n                                                name='endDay'\n                                                value={endDay}\n                                                style={{ marginRight: '10px' }}\n                                            >\n                                                {count.slice(0, 31).map((d) => (\n                                                    <option>{d}</option>\n                                                ))}\n                                            </Select>\n                                            <Select\n                                                onChange={(e) => setEndYear(e.target.value)}\n                                                name='endYear'\n                                                value={endYear}\n                                            >\n                                                {years.map((y) => (\n                                                    <option>{y}</option>\n                                                ))}\n                                            </Select>\n                                        </Control>\n                                    </Field>\n                                </Columns.Column>\n                            </Columns>\n\n                            <Table>\n                                <thead>\n                                    <tr>\n                                        <th>Activity</th>\n                                        <th>Time</th>\n                                        <th>Options</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {activities.filter(\n                                        (a) =>\n                                            (search === '' || (a.title).toLowerCase().includes(search.toLowerCase()))\n                                            &&\n                                            (selectedActivityType === 'Filter by Activity Type' || a.activity_type === selectedActivityType)\n                                            &&\n                                            isDateWithinRange(a.start_time)\n                                        ).length > 0 ? (\n                                            activities.filter(\n                                                (a) =>\n                                                    (search === '' || (a.title).toLowerCase().includes(search.toLowerCase()))\n                                                    &&\n                                                    (selectedActivityType === 'Filter by Activity Type' || a.activity_type === selectedActivityType)\n                                                    &&\n                                                    (isDateWithinRange(a.start_time))\n                                            )\n                                                .map((a) => (\n                                                    <div>\n                                                    <tr key={a.id}>\n                                                        <td style={{width: '15%'}}>\n                                                            <strong>{a.title}</strong>\n                                                            <br />\n                                                            {a.activity_type}\n                                                        </td>\n                                                        <td style={{width: '15%'}}>\n                                                            {moment(a.start_time).format('LL')}<br />\n                                                            Between {moment(a.start_time).add(new Date(a.start_time).getTimezoneOffset(), 'm').format('LT')}{' '}\n                                                            and {moment(a.end_time).add(new Date(a.start_time).getTimezoneOffset(), 'm').format('LT')}\n                                                        </td>\n                                                        <td style={{width: '20%'}}>\n                                                            <Columns>\n                                                                <Columns.Column size={3}>\n                                                                    <Link to={'/edit-activity/' + a.title}>\n                                                                        <Button\n                                                                            style={{\n                                                                            boxShadow: '1px 1px 3px 2px rgba(0,0,0,0.1)',\n                                                                            }}\n                                                                            color='primary'\n                                                                            onClick={() => localStorage.setItem('activity-id', a.id)}\n                                                                        >\n                                                                            <Edit2 size={12} style={{ marginRight: '10px' }} />\n                                                                            Edit\n                                                                        </Button>\n                                                                    </Link>\n                                                                </Columns.Column>\n                                                                \n                                                                <Columns.Column size={4}>\n                                                                    <Button\n                                                                        style={{\n                                                                            boxShadow: '1px 1px 3px 2px rgba(0,0,0,0.1)',\n                                                                        }}\n                                                                        color='danger'\n                                                                        onClick={() => deactivate(false, a.id, a.title)}\n                                                                    >\n                                                                        <Trash2 size={12} style={{ marginRight: '10px' }} />\n                                                                        Delete\n                                                                    </Button>\n                                                                </Columns.Column>\n                                                                <Columns.Column size={5}>\n                                                                    {a.is_active ? \n                                                                        <Button\n                                                                            className='is-primary is-inverted'\n                                                                            style={{\n                                                                                boxShadow: '1px 1px 3px 2px rgba(0,0,0,0.1)',\n                                                                            }}\n                                                                            onClick={() => deactivate(true, a.id, a.title)}\n                                                                        >\n                                                                            <div>\n                                                                            <PauseCircle\n                                                                                size={12}\n                                                                                style={{ marginRight: '5px' }}\n                                                                            />\n                                                                            Deactivate\n                                                                            </div>\n                                                                        </Button>\n                                                                        :\n                                                                        <Button\n                                                                            className='is-primary is-inverted'\n                                                                            style={{\n                                                                            boxShadow: '1px 1px 3px 2px rgba(0,0,0,0.1)',\n                                                                            }}\n                                                                        >\n                                                                            <CheckCircle size={12} style={{ marginRight: '10px' }} />\n                                                                            Activate\n                                                                        </Button>\n                                                                    }\n                                                                </Columns.Column>\n                                                            </Columns>\n                                                        </td>\n                                                    </tr>\n                                                    <Modal\n                                                        show={showRemoveModal}\n                                                        onClose={() => setShowRemoveModel(false)}\n                                                        closeOnBlur={true}\n                                                    >\n                                                        <Modal.Card>\n                                                            <Modal.Card.Head onClose={() => setShowRemoveModel(false)}>\n                                                            {isDeactivate ? (\n                                                                <Modal.Card.Title>Deactivate \"{selectedActivityTitle}\"</Modal.Card.Title>\n                                                            ) : (\n                                                                <Modal.Card.Title>Delete \"{selectedActivityTitle}\"</Modal.Card.Title>\n                                                            )}\n\n                                                            </Modal.Card.Head>\n                                                            {isDeactivate ? (\n                                                                <Section style={{ backgroundColor: 'white' }}>\n                                                                    Are you sure you want to deactivate this activity?\n                                                                </Section>\n                                                            ) : (\n                                                                <Section style={{ backgroundColor: 'white' }}>\n                                                                    Are you sure you want to delete this activity? You can't undo this action.\n                                                                </Section>\n                                                            )}\n\n                                                            <Modal.Card.Foot\n                                                            style={{\n                                                                alignItems: 'center',\n                                                                justifyContent: 'space-between',\n                                                            }}\n                                                            >\n                                                            <Button onClick={() => setShowRemoveModel(false)}>Cancel</Button>\n                                                            {isDeactivate ? (\n                                                                <Button color='primary' onClick={() => deactivateActivity(selectedActivityId)}>\n                                                                    Deactivate Activity\n                                                                </Button>\n                                                            ) : (\n                                                                <Button color='primary' onClick={() => removeActivity(selectedActivityId)}>\n                                                                    Delete Activity\n                                                                </Button>\n                                                            )}\n                                                            </Modal.Card.Foot>\n                                                        </Modal.Card>\n                                                    </Modal>\n                                                    \n                                                </div>\n                                            ))\n                                        ) : (\n                                            <p className='has-text-grey-light' style={noteStyle}>\n                                                No activities match this search.\n                                            </p>\n                                        )}\n                                </tbody>\n                            </Table>\n                        </Container>\n                    </Columns.Column>\n                </Columns>\n            </Container>\n        </div>\n    )\n}\n","import React, { useState, useCallback } from 'react'\nimport { Route, Switch, BrowserRouter as Router } from 'react-router-dom'\nimport axios from 'axios'\n\nimport Header from './components/header'\nimport AppFooter from './components/footer'\nimport PrivateRoute from './components/privateroute'\n\nimport Register from './pages/Register'\nimport MyCommunities from './pages/MyCommunities'\nimport SelectCommunities from './pages/JoinCommunities'\nimport CreateCommunity from './pages/CreateCommunity'\nimport Login from './pages/Login'\nimport CommunityAbout from './pages/CommunityAbout'\nimport Welcome from './pages/Welcome'\nimport ForgotPassword from './pages/ForgotPassword'\nimport ResetPassword from './pages/ResetPassword'\nimport AccountSettings from './pages/AccountSettings'\nimport EmailSettings from './pages/EmailSettings'\nimport CalendarPage from './pages/CalendarPage'\nimport ForgotPasswordConfirm from './pages/ForgotPasswordConfirm.js'\nimport ResetPasswordConfirm from './pages/ResetPasswordConfirm.js'\nimport CreateNewActivity from './pages/CreateNewActivity'\nimport Announcements from './pages/Announcements'\nimport CreateAnnouncement from './pages/CreateAnnouncement'\nimport OneCommunityMember from './pages/CommunityOneMember'\nimport CommunityAddMembers from './pages/CommunityAddMember'\nimport CommunityEdit from './pages/CommunityEdit'\nimport CommunityPeople from './pages/CommunityPeople'\nimport CommunityHome from './pages/CommunityHome'\nimport WaysToHelp from './pages/WaysToHelp'\nimport WellWishes from './pages/WellWishes'\nimport CreateCustomSection from './pages/CreateCustomSection'\nimport ActivityReport from './pages/ActivityReport'\nimport CustomGeneral from './pages/CustomGeneral'\nimport PhotoGallery from './pages/PhotoGallery'\nimport MessageBoard from './pages/MessageBoard'\nimport PasswordSettings from './pages/PasswordSettings'\nimport ActivityEdit from './pages/ActivityEdit'\nimport ManageCustomSections from './pages/ManageCustomSections'\nimport JoinRequests from './pages/JoinRequests'\nimport EmailMembers from './pages/EmailMembers'\nimport ManageActivities from './pages/ManageActivities'\n\nexport default function App() {\n  const [loggedIn, setLoggedIn] = useState(\n    localStorage.getItem('token') &&\n      localStorage.getItem('token') !== 'undefined' &&\n      localStorage.getItem('token') !== undefined\n      ? true\n      : false\n  )\n\n  const handleLogin = useCallback((email, password, rememberMe) => {\n    fetch('/token-auth/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password,\n      }),\n    })\n      .then((res) => res.json())\n      .then(\n        (json) => {\n          localStorage.setItem('is-staff', json.user.is_staff)\n          localStorage.setItem('token', json.token)\n          localStorage.setItem('rememberMe', rememberMe)\n          localStorage.setItem('email', email)\n          localStorage.getItem('token') &&\n          localStorage.getItem('token') !== 'undefined' &&\n          localStorage.getItem('token') !== undefined\n            ? setLoggedIn(true)\n            : setLoggedIn(false)\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n      .catch(function (error) {\n        if (error.response) {\n          // Request made and server responded\n          console.log(error.response.data)\n          console.log(error.response.status)\n          console.log(error.response.headers)\n        } else if (error.request) {\n          // The request was made but no response was received\n          console.log(error.request)\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log('Error', error.message)\n        }\n      })\n  }, [])\n\n  const handleSignup = useCallback(\n    (\n      email,\n      password,\n      firstName,\n      lastName,\n      addressLine1,\n      addressLine2,\n      city,\n      country,\n      state,\n      zipcode,\n      phoneNumber1,\n      phoneNumber1Type,\n      phoneNumber2,\n      phoneNumber2Type,\n      howLearn,\n      who,\n      howHelp,\n      howKnow,\n      skillsToOffer\n    ) => {\n      var FormData = require('form-data')\n      var data = new FormData()\n      data.append('email', email)\n      data.append('password', password)\n      data.append('first_name', firstName)\n      data.append('last_name', lastName)\n      data.append('address_line_1', addressLine1)\n      data.append('address_line_2', addressLine2)\n      data.append('city', city)\n      data.append('country', country)\n      data.append('state', state)\n      data.append('zipcode', zipcode)\n      data.append('phone_number_1', phoneNumber1)\n      data.append('phone_number_1_type', phoneNumber1Type)\n      data.append('phone_number_2', phoneNumber2)\n      data.append('phone_number_2_type', phoneNumber2Type)\n      data.append('how_learn', howLearn)\n      data.append('how_help', howHelp)\n      data.append('how_know', howKnow)\n      data.append('skills_to_offer', skillsToOffer)\n      data.append('who', who)\n\n      var config = {\n        method: 'post',\n        url: process.env.REACT_APP_API_URL + '/users/',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        data: data,\n      }\n\n      axios(config)\n        .then(function (response) {\n          localStorage.setItem('is-staff', response.data.is_staff)\n          localStorage.setItem('token', response.data.token)\n          localStorage.setItem('email', email)\n          localStorage.getItem('token') &&\n          localStorage.getItem('token') !== 'undefined' &&\n          localStorage.getItem('token') !== undefined\n            ? setLoggedIn(true)\n            : setLoggedIn(false)\n        })\n        .catch(function (error) {\n          console.log(error)\n        })\n    },\n    []\n  )\n\n  const handleLogout = useCallback(() => {\n    localStorage.clear()\n    setLoggedIn(false)\n  }, [])\n\n  const handleForgotPassword = useCallback((email) => {\n    fetch('/reset-password/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ email: email }),\n    })\n      .then((res) => res.json())\n      .then(\n        (json) => {},\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [])\n\n  return (\n    <div>\n      <Router>\n        <Header logged_in={loggedIn} handle_logout={handleLogout} />\n        <Switch>\n          {/* Routes that are available without authentication */}\n          <Route\n            path='/register'\n            render={() => (\n              <Register handle_signup={handleSignup} logged_in={loggedIn} />\n            )}\n          />\n          <Route\n            path='/login'\n            render={() => (\n              <Login handle_login={handleLogin} logged_in={loggedIn} />\n            )}\n          />\n          <Route path='/' exact component={Welcome} />\n          <Route\n            path='/forgot-password'\n            render={() => (\n              <ForgotPassword handle_forgot_password={handleForgotPassword} />\n            )}\n          />\n          <Route path='/reset-password' exact component={ResetPassword} />\n          <Route\n            path='/forgot-password-confirmation'\n            exact\n            component={ForgotPasswordConfirm}\n          />\n          <Route\n            path='/reset-password-confirmation'\n            exact\n            component={ResetPasswordConfirm}\n          />\n\n          {/* Routes that are available only if user logs in */}\n          <PrivateRoute\n            path='/my-communities'\n            exact\n            component={MyCommunities}\n          />\n          <PrivateRoute\n            path='/select-communities'\n            exact\n            component={SelectCommunities}\n          />\n          <PrivateRoute\n            path='/create-community'\n            exact\n            component={CreateCommunity}\n          />\n          <PrivateRoute\n            path='/account-settings'\n            exact\n            component={AccountSettings}\n          />\n          <PrivateRoute\n            path='/email-settings'\n            exact\n            component={EmailSettings}\n          />\n          <PrivateRoute\n            path='/community-home'\n            exact\n            component={CommunityHome}\n          />\n          <PrivateRoute path='/calendar' exact component={CalendarPage} />\n          <PrivateRoute\n            path='/create-new-activity'\n            exact\n            component={CreateNewActivity}\n          />\n          <PrivateRoute path='/announcements' exact component={Announcements} />\n          <PrivateRoute\n            path='/create-announcement'\n            exact\n            component={CreateAnnouncement}\n          />\n          <PrivateRoute\n            path='/community-people'\n            exact\n            component={CommunityPeople}\n          />\n          <PrivateRoute\n            path='/community/:member'\n            exact\n            component={OneCommunityMember}\n          />\n          <PrivateRoute\n            path='/add-people'\n            exact\n            component={CommunityAddMembers}\n          />\n          <PrivateRoute path='/ways-to-help' exact component={WaysToHelp} />\n          <PrivateRoute path='/well-wishes' exact component={WellWishes} />\n          <PrivateRoute\n            path='/create-custom-section'\n            exact\n            component={CreateCustomSection}\n          />\n          <PrivateRoute path='/about' exact component={CommunityAbout} />\n          <PrivateRoute\n            path='/activity-report'\n            exact\n            component={ActivityReport}\n          />\n          <PrivateRoute\n            path='/custom/:section'\n            exact\n            component={CustomGeneral}\n          />\n          <PrivateRoute path='/photo-gallery' exact component={PhotoGallery} />\n          <PrivateRoute\n            path='/edit-community'\n            exact\n            component={CommunityEdit}\n          />\n          <PrivateRoute path='/message-board' exact component={MessageBoard} />\n          <PrivateRoute\n            path='/password-settings'\n            exact\n            component={PasswordSettings}\n          />\n          <PrivateRoute\n            path='/edit-activity/:activity'\n            exact\n            component={ActivityEdit}\n          />\n          <PrivateRoute\n            path='/manage-custom-sections'\n            exact\n            component={ManageCustomSections}\n          />\n          <PrivateRoute path='/join-requests' exact component={JoinRequests} />\n          <PrivateRoute path='/email-members' exact component={EmailMembers} />\n          <PrivateRoute\n            path='/manage-activities'\n            exact\n            component={ManageActivities}\n          />\n        </Switch>\n        <AppFooter />\n      </Router>\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}