"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _typography = require("../../typography");

var _theme = require("../../theme");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var Badge =
/*#__PURE__*/
function (_PureComponent) {
  (0, _inherits2["default"])(Badge, _PureComponent);

  function Badge() {
    (0, _classCallCheck2["default"])(this, Badge);
    return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(Badge).apply(this, arguments));
  }

  (0, _createClass2["default"])(Badge, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          theme = _this$props.theme,
          className = _this$props.className,
          propsColor = _this$props.color,
          isInteractive = _this$props.isInteractive,
          isSolid = _this$props.isSolid,
          props = (0, _objectWithoutProperties2["default"])(_this$props, ["theme", "className", "color", "isInteractive", "isSolid"]);

      var _theme$getBadgeProps = theme.getBadgeProps({
        color: propsColor,
        isSolid: isSolid
      }),
          color = _theme$getBadgeProps.color,
          backgroundColor = _theme$getBadgeProps.backgroundColor;

      var appearance = isInteractive ? 'interactive' : 'default';
      var classNames = (0, _classnames["default"])(className, theme.getBadgeClassName(appearance));
      return _react["default"].createElement(_typography.Strong, (0, _extends2["default"])({
        size: 300
      }, Badge.styles, {
        color: color,
        backgroundColor: backgroundColor
      }, props, {
        className: classNames
      }));
    }
  }]);
  return Badge;
}(_react.PureComponent);

Badge.displayName = "Badge";
(0, _defineProperty2["default"])(Badge, "propTypes", _objectSpread({}, _typography.Strong.propTypes, {
  /**
   * The color used for the badge.
   */
  color: _propTypes["default"].string.isRequired,

  /**
   * Whether or not to apply hover/focus/active styles
   */
  isInteractive: _propTypes["default"].bool,

  /**
   * Theme provided by ThemeProvider.
   */
  theme: _propTypes["default"].object.isRequired
}));
(0, _defineProperty2["default"])(Badge, "defaultProps", {
  color: 'neutral',
  isInteractive: false,
  isSolid: false
});
(0, _defineProperty2["default"])(Badge, "styles", {
  display: 'inline-block',
  boxSizing: 'border-box',
  height: 16,
  paddingTop: 0,
  paddingRight: 6,
  paddingBottom: 0,
  paddingLeft: 6,
  borderRadius: 2,
  textAlign: 'center',
  textDecoration: 'none',
  textTransform: 'uppercase'
});

var _default = (0, _theme.withTheme)(Badge);

exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9iYWRnZXMvc3JjL0JhZGdlLmpzIl0sIm5hbWVzIjpbIkJhZGdlIiwicHJvcHMiLCJ0aGVtZSIsImNsYXNzTmFtZSIsInByb3BzQ29sb3IiLCJjb2xvciIsImlzSW50ZXJhY3RpdmUiLCJpc1NvbGlkIiwiZ2V0QmFkZ2VQcm9wcyIsImJhY2tncm91bmRDb2xvciIsImFwcGVhcmFuY2UiLCJjbGFzc05hbWVzIiwiZ2V0QmFkZ2VDbGFzc05hbWUiLCJzdHlsZXMiLCJQdXJlQ29tcG9uZW50IiwiU3Ryb25nIiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwic3RyaW5nIiwiaXNSZXF1aXJlZCIsImJvb2wiLCJvYmplY3QiLCJkaXNwbGF5IiwiYm94U2l6aW5nIiwiaGVpZ2h0IiwicGFkZGluZ1RvcCIsInBhZGRpbmdSaWdodCIsInBhZGRpbmdCb3R0b20iLCJwYWRkaW5nTGVmdCIsImJvcmRlclJhZGl1cyIsInRleHRBbGlnbiIsInRleHREZWNvcmF0aW9uIiwidGV4dFRyYW5zZm9ybSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7OztJQUVNQSxLOzs7Ozs7Ozs7Ozs7NkJBd0NLO0FBQUEsd0JBUUgsS0FBS0MsS0FSRjtBQUFBLFVBRUxDLEtBRkssZUFFTEEsS0FGSztBQUFBLFVBR0xDLFNBSEssZUFHTEEsU0FISztBQUFBLFVBSUVDLFVBSkYsZUFJTEMsS0FKSztBQUFBLFVBS0xDLGFBTEssZUFLTEEsYUFMSztBQUFBLFVBTUxDLE9BTkssZUFNTEEsT0FOSztBQUFBLFVBT0ZOLEtBUEU7O0FBQUEsaUNBVTRCQyxLQUFLLENBQUNNLGFBQU4sQ0FBb0I7QUFDckRILFFBQUFBLEtBQUssRUFBRUQsVUFEOEM7QUFFckRHLFFBQUFBLE9BQU8sRUFBUEE7QUFGcUQsT0FBcEIsQ0FWNUI7QUFBQSxVQVVDRixLQVZELHdCQVVDQSxLQVZEO0FBQUEsVUFVUUksZUFWUix3QkFVUUEsZUFWUjs7QUFlUCxVQUFNQyxVQUFVLEdBQUdKLGFBQWEsR0FBRyxhQUFILEdBQW1CLFNBQW5EO0FBQ0EsVUFBTUssVUFBVSxHQUFHLDRCQUFHUixTQUFILEVBQWNELEtBQUssQ0FBQ1UsaUJBQU4sQ0FBd0JGLFVBQXhCLENBQWQsQ0FBbkI7QUFFQSxhQUNFLGdDQUFDLGtCQUFEO0FBQ0UsUUFBQSxJQUFJLEVBQUU7QUFEUixTQUVNVixLQUFLLENBQUNhLE1BRlo7QUFHRSxRQUFBLEtBQUssRUFBRVIsS0FIVDtBQUlFLFFBQUEsZUFBZSxFQUFFSTtBQUpuQixTQUtNUixLQUxOO0FBTUUsUUFBQSxTQUFTLEVBQUVVO0FBTmIsU0FERjtBQVVEOzs7RUFwRWlCRyxvQjs7QUFBZGQsSztpQ0FBQUEsSyxpQ0FFQ2UsbUJBQU9DLFM7QUFFVjs7O0FBR0FYLEVBQUFBLEtBQUssRUFBRVksc0JBQVVDLE1BQVYsQ0FBaUJDLFU7O0FBRXhCOzs7QUFHQWIsRUFBQUEsYUFBYSxFQUFFVyxzQkFBVUcsSTs7QUFFekI7OztBQUdBbEIsRUFBQUEsS0FBSyxFQUFFZSxzQkFBVUksTUFBVixDQUFpQkY7O2lDQWpCdEJuQixLLGtCQW9Ca0I7QUFDcEJLLEVBQUFBLEtBQUssRUFBRSxTQURhO0FBRXBCQyxFQUFBQSxhQUFhLEVBQUUsS0FGSztBQUdwQkMsRUFBQUEsT0FBTyxFQUFFO0FBSFcsQztpQ0FwQmxCUCxLLFlBMEJZO0FBQ2RzQixFQUFBQSxPQUFPLEVBQUUsY0FESztBQUVkQyxFQUFBQSxTQUFTLEVBQUUsWUFGRztBQUdkQyxFQUFBQSxNQUFNLEVBQUUsRUFITTtBQUlkQyxFQUFBQSxVQUFVLEVBQUUsQ0FKRTtBQUtkQyxFQUFBQSxZQUFZLEVBQUUsQ0FMQTtBQU1kQyxFQUFBQSxhQUFhLEVBQUUsQ0FORDtBQU9kQyxFQUFBQSxXQUFXLEVBQUUsQ0FQQztBQVFkQyxFQUFBQSxZQUFZLEVBQUUsQ0FSQTtBQVNkQyxFQUFBQSxTQUFTLEVBQUUsUUFURztBQVVkQyxFQUFBQSxjQUFjLEVBQUUsTUFWRjtBQVdkQyxFQUFBQSxhQUFhLEVBQUU7QUFYRCxDOztlQTZDSCxzQkFBVWhDLEtBQVYsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBQdXJlQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgY3ggZnJvbSAnY2xhc3NuYW1lcydcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcbmltcG9ydCB7IFN0cm9uZyB9IGZyb20gJy4uLy4uL3R5cG9ncmFwaHknXG5pbXBvcnQgeyB3aXRoVGhlbWUgfSBmcm9tICcuLi8uLi90aGVtZSdcblxuY2xhc3MgQmFkZ2UgZXh0ZW5kcyBQdXJlQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICAuLi5TdHJvbmcucHJvcFR5cGVzLFxuXG4gICAgLyoqXG4gICAgICogVGhlIGNvbG9yIHVzZWQgZm9yIHRoZSBiYWRnZS5cbiAgICAgKi9cbiAgICBjb2xvcjogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuXG4gICAgLyoqXG4gICAgICogV2hldGhlciBvciBub3QgdG8gYXBwbHkgaG92ZXIvZm9jdXMvYWN0aXZlIHN0eWxlc1xuICAgICAqL1xuICAgIGlzSW50ZXJhY3RpdmU6IFByb3BUeXBlcy5ib29sLFxuXG4gICAgLyoqXG4gICAgICogVGhlbWUgcHJvdmlkZWQgYnkgVGhlbWVQcm92aWRlci5cbiAgICAgKi9cbiAgICB0aGVtZTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkXG4gIH1cblxuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIGNvbG9yOiAnbmV1dHJhbCcsXG4gICAgaXNJbnRlcmFjdGl2ZTogZmFsc2UsXG4gICAgaXNTb2xpZDogZmFsc2VcbiAgfVxuXG4gIHN0YXRpYyBzdHlsZXMgPSB7XG4gICAgZGlzcGxheTogJ2lubGluZS1ibG9jaycsXG4gICAgYm94U2l6aW5nOiAnYm9yZGVyLWJveCcsXG4gICAgaGVpZ2h0OiAxNixcbiAgICBwYWRkaW5nVG9wOiAwLFxuICAgIHBhZGRpbmdSaWdodDogNixcbiAgICBwYWRkaW5nQm90dG9tOiAwLFxuICAgIHBhZGRpbmdMZWZ0OiA2LFxuICAgIGJvcmRlclJhZGl1czogMixcbiAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxuICAgIHRleHREZWNvcmF0aW9uOiAnbm9uZScsXG4gICAgdGV4dFRyYW5zZm9ybTogJ3VwcGVyY2FzZSdcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7XG4gICAgICB0aGVtZSxcbiAgICAgIGNsYXNzTmFtZSxcbiAgICAgIGNvbG9yOiBwcm9wc0NvbG9yLFxuICAgICAgaXNJbnRlcmFjdGl2ZSxcbiAgICAgIGlzU29saWQsXG4gICAgICAuLi5wcm9wc1xuICAgIH0gPSB0aGlzLnByb3BzXG5cbiAgICBjb25zdCB7IGNvbG9yLCBiYWNrZ3JvdW5kQ29sb3IgfSA9IHRoZW1lLmdldEJhZGdlUHJvcHMoe1xuICAgICAgY29sb3I6IHByb3BzQ29sb3IsXG4gICAgICBpc1NvbGlkXG4gICAgfSlcblxuICAgIGNvbnN0IGFwcGVhcmFuY2UgPSBpc0ludGVyYWN0aXZlID8gJ2ludGVyYWN0aXZlJyA6ICdkZWZhdWx0J1xuICAgIGNvbnN0IGNsYXNzTmFtZXMgPSBjeChjbGFzc05hbWUsIHRoZW1lLmdldEJhZGdlQ2xhc3NOYW1lKGFwcGVhcmFuY2UpKVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxTdHJvbmdcbiAgICAgICAgc2l6ZT17MzAwfVxuICAgICAgICB7Li4uQmFkZ2Uuc3R5bGVzfVxuICAgICAgICBjb2xvcj17Y29sb3J9XG4gICAgICAgIGJhY2tncm91bmRDb2xvcj17YmFja2dyb3VuZENvbG9yfVxuICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lc31cbiAgICAgIC8+XG4gICAgKVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IHdpdGhUaGVtZShCYWRnZSlcbiJdfQ==