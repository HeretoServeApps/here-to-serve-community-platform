"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _themer = require("../../../../themer");

var _memoizeClassName = _interopRequireDefault(require("../utils/memoizeClassName"));

var _scales = _interopRequireDefault(require("../foundational-styles/scales"));

var defaultAppearance = _themer.Themer.createSwitchAppearance({
  base: {
    transition: 'all 120ms ease-in-out',
    cursor: 'pointer',
    color: 'white',
    backgroundColor: _scales["default"].neutral.N5A,
    borderRadius: 9999
  },
  disabled: {
    opacity: 0.5,
    backgroundImage: 'none'
  },
  hover: {
    backgroundColor: _scales["default"].neutral.N5A
  },
  active: {
    backgroundColor: _scales["default"].neutral.N6A
  },
  focus: {
    boxShadow: "0 0 0 3px ".concat(_scales["default"].blue.B6A)
  },
  checked: {
    backgroundColor: _scales["default"].blue.B8,
    color: 'white'
  },
  checkedHover: {
    backgroundColor: _scales["default"].blue.B8,
    color: 'white'
  },
  checkedActive: {
    backgroundColor: _scales["default"].blue.B9,
    color: 'white'
  },
  checkedDisabled: {}
});
/**
 * Get the className of a `Switch`.
 * @param {string} appearance
 * @return {Object} the appearance object.
 */


var getSwitchAppearance = function getSwitchAppearance() {
  return defaultAppearance;
};
/**
 * Get the className of a `Switch`.
 * @param {string} appearance
 * @return {string} the appearance class name.
 */


var _default = (0, _memoizeClassName["default"])(getSwitchAppearance);

exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy90aGVtZS9zcmMvZGVmYXVsdC10aGVtZS9jb21wb25lbnQtc3BlY2lmaWMvZ2V0U3dpdGNoQ2xhc3NOYW1lLmpzIl0sIm5hbWVzIjpbImRlZmF1bHRBcHBlYXJhbmNlIiwiVGhlbWVyIiwiY3JlYXRlU3dpdGNoQXBwZWFyYW5jZSIsImJhc2UiLCJ0cmFuc2l0aW9uIiwiY3Vyc29yIiwiY29sb3IiLCJiYWNrZ3JvdW5kQ29sb3IiLCJzY2FsZXMiLCJuZXV0cmFsIiwiTjVBIiwiYm9yZGVyUmFkaXVzIiwiZGlzYWJsZWQiLCJvcGFjaXR5IiwiYmFja2dyb3VuZEltYWdlIiwiaG92ZXIiLCJhY3RpdmUiLCJONkEiLCJmb2N1cyIsImJveFNoYWRvdyIsImJsdWUiLCJCNkEiLCJjaGVja2VkIiwiQjgiLCJjaGVja2VkSG92ZXIiLCJjaGVja2VkQWN0aXZlIiwiQjkiLCJjaGVja2VkRGlzYWJsZWQiLCJnZXRTd2l0Y2hBcHBlYXJhbmNlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFFQSxJQUFNQSxpQkFBaUIsR0FBR0MsZUFBT0Msc0JBQVAsQ0FBOEI7QUFDdERDLEVBQUFBLElBQUksRUFBRTtBQUNKQyxJQUFBQSxVQUFVLEVBQUUsdUJBRFI7QUFFSkMsSUFBQUEsTUFBTSxFQUFFLFNBRko7QUFHSkMsSUFBQUEsS0FBSyxFQUFFLE9BSEg7QUFJSkMsSUFBQUEsZUFBZSxFQUFFQyxtQkFBT0MsT0FBUCxDQUFlQyxHQUo1QjtBQUtKQyxJQUFBQSxZQUFZLEVBQUU7QUFMVixHQURnRDtBQVF0REMsRUFBQUEsUUFBUSxFQUFFO0FBQ1JDLElBQUFBLE9BQU8sRUFBRSxHQUREO0FBRVJDLElBQUFBLGVBQWUsRUFBRTtBQUZULEdBUjRDO0FBWXREQyxFQUFBQSxLQUFLLEVBQUU7QUFDTFIsSUFBQUEsZUFBZSxFQUFFQyxtQkFBT0MsT0FBUCxDQUFlQztBQUQzQixHQVorQztBQWV0RE0sRUFBQUEsTUFBTSxFQUFFO0FBQ05ULElBQUFBLGVBQWUsRUFBRUMsbUJBQU9DLE9BQVAsQ0FBZVE7QUFEMUIsR0FmOEM7QUFrQnREQyxFQUFBQSxLQUFLLEVBQUU7QUFDTEMsSUFBQUEsU0FBUyxzQkFBZVgsbUJBQU9ZLElBQVAsQ0FBWUMsR0FBM0I7QUFESixHQWxCK0M7QUFxQnREQyxFQUFBQSxPQUFPLEVBQUU7QUFDUGYsSUFBQUEsZUFBZSxFQUFFQyxtQkFBT1ksSUFBUCxDQUFZRyxFQUR0QjtBQUVQakIsSUFBQUEsS0FBSyxFQUFFO0FBRkEsR0FyQjZDO0FBeUJ0RGtCLEVBQUFBLFlBQVksRUFBRTtBQUNaakIsSUFBQUEsZUFBZSxFQUFFQyxtQkFBT1ksSUFBUCxDQUFZRyxFQURqQjtBQUVaakIsSUFBQUEsS0FBSyxFQUFFO0FBRkssR0F6QndDO0FBNkJ0RG1CLEVBQUFBLGFBQWEsRUFBRTtBQUNibEIsSUFBQUEsZUFBZSxFQUFFQyxtQkFBT1ksSUFBUCxDQUFZTSxFQURoQjtBQUVicEIsSUFBQUEsS0FBSyxFQUFFO0FBRk0sR0E3QnVDO0FBaUN0RHFCLEVBQUFBLGVBQWUsRUFBRTtBQWpDcUMsQ0FBOUIsQ0FBMUI7QUFvQ0E7Ozs7Ozs7QUFLQSxJQUFNQyxtQkFBbUIsR0FBRyxTQUF0QkEsbUJBQXNCLEdBQU07QUFDaEMsU0FBTzVCLGlCQUFQO0FBQ0QsQ0FGRDtBQUlBOzs7Ozs7O2VBS2Usa0NBQWlCNEIsbUJBQWpCLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUaGVtZXIgfSBmcm9tICcuLi8uLi8uLi8uLi90aGVtZXInXG5pbXBvcnQgbWVtb2l6ZUNsYXNzTmFtZSBmcm9tICcuLi91dGlscy9tZW1vaXplQ2xhc3NOYW1lJ1xuaW1wb3J0IHNjYWxlcyBmcm9tICcuLi9mb3VuZGF0aW9uYWwtc3R5bGVzL3NjYWxlcydcblxuY29uc3QgZGVmYXVsdEFwcGVhcmFuY2UgPSBUaGVtZXIuY3JlYXRlU3dpdGNoQXBwZWFyYW5jZSh7XG4gIGJhc2U6IHtcbiAgICB0cmFuc2l0aW9uOiAnYWxsIDEyMG1zIGVhc2UtaW4tb3V0JyxcbiAgICBjdXJzb3I6ICdwb2ludGVyJyxcbiAgICBjb2xvcjogJ3doaXRlJyxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHNjYWxlcy5uZXV0cmFsLk41QSxcbiAgICBib3JkZXJSYWRpdXM6IDk5OTlcbiAgfSxcbiAgZGlzYWJsZWQ6IHtcbiAgICBvcGFjaXR5OiAwLjUsXG4gICAgYmFja2dyb3VuZEltYWdlOiAnbm9uZSdcbiAgfSxcbiAgaG92ZXI6IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHNjYWxlcy5uZXV0cmFsLk41QVxuICB9LFxuICBhY3RpdmU6IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHNjYWxlcy5uZXV0cmFsLk42QVxuICB9LFxuICBmb2N1czoge1xuICAgIGJveFNoYWRvdzogYDAgMCAwIDNweCAke3NjYWxlcy5ibHVlLkI2QX1gXG4gIH0sXG4gIGNoZWNrZWQ6IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHNjYWxlcy5ibHVlLkI4LFxuICAgIGNvbG9yOiAnd2hpdGUnXG4gIH0sXG4gIGNoZWNrZWRIb3Zlcjoge1xuICAgIGJhY2tncm91bmRDb2xvcjogc2NhbGVzLmJsdWUuQjgsXG4gICAgY29sb3I6ICd3aGl0ZSdcbiAgfSxcbiAgY2hlY2tlZEFjdGl2ZToge1xuICAgIGJhY2tncm91bmRDb2xvcjogc2NhbGVzLmJsdWUuQjksXG4gICAgY29sb3I6ICd3aGl0ZSdcbiAgfSxcbiAgY2hlY2tlZERpc2FibGVkOiB7fVxufSlcblxuLyoqXG4gKiBHZXQgdGhlIGNsYXNzTmFtZSBvZiBhIGBTd2l0Y2hgLlxuICogQHBhcmFtIHtzdHJpbmd9IGFwcGVhcmFuY2VcbiAqIEByZXR1cm4ge09iamVjdH0gdGhlIGFwcGVhcmFuY2Ugb2JqZWN0LlxuICovXG5jb25zdCBnZXRTd2l0Y2hBcHBlYXJhbmNlID0gKCkgPT4ge1xuICByZXR1cm4gZGVmYXVsdEFwcGVhcmFuY2Vcbn1cblxuLyoqXG4gKiBHZXQgdGhlIGNsYXNzTmFtZSBvZiBhIGBTd2l0Y2hgLlxuICogQHBhcmFtIHtzdHJpbmd9IGFwcGVhcmFuY2VcbiAqIEByZXR1cm4ge3N0cmluZ30gdGhlIGFwcGVhcmFuY2UgY2xhc3MgbmFtZS5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgbWVtb2l6ZUNsYXNzTmFtZShnZXRTd2l0Y2hBcHBlYXJhbmNlKVxuIl19