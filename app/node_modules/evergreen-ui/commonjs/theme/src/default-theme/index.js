"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _foundationalStyles = require("./foundational-styles");

var _typography = require("./typography");

var _componentSpecific = require("./component-specific");

var _themeHelpers = require("./theme-helpers");

/**
 * Theme
 * ---
 * The theme object is used to style Evergreen.
 * It is passed into the  `<ThemeProvider theme={theme} />`.
 * ----
 * You can use this as a template for your own themes.
 */

/**
 * Foundational Styles.
 * ---
 * The following properties are NOT REQUIRED by Evergreen.
 * It's exposed for convenience and documentation.
 */

/**
 * Typography.
 * ---
 * The following properties are NOT REQUIRED by Evergreen.
 * It's exposed for convenience and documentation.
 */

/**
 * Component Specific.
 * ---
 * These ARE REQUIRED for Evergreen to work.
 */

/**
 * Theme Helpers.
 * ---
 * These ARE REQUIRED for Evergreen to work.
 */
var _default = {
  // Foundational Styles.
  colors: _foundationalStyles.colors,
  elevations: _foundationalStyles.elevations,
  fills: _foundationalStyles.fills,
  palette: _foundationalStyles.palette,
  scales: _foundationalStyles.scales,
  // Component Specific.
  avatarColors: _componentSpecific.avatarColors,
  badgeColors: _componentSpecific.badgeColors,
  spinnerColor: _componentSpecific.spinnerColor,
  overlayBackgroundColor: _componentSpecific.overlayBackgroundColor,
  getBadgeClassName: _componentSpecific.getBadgeClassName,
  getButtonClassName: _componentSpecific.getButtonClassName,
  getLinkClassName: _componentSpecific.getLinkClassName,
  getCheckboxClassName: _componentSpecific.getCheckboxClassName,
  getRadioClassName: _componentSpecific.getRadioClassName,
  getTagInputClassName: _componentSpecific.getTagInputClassName,
  getTextInputClassName: _componentSpecific.getTextInputClassName,
  getTextareaClassName: _componentSpecific.getTextareaClassName,
  getTextDropdownButtonClassName: _componentSpecific.getTextDropdownButtonClassName,
  getTabClassName: _componentSpecific.getTabClassName,
  getTableCellClassName: _componentSpecific.getTableCellClassName,
  getTooltipProps: _componentSpecific.getTooltipProps,
  getRowClassName: _componentSpecific.getRowClassName,
  getMenuItemClassName: _componentSpecific.getMenuItemClassName,
  getSelectClassName: _componentSpecific.getSelectClassName,
  getSegmentedControlRadioClassName: _componentSpecific.getSegmentedControlRadioClassName,
  getSwitchClassName: _componentSpecific.getSwitchClassName,
  getAlertProps: _componentSpecific.getAlertProps,
  getCodeProps: _componentSpecific.getCodeProps,
  getAvatarProps: _componentSpecific.getAvatarProps,
  getBadgeProps: _componentSpecific.getBadgeProps,
  getAvatarInitialsFontSize: _componentSpecific.getAvatarInitialsFontSize,
  // Theme Helpers.
  getBorderRadiusForControlHeight: _themeHelpers.getBorderRadiusForControlHeight,
  getTextSizeForControlHeight: _themeHelpers.getTextSizeForControlHeight,
  getIconSizeForButton: _themeHelpers.getIconSizeForButton,
  getIconSizeForInput: _themeHelpers.getIconSizeForInput,
  getIconSizeForSelect: _themeHelpers.getIconSizeForSelect,
  getIconSizeForIconButton: _themeHelpers.getIconSizeForIconButton,
  getBackground: _themeHelpers.getBackground,
  getElevation: _themeHelpers.getElevation,
  getIconColor: _themeHelpers.getIconColor,
  getIconForIntent: _themeHelpers.getIconForIntent,
  getHeadingStyle: _themeHelpers.getHeadingStyle,
  getTextStyle: _themeHelpers.getTextStyle,
  getParagraphStyle: _themeHelpers.getParagraphStyle,
  getFontFamily: _themeHelpers.getFontFamily,
  getTextColor: _themeHelpers.getTextColor,
  typography: {
    headings: _typography.headings,
    text: _typography.text,
    fontFamilies: _typography.fontFamilies,
    paragraph: _typography.paragraph
  }
};
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy90aGVtZS9zcmMvZGVmYXVsdC10aGVtZS9pbmRleC5qcyJdLCJuYW1lcyI6WyJjb2xvcnMiLCJlbGV2YXRpb25zIiwiZmlsbHMiLCJwYWxldHRlIiwic2NhbGVzIiwiYXZhdGFyQ29sb3JzIiwiYmFkZ2VDb2xvcnMiLCJzcGlubmVyQ29sb3IiLCJvdmVybGF5QmFja2dyb3VuZENvbG9yIiwiZ2V0QmFkZ2VDbGFzc05hbWUiLCJnZXRCdXR0b25DbGFzc05hbWUiLCJnZXRMaW5rQ2xhc3NOYW1lIiwiZ2V0Q2hlY2tib3hDbGFzc05hbWUiLCJnZXRSYWRpb0NsYXNzTmFtZSIsImdldFRhZ0lucHV0Q2xhc3NOYW1lIiwiZ2V0VGV4dElucHV0Q2xhc3NOYW1lIiwiZ2V0VGV4dGFyZWFDbGFzc05hbWUiLCJnZXRUZXh0RHJvcGRvd25CdXR0b25DbGFzc05hbWUiLCJnZXRUYWJDbGFzc05hbWUiLCJnZXRUYWJsZUNlbGxDbGFzc05hbWUiLCJnZXRUb29sdGlwUHJvcHMiLCJnZXRSb3dDbGFzc05hbWUiLCJnZXRNZW51SXRlbUNsYXNzTmFtZSIsImdldFNlbGVjdENsYXNzTmFtZSIsImdldFNlZ21lbnRlZENvbnRyb2xSYWRpb0NsYXNzTmFtZSIsImdldFN3aXRjaENsYXNzTmFtZSIsImdldEFsZXJ0UHJvcHMiLCJnZXRDb2RlUHJvcHMiLCJnZXRBdmF0YXJQcm9wcyIsImdldEJhZGdlUHJvcHMiLCJnZXRBdmF0YXJJbml0aWFsc0ZvbnRTaXplIiwiZ2V0Qm9yZGVyUmFkaXVzRm9yQ29udHJvbEhlaWdodCIsImdldFRleHRTaXplRm9yQ29udHJvbEhlaWdodCIsImdldEljb25TaXplRm9yQnV0dG9uIiwiZ2V0SWNvblNpemVGb3JJbnB1dCIsImdldEljb25TaXplRm9yU2VsZWN0IiwiZ2V0SWNvblNpemVGb3JJY29uQnV0dG9uIiwiZ2V0QmFja2dyb3VuZCIsImdldEVsZXZhdGlvbiIsImdldEljb25Db2xvciIsImdldEljb25Gb3JJbnRlbnQiLCJnZXRIZWFkaW5nU3R5bGUiLCJnZXRUZXh0U3R5bGUiLCJnZXRQYXJhZ3JhcGhTdHlsZSIsImdldEZvbnRGYW1pbHkiLCJnZXRUZXh0Q29sb3IiLCJ0eXBvZ3JhcGh5IiwiaGVhZGluZ3MiLCJ0ZXh0IiwiZm9udEZhbWlsaWVzIiwicGFyYWdyYXBoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBZUE7O0FBY0E7O0FBT0E7O0FBa0NBOztBQXRFQTs7Ozs7Ozs7O0FBU0E7Ozs7Ozs7QUFjQTs7Ozs7OztBQVFBOzs7Ozs7QUFrQ0E7Ozs7O2VBdUJlO0FBQ2I7QUFDQUEsRUFBQUEsTUFBTSxFQUFOQSwwQkFGYTtBQUdiQyxFQUFBQSxVQUFVLEVBQVZBLDhCQUhhO0FBSWJDLEVBQUFBLEtBQUssRUFBTEEseUJBSmE7QUFLYkMsRUFBQUEsT0FBTyxFQUFQQSwyQkFMYTtBQU1iQyxFQUFBQSxNQUFNLEVBQU5BLDBCQU5hO0FBUWI7QUFDQUMsRUFBQUEsWUFBWSxFQUFaQSwrQkFUYTtBQVViQyxFQUFBQSxXQUFXLEVBQVhBLDhCQVZhO0FBV2JDLEVBQUFBLFlBQVksRUFBWkEsK0JBWGE7QUFZYkMsRUFBQUEsc0JBQXNCLEVBQXRCQSx5Q0FaYTtBQWFiQyxFQUFBQSxpQkFBaUIsRUFBakJBLG9DQWJhO0FBY2JDLEVBQUFBLGtCQUFrQixFQUFsQkEscUNBZGE7QUFlYkMsRUFBQUEsZ0JBQWdCLEVBQWhCQSxtQ0FmYTtBQWdCYkMsRUFBQUEsb0JBQW9CLEVBQXBCQSx1Q0FoQmE7QUFpQmJDLEVBQUFBLGlCQUFpQixFQUFqQkEsb0NBakJhO0FBa0JiQyxFQUFBQSxvQkFBb0IsRUFBcEJBLHVDQWxCYTtBQW1CYkMsRUFBQUEscUJBQXFCLEVBQXJCQSx3Q0FuQmE7QUFvQmJDLEVBQUFBLG9CQUFvQixFQUFwQkEsdUNBcEJhO0FBcUJiQyxFQUFBQSw4QkFBOEIsRUFBOUJBLGlEQXJCYTtBQXNCYkMsRUFBQUEsZUFBZSxFQUFmQSxrQ0F0QmE7QUF1QmJDLEVBQUFBLHFCQUFxQixFQUFyQkEsd0NBdkJhO0FBd0JiQyxFQUFBQSxlQUFlLEVBQWZBLGtDQXhCYTtBQXlCYkMsRUFBQUEsZUFBZSxFQUFmQSxrQ0F6QmE7QUEwQmJDLEVBQUFBLG9CQUFvQixFQUFwQkEsdUNBMUJhO0FBMkJiQyxFQUFBQSxrQkFBa0IsRUFBbEJBLHFDQTNCYTtBQTRCYkMsRUFBQUEsaUNBQWlDLEVBQWpDQSxvREE1QmE7QUE2QmJDLEVBQUFBLGtCQUFrQixFQUFsQkEscUNBN0JhO0FBOEJiQyxFQUFBQSxhQUFhLEVBQWJBLGdDQTlCYTtBQStCYkMsRUFBQUEsWUFBWSxFQUFaQSwrQkEvQmE7QUFnQ2JDLEVBQUFBLGNBQWMsRUFBZEEsaUNBaENhO0FBaUNiQyxFQUFBQSxhQUFhLEVBQWJBLGdDQWpDYTtBQWtDYkMsRUFBQUEseUJBQXlCLEVBQXpCQSw0Q0FsQ2E7QUFvQ2I7QUFDQUMsRUFBQUEsK0JBQStCLEVBQS9CQSw2Q0FyQ2E7QUFzQ2JDLEVBQUFBLDJCQUEyQixFQUEzQkEseUNBdENhO0FBdUNiQyxFQUFBQSxvQkFBb0IsRUFBcEJBLGtDQXZDYTtBQXdDYkMsRUFBQUEsbUJBQW1CLEVBQW5CQSxpQ0F4Q2E7QUF5Q2JDLEVBQUFBLG9CQUFvQixFQUFwQkEsa0NBekNhO0FBMENiQyxFQUFBQSx3QkFBd0IsRUFBeEJBLHNDQTFDYTtBQTJDYkMsRUFBQUEsYUFBYSxFQUFiQSwyQkEzQ2E7QUE0Q2JDLEVBQUFBLFlBQVksRUFBWkEsMEJBNUNhO0FBNkNiQyxFQUFBQSxZQUFZLEVBQVpBLDBCQTdDYTtBQThDYkMsRUFBQUEsZ0JBQWdCLEVBQWhCQSw4QkE5Q2E7QUErQ2JDLEVBQUFBLGVBQWUsRUFBZkEsNkJBL0NhO0FBZ0RiQyxFQUFBQSxZQUFZLEVBQVpBLDBCQWhEYTtBQWlEYkMsRUFBQUEsaUJBQWlCLEVBQWpCQSwrQkFqRGE7QUFrRGJDLEVBQUFBLGFBQWEsRUFBYkEsMkJBbERhO0FBbURiQyxFQUFBQSxZQUFZLEVBQVpBLDBCQW5EYTtBQXFEYkMsRUFBQUEsVUFBVSxFQUFFO0FBQ1ZDLElBQUFBLFFBQVEsRUFBUkEsb0JBRFU7QUFFVkMsSUFBQUEsSUFBSSxFQUFKQSxnQkFGVTtBQUdWQyxJQUFBQSxZQUFZLEVBQVpBLHdCQUhVO0FBSVZDLElBQUFBLFNBQVMsRUFBVEE7QUFKVTtBQXJEQyxDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUaGVtZVxuICogLS0tXG4gKiBUaGUgdGhlbWUgb2JqZWN0IGlzIHVzZWQgdG8gc3R5bGUgRXZlcmdyZWVuLlxuICogSXQgaXMgcGFzc2VkIGludG8gdGhlICBgPFRoZW1lUHJvdmlkZXIgdGhlbWU9e3RoZW1lfSAvPmAuXG4gKiAtLS0tXG4gKiBZb3UgY2FuIHVzZSB0aGlzIGFzIGEgdGVtcGxhdGUgZm9yIHlvdXIgb3duIHRoZW1lcy5cbiAqL1xuXG4vKipcbiAqIEZvdW5kYXRpb25hbCBTdHlsZXMuXG4gKiAtLS1cbiAqIFRoZSBmb2xsb3dpbmcgcHJvcGVydGllcyBhcmUgTk9UIFJFUVVJUkVEIGJ5IEV2ZXJncmVlbi5cbiAqIEl0J3MgZXhwb3NlZCBmb3IgY29udmVuaWVuY2UgYW5kIGRvY3VtZW50YXRpb24uXG4gKi9cbmltcG9ydCB7XG4gIGNvbG9ycyxcbiAgZWxldmF0aW9ucyxcbiAgZmlsbHMsXG4gIHBhbGV0dGUsXG4gIHNjYWxlc1xufSBmcm9tICcuL2ZvdW5kYXRpb25hbC1zdHlsZXMnXG5cbi8qKlxuICogVHlwb2dyYXBoeS5cbiAqIC0tLVxuICogVGhlIGZvbGxvd2luZyBwcm9wZXJ0aWVzIGFyZSBOT1QgUkVRVUlSRUQgYnkgRXZlcmdyZWVuLlxuICogSXQncyBleHBvc2VkIGZvciBjb252ZW5pZW5jZSBhbmQgZG9jdW1lbnRhdGlvbi5cbiAqL1xuaW1wb3J0IHsgaGVhZGluZ3MsIHRleHQsIGZvbnRGYW1pbGllcywgcGFyYWdyYXBoIH0gZnJvbSAnLi90eXBvZ3JhcGh5J1xuXG4vKipcbiAqIENvbXBvbmVudCBTcGVjaWZpYy5cbiAqIC0tLVxuICogVGhlc2UgQVJFIFJFUVVJUkVEIGZvciBFdmVyZ3JlZW4gdG8gd29yay5cbiAqL1xuaW1wb3J0IHtcbiAgYXZhdGFyQ29sb3JzLFxuICBiYWRnZUNvbG9ycyxcbiAgc3Bpbm5lckNvbG9yLFxuICBvdmVybGF5QmFja2dyb3VuZENvbG9yLFxuICBnZXRCYWRnZUNsYXNzTmFtZSxcbiAgZ2V0QnV0dG9uQ2xhc3NOYW1lLFxuICBnZXRMaW5rQ2xhc3NOYW1lLFxuICBnZXRDaGVja2JveENsYXNzTmFtZSxcbiAgZ2V0UmFkaW9DbGFzc05hbWUsXG4gIGdldFRhZ0lucHV0Q2xhc3NOYW1lLFxuICBnZXRUZXh0SW5wdXRDbGFzc05hbWUsXG4gIGdldFRleHRhcmVhQ2xhc3NOYW1lLFxuICBnZXRUZXh0RHJvcGRvd25CdXR0b25DbGFzc05hbWUsXG4gIGdldFRhYkNsYXNzTmFtZSxcbiAgZ2V0VGFibGVDZWxsQ2xhc3NOYW1lLFxuICBnZXRUb29sdGlwUHJvcHMsXG4gIGdldFJvd0NsYXNzTmFtZSxcbiAgZ2V0TWVudUl0ZW1DbGFzc05hbWUsXG4gIGdldFNlbGVjdENsYXNzTmFtZSxcbiAgZ2V0U2VnbWVudGVkQ29udHJvbFJhZGlvQ2xhc3NOYW1lLFxuICBnZXRTd2l0Y2hDbGFzc05hbWUsXG4gIGdldEFsZXJ0UHJvcHMsXG4gIGdldENvZGVQcm9wcyxcbiAgZ2V0QXZhdGFyUHJvcHMsXG4gIGdldEJhZGdlUHJvcHMsXG4gIGdldEF2YXRhckluaXRpYWxzRm9udFNpemVcbn0gZnJvbSAnLi9jb21wb25lbnQtc3BlY2lmaWMnXG5cbi8qKlxuICogVGhlbWUgSGVscGVycy5cbiAqIC0tLVxuICogVGhlc2UgQVJFIFJFUVVJUkVEIGZvciBFdmVyZ3JlZW4gdG8gd29yay5cbiAqL1xuaW1wb3J0IHtcbiAgZ2V0Qm9yZGVyUmFkaXVzRm9yQ29udHJvbEhlaWdodCxcbiAgZ2V0VGV4dFNpemVGb3JDb250cm9sSGVpZ2h0LFxuICBnZXRJY29uU2l6ZUZvckJ1dHRvbixcbiAgZ2V0SWNvblNpemVGb3JJbnB1dCxcbiAgZ2V0SWNvblNpemVGb3JTZWxlY3QsXG4gIGdldEljb25TaXplRm9ySWNvbkJ1dHRvbixcbiAgZ2V0QmFja2dyb3VuZCxcbiAgZ2V0RWxldmF0aW9uLFxuICBnZXRJY29uQ29sb3IsXG4gIGdldEljb25Gb3JJbnRlbnQsXG4gIGdldEhlYWRpbmdTdHlsZSxcbiAgZ2V0VGV4dFN0eWxlLFxuICBnZXRQYXJhZ3JhcGhTdHlsZSxcbiAgZ2V0Rm9udEZhbWlseSxcbiAgZ2V0VGV4dENvbG9yXG59IGZyb20gJy4vdGhlbWUtaGVscGVycydcblxuZXhwb3J0IGRlZmF1bHQge1xuICAvLyBGb3VuZGF0aW9uYWwgU3R5bGVzLlxuICBjb2xvcnMsXG4gIGVsZXZhdGlvbnMsXG4gIGZpbGxzLFxuICBwYWxldHRlLFxuICBzY2FsZXMsXG5cbiAgLy8gQ29tcG9uZW50IFNwZWNpZmljLlxuICBhdmF0YXJDb2xvcnMsXG4gIGJhZGdlQ29sb3JzLFxuICBzcGlubmVyQ29sb3IsXG4gIG92ZXJsYXlCYWNrZ3JvdW5kQ29sb3IsXG4gIGdldEJhZGdlQ2xhc3NOYW1lLFxuICBnZXRCdXR0b25DbGFzc05hbWUsXG4gIGdldExpbmtDbGFzc05hbWUsXG4gIGdldENoZWNrYm94Q2xhc3NOYW1lLFxuICBnZXRSYWRpb0NsYXNzTmFtZSxcbiAgZ2V0VGFnSW5wdXRDbGFzc05hbWUsXG4gIGdldFRleHRJbnB1dENsYXNzTmFtZSxcbiAgZ2V0VGV4dGFyZWFDbGFzc05hbWUsXG4gIGdldFRleHREcm9wZG93bkJ1dHRvbkNsYXNzTmFtZSxcbiAgZ2V0VGFiQ2xhc3NOYW1lLFxuICBnZXRUYWJsZUNlbGxDbGFzc05hbWUsXG4gIGdldFRvb2x0aXBQcm9wcyxcbiAgZ2V0Um93Q2xhc3NOYW1lLFxuICBnZXRNZW51SXRlbUNsYXNzTmFtZSxcbiAgZ2V0U2VsZWN0Q2xhc3NOYW1lLFxuICBnZXRTZWdtZW50ZWRDb250cm9sUmFkaW9DbGFzc05hbWUsXG4gIGdldFN3aXRjaENsYXNzTmFtZSxcbiAgZ2V0QWxlcnRQcm9wcyxcbiAgZ2V0Q29kZVByb3BzLFxuICBnZXRBdmF0YXJQcm9wcyxcbiAgZ2V0QmFkZ2VQcm9wcyxcbiAgZ2V0QXZhdGFySW5pdGlhbHNGb250U2l6ZSxcblxuICAvLyBUaGVtZSBIZWxwZXJzLlxuICBnZXRCb3JkZXJSYWRpdXNGb3JDb250cm9sSGVpZ2h0LFxuICBnZXRUZXh0U2l6ZUZvckNvbnRyb2xIZWlnaHQsXG4gIGdldEljb25TaXplRm9yQnV0dG9uLFxuICBnZXRJY29uU2l6ZUZvcklucHV0LFxuICBnZXRJY29uU2l6ZUZvclNlbGVjdCxcbiAgZ2V0SWNvblNpemVGb3JJY29uQnV0dG9uLFxuICBnZXRCYWNrZ3JvdW5kLFxuICBnZXRFbGV2YXRpb24sXG4gIGdldEljb25Db2xvcixcbiAgZ2V0SWNvbkZvckludGVudCxcbiAgZ2V0SGVhZGluZ1N0eWxlLFxuICBnZXRUZXh0U3R5bGUsXG4gIGdldFBhcmFncmFwaFN0eWxlLFxuICBnZXRGb250RmFtaWx5LFxuICBnZXRUZXh0Q29sb3IsXG5cbiAgdHlwb2dyYXBoeToge1xuICAgIGhlYWRpbmdzLFxuICAgIHRleHQsXG4gICAgZm9udEZhbWlsaWVzLFxuICAgIHBhcmFncmFwaFxuICB9XG59XG4iXX0=