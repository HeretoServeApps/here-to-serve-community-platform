"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _typography = require("../../typography");

var _theme = require("../../theme");

var _warning = _interopRequireDefault(require("../../lib/warning"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var Tab =
/*#__PURE__*/
function (_PureComponent) {
  (0, _inherits2["default"])(Tab, _PureComponent);

  function Tab() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2["default"])(this, Tab);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(Tab)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleClick", function (e) {
      if (typeof _this.props.onClick === 'function') {
        _this.props.onClick(e);
      }

      _this.props.onSelect();
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleKeyPress", function (e) {
      if (e.key === 'Enter' || e.key === ' ') {
        _this.props.onSelect();

        e.preventDefault();
      }

      _this.props.onKeyPress(e);
    });
    return _this;
  }

  (0, _createClass2["default"])(Tab, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          theme = _this$props.theme,
          is = _this$props.is,
          height = _this$props.height,
          onSelect = _this$props.onSelect,
          isSelected = _this$props.isSelected,
          appearance = _this$props.appearance,
          disabled = _this$props.disabled,
          props = (0, _objectWithoutProperties2["default"])(_this$props, ["theme", "is", "height", "onSelect", "isSelected", "appearance", "disabled"]);

      if (process.env.NODE_ENV !== 'production') {
        (0, _warning["default"])(typeof this.props.onClick === 'function', '<Tab> expects `onSelect` prop, but you passed `onClick`.');
      }

      var textSize = theme.getTextSizeForControlHeight(height);
      var elementBasedProps;

      if (disabled) {
        elementBasedProps = {
          'aria-disabled': true
        };
      }

      if (is === 'a') {
        // Use aria-current when it's a link
        // https://tink.uk/using-the-aria-current-attribute/
        elementBasedProps = isSelected ? _objectSpread({}, elementBasedProps, {
          'aria-current': 'page'
        }) : {};
      } else {
        // Use a role="tablist" around the tabs
        // Also pass down a aria-controls="panelId"
        // https://www.stefanjudis.com/blog/aria-selected-and-when-to-use-it/
        elementBasedProps = _objectSpread({}, elementBasedProps, {
          'aria-selected': isSelected,
          role: 'tab'
        });
      }

      return _react["default"].createElement(_typography.Text, (0, _extends2["default"])({
        className: theme.getTabClassName(appearance),
        is: is,
        size: textSize,
        height: height
      }, Tab.styles, props, {
        onClick: this.handleClick,
        onKeyPress: this.handleKeyPress
      }, elementBasedProps));
    }
  }]);
  return Tab;
}(_react.PureComponent);

Tab.displayName = "Tab";
(0, _defineProperty2["default"])(Tab, "propTypes", _objectSpread({}, _typography.Text.propTypes, {
  /**
   * Function triggered when tab is selected.
   */
  onSelect: _propTypes["default"].func,

  /**
   * When true, the tab is selected.
   */
  isSelected: _propTypes["default"].bool,

  /**
   * The appearance of the tab.
   * The default theme only comes with a default style.
   */
  appearance: _propTypes["default"].string,

  /**
   * Theme provided by ThemeProvider.
   */
  theme: _propTypes["default"].object.isRequired
}));
(0, _defineProperty2["default"])(Tab, "defaultProps", {
  onSelect: function onSelect() {},
  onKeyPress: function onKeyPress() {},
  is: 'span',
  height: 28,
  disabled: false
});
(0, _defineProperty2["default"])(Tab, "styles", {
  display: 'inline-flex',
  fontWeight: 500,
  paddingX: 8,
  marginX: 4,
  borderRadius: 3,
  lineHeight: '28px',
  alignItems: 'center',
  justifyContent: 'center',
  textDecoration: 'none',
  tabIndex: 0
});

var _default = (0, _theme.withTheme)(Tab);

exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90YWJzL3NyYy9UYWIuanMiXSwibmFtZXMiOlsiVGFiIiwiZSIsInByb3BzIiwib25DbGljayIsIm9uU2VsZWN0Iiwia2V5IiwicHJldmVudERlZmF1bHQiLCJvbktleVByZXNzIiwidGhlbWUiLCJpcyIsImhlaWdodCIsImlzU2VsZWN0ZWQiLCJhcHBlYXJhbmNlIiwiZGlzYWJsZWQiLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJ0ZXh0U2l6ZSIsImdldFRleHRTaXplRm9yQ29udHJvbEhlaWdodCIsImVsZW1lbnRCYXNlZFByb3BzIiwicm9sZSIsImdldFRhYkNsYXNzTmFtZSIsInN0eWxlcyIsImhhbmRsZUNsaWNrIiwiaGFuZGxlS2V5UHJlc3MiLCJQdXJlQ29tcG9uZW50IiwiVGV4dCIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsImZ1bmMiLCJib29sIiwic3RyaW5nIiwib2JqZWN0IiwiaXNSZXF1aXJlZCIsImRpc3BsYXkiLCJmb250V2VpZ2h0IiwicGFkZGluZ1giLCJtYXJnaW5YIiwiYm9yZGVyUmFkaXVzIiwibGluZUhlaWdodCIsImFsaWduSXRlbXMiLCJqdXN0aWZ5Q29udGVudCIsInRleHREZWNvcmF0aW9uIiwidGFiSW5kZXgiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7OztJQUVNQSxHOzs7Ozs7Ozs7Ozs7Ozs7OztvR0FrRFUsVUFBQUMsQ0FBQyxFQUFJO0FBQ2pCLFVBQUksT0FBTyxNQUFLQyxLQUFMLENBQVdDLE9BQWxCLEtBQThCLFVBQWxDLEVBQThDO0FBQzVDLGNBQUtELEtBQUwsQ0FBV0MsT0FBWCxDQUFtQkYsQ0FBbkI7QUFDRDs7QUFFRCxZQUFLQyxLQUFMLENBQVdFLFFBQVg7QUFDRCxLO3VHQUVnQixVQUFBSCxDQUFDLEVBQUk7QUFDcEIsVUFBSUEsQ0FBQyxDQUFDSSxHQUFGLEtBQVUsT0FBVixJQUFx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LEVBQUFBLGNBQWMsRUFBRSxRQVJGO0FBU2RDLEVBQUFBLGNBQWMsRUFBRSxNQVRGO0FBVWRDLEVBQUFBLFFBQVEsRUFBRTtBQVZJLEM7O2VBOEZILHNCQUFVM0MsR0FBVixDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IFB1cmVDb21wb25lbnQgfSBmcm9tICdyZWFjdCdcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcbmltcG9ydCB7IFRleHQgfSBmcm9tICcuLi8uLi90eXBvZ3JhcGh5J1xuaW1wb3J0IHsgd2l0aFRoZW1lIH0gZnJvbSAnLi4vLi4vdGhlbWUnXG5pbXBvcnQgd2FybmluZyBmcm9tICcuLi8uLi9saWIvd2FybmluZydcblxuY2xhc3MgVGFiIGV4dGVuZHMgUHVyZUNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgLyoqXG4gICAgICogQ29tcG9zZXMgdGhlIFRleHQgY29tcG9uZW50IGFzIHRoZSBiYXNlLlxuICAgICAqL1xuICAgIC4uLlRleHQucHJvcFR5cGVzLFxuXG4gICAgLyoqXG4gICAgICogRnVuY3Rpb24gdHJpZ2dlcmVkIHdoZW4gdGFiIGlzIHNlbGVjdGVkLlxuICAgICAqL1xuICAgIG9uU2VsZWN0OiBQcm9wVHlwZXMuZnVuYyxcblxuICAgIC8qKlxuICAgICAqIFdoZW4gdHJ1ZSwgdGhlIHRhYiBpcyBzZWxlY3RlZC5cbiAgICAgKi9cbiAgICBpc1NlbGVjdGVkOiBQcm9wVHlwZXMuYm9vbCxcblxuICAgIC8qKlxuICAgICAqIFRoZSBhcHBlYXJhbmNlIG9mIHRoZSB0YWIuXG4gICAgICogVGhlIGRlZmF1bHQgdGhlbWUgb25seSBjb21lcyB3aXRoIGEgZGVmYXVsdCBzdHlsZS5cbiAgICAgKi9cbiAgICBhcHBlYXJhbmNlOiBQcm9wVHlwZXMuc3RyaW5nLFxuXG4gICAgLyoqXG4gICAgICogVGhlbWUgcHJvdmlkZWQgYnkgVGhlbWVQcm92aWRlci5cbiAgICAgKi9cbiAgICB0aGVtZTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkXG4gIH1cblxuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIG9uU2VsZWN0OiAoKSA9PiB7fSxcbiAgICBvbktleVByZXNzOiAoKSA9PiB7fSxcbiAgICBpczogJ3NwYW4nLFxuICAgIGhlaWdodDogMjgsXG4gICAgZGlzYWJsZWQ6IGZhbHNlXG4gIH1cblxuICBzdGF0aWMgc3R5bGVzID0ge1xuICAgIGRpc3BsYXk6ICdpbmxpbmUtZmxleCcsXG4gICAgZm9udFdlaWdodDogNTAwLFxuICAgIHBhZGRpbmdYOiA4LFxuICAgIG1hcmdpblg6IDQsXG4gICAgYm9yZGVyUmFkaXVzOiAzLFxuICAgIGxpbmVIZWlnaHQ6ICcyOHB4JyxcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgdGV4dERlY29yYXRpb246ICdub25lJyxcbiAgICB0YWJJbmRleDogMFxuICB9XG5cbiAgaGFuZGxlQ2xpY2sgPSBlID0+IHtcbiAgICBpZiAodHlwZW9mIHRoaXMucHJvcHMub25DbGljayA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgdGhpcy5wcm9wcy5vbkNsaWNrKGUpXG4gICAgfVxuXG4gICAgdGhpcy5wcm9wcy5vblNlbGVjdCgpXG4gIH1cblxuICBoYW5kbGVLZXlQcmVzcyA9IGUgPT4ge1xuICAgIGlmIChlLmtleSA9PT0gJ0VudGVyJyB8fCBlLmtleSA9PT0gJyAnKSB7XG4gICAgICB0aGlzLnByb3BzLm9uU2VsZWN0KClcbiAgICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgIH1cblxuICAgIHRoaXMucHJvcHMub25LZXlQcmVzcyhlKVxuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIHRoZW1lLFxuICAgICAgaXMsXG4gICAgICBoZWlnaHQsXG4gICAgICBvblNlbGVjdCxcbiAgICAgIGlzU2VsZWN0ZWQsXG4gICAgICBhcHBlYXJhbmNlLFxuICAgICAgZGlzYWJsZWQsXG4gICAgICAuLi5wcm9wc1xuICAgIH0gPSB0aGlzLnByb3BzXG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgd2FybmluZyhcbiAgICAgICAgdHlwZW9mIHRoaXMucHJvcHMub25DbGljayA9PT0gJ2Z1bmN0aW9uJyxcbiAgICAgICAgJzxUYWI+IGV4cGVjdHMgYG9uU2VsZWN0YCBwcm9wLCBidXQgeW91IHBhc3NlZCBgb25DbGlja2AuJ1xuICAgICAgKVxuICAgIH1cblxuICAgIGNvbnN0IHRleHRTaXplID0gdGhlbWUuZ2V0VGV4dFNpemVGb3JDb250cm9sSGVpZ2h0KGhlaWdodClcblxuICAgIGxldCBlbGVtZW50QmFzZWRQcm9wc1xuICAgIGlmIChkaXNhYmxlZCkge1xuICAgICAgZWxlbWVudEJhc2VkUHJvcHMgPSB7XG4gICAgICAgICdhcmlhLWRpc2FibGVkJzogdHJ1ZVxuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChpcyA9PT0gJ2EnKSB7XG4gICAgICAvLyBVc2UgYXJpYS1jdXJyZW50IHdoZW4gaXQncyBhIGxpbmtcbiAgICAgIC8vIGh0dHBzOi8vdGluay51ay91c2luZy10aGUtYXJpYS1jdXJyZW50LWF0dHJpYnV0ZS9cbiAgICAgIGVsZW1lbnRCYXNlZFByb3BzID0gaXNTZWxlY3RlZFxuICAgICAgICA/IHtcbiAgICAgICAgICAgIC4uLmVsZW1lbnRCYXNlZFByb3BzLFxuICAgICAgICAgICAgJ2FyaWEtY3VycmVudCc6ICdwYWdlJ1xuICAgICAgICAgIH1cbiAgICAgICAgOiB7fVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBVc2UgYSByb2xlPVwidGFibGlzdFwiIGFyb3VuZCB0aGUgdGFic1xuICAgICAgLy8gQWxzbyBwYXNzIGRvd24gYSBhcmlhLWNvbnRyb2xzPVwicGFuZWxJZFwiXG4gICAgICAvLyBodHRwczovL3d3dy5zdGVmYW5qdWRpcy5jb20vYmxvZy9hcmlhLXNlbGVjdGVkLWFuZC13aGVuLXRvLXVzZS1pdC9cbiAgICAgIGVsZW1lbnRCYXNlZFByb3BzID0ge1xuICAgICAgICAuLi5lbGVtZW50QmFzZWRQcm9wcyxcbiAgICAgICAgJ2FyaWEtc2VsZWN0ZWQnOiBpc1NlbGVjdGVkLFxuICAgICAgICByb2xlOiAndGFiJ1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICA8VGV4dFxuICAgICAgICBjbGFzc05hbWU9e3RoZW1lLmdldFRhYkNsYXNzTmFtZShhcHBlYXJhbmNlKX1cbiAgICAgICAgaXM9e2lzfVxuICAgICAgICBzaXplPXt0ZXh0U2l6ZX1cbiAgICAgICAgaGVpZ2h0PXtoZWlnaHR9XG4gICAgICAgIHsuLi5UYWIuc3R5bGVzfVxuICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAgIG9uQ2xpY2s9e3RoaXMuaGFuZGxlQ2xpY2t9XG4gICAgICAgIG9uS2V5UHJlc3M9e3RoaXMuaGFuZGxlS2V5UHJlc3N9XG4gICAgICAgIHsuLi5lbGVtZW50QmFzZWRQcm9wc31cbiAgICAgIC8+XG4gICAgKVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IHdpdGhUaGVtZShUYWIpXG4iXX0=