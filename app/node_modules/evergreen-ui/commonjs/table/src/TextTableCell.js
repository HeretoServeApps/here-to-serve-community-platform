"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _typography = require("../../typography");

var _TableCell = _interopRequireDefault(require("./TableCell"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var ellipsis = {
  overflow: 'hidden',
  textOverflow: 'ellipsis',
  whiteSpace: 'nowrap'
};

var TextTableCell =
/*#__PURE__*/
function (_PureComponent) {
  (0, _inherits2["default"])(TextTableCell, _PureComponent);

  function TextTableCell() {
    (0, _classCallCheck2["default"])(this, TextTableCell);
    return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(TextTableCell).apply(this, arguments));
  }

  (0, _createClass2["default"])(TextTableCell, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          children = _this$props.children,
          textProps = _this$props.textProps,
          isNumber = _this$props.isNumber,
          placeholder = _this$props.placeholder,
          props = (0, _objectWithoutProperties2["default"])(_this$props, ["children", "textProps", "isNumber", "placeholder"]);
      return _react["default"].createElement(_TableCell["default"], props, _react["default"].createElement(_typography.Text, (0, _extends2["default"])({
        size: 300,
        flex: "1"
      }, ellipsis, isNumber ? {
        fontFamily: 'mono'
      } : {}, textProps), children));
    }
  }]);
  return TextTableCell;
}(_react.PureComponent);

exports["default"] = TextTableCell;
TextTableCell.displayName = "TextTableCell";
(0, _defineProperty2["default"])(TextTableCell, "propTypes", _objectSpread({}, _TableCell["default"].propTypes, {
  /**
   * Adds fontFamily: mono.
   */
  isNumber: _propTypes["default"].bool.isRequired,

  /**
   * Pass additional props to the Text component.
   */
  textProps: _propTypes["default"].object
}));
(0, _defineProperty2["default"])(TextTableCell, "defaultProps", {
  isNumber: false
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90YWJsZS9zcmMvVGV4dFRhYmxlQ2VsbC5qcyJdLCJuYW1lcyI6WyJlbGxpcHNpcyIsIm92ZXJmbG93IiwidGV4dE92ZXJmbG93Iiwid2hpdGVTcGFjZSIsIlRleHRUYWJsZUNlbGwiLCJwcm9wcyIsImNoaWxkcmVuIiwidGV4dFByb3BzIiwiaXNOdW1iZXIiLCJwbGFjZWhvbGRlciIsImZvbnRGYW1pbHkiLCJQdXJlQ29tcG9uZW50IiwiVGFibGVDZWxsIiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwiYm9vbCIsImlzUmVxdWlyZWQiLCJvYmplY3QiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7QUFFQSxJQUFNQSxRQUFRLEdBQUc7QUFDZkMsRUFBQUEsUUFBUSxFQUFFLFFBREs7QUFFZkMsRUFBQUEsWUFBWSxFQUFFLFVBRkM7QUFHZkMsRUFBQUEsVUFBVSxFQUFFO0FBSEcsQ0FBakI7O0lBTXFCQyxhOzs7Ozs7Ozs7Ozs7NkJBc0JWO0FBQUEsd0JBQzBELEtBQUtDLEtBRC9EO0FBQUEsVUFDQ0MsUUFERCxlQUNDQSxRQUREO0FBQUEsVUFDV0MsU0FEWCxlQUNXQSxTQURYO0FBQUEsVUFDc0JDLFFBRHRCLGVBQ3NCQSxRQUR0QjtBQUFBLFVBQ2dDQyxXQURoQyxlQUNnQ0EsV0FEaEM7QUFBQSxVQUNnREosS0FEaEQ7QUFHUCxhQUNFLGdDQUFDLHFCQUFELEVBQWVBLEtBQWYsRUFDRSxnQ0FBQyxnQkFBRDtBQUNFLFFBQUEsSUFBSSxFQUFFLEdBRFI7QUFFRSxRQUFBLElBQUksRUFBQztBQUZQLFNBR01MLFFBSE4sRUFJT1EsUUFBUSxHQUFHO0FBQUVFLFFBQUFBLFVBQVUsRUFBRTtBQUFkLE9BQUgsR0FBNEIsRUFKM0MsRUFLTUgsU0FMTixHQU9HRCxRQVBILENBREYsQ0FERjtBQWFEOzs7RUF0Q3dDSyxvQjs7O0FBQXRCUCxhO2lDQUFBQSxhLGlDQUtkUSxzQkFBVUMsUztBQUViOzs7QUFHQUwsRUFBQUEsUUFBUSxFQUFFTSxzQkFBVUMsSUFBVixDQUFlQyxVOztBQUV6Qjs7O0FBR0FULEVBQUFBLFNBQVMsRUFBRU8sc0JBQVVHOztpQ0FmSmIsYSxrQkFrQkc7QUFDcEJJLEVBQUFBLFFBQVEsRUFBRTtBQURVLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgUHVyZUNvbXBvbmVudCB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IHsgVGV4dCB9IGZyb20gJy4uLy4uL3R5cG9ncmFwaHknXG5pbXBvcnQgVGFibGVDZWxsIGZyb20gJy4vVGFibGVDZWxsJ1xuXG5jb25zdCBlbGxpcHNpcyA9IHtcbiAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICB0ZXh0T3ZlcmZsb3c6ICdlbGxpcHNpcycsXG4gIHdoaXRlU3BhY2U6ICdub3dyYXAnXG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRleHRUYWJsZUNlbGwgZXh0ZW5kcyBQdXJlQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICAvKipcbiAgICAgKiBDb21wb3NlcyB0aGUgVGFibGVDZWxsIGNvbXBvbmVudCBhcyB0aGUgYmFzZS5cbiAgICAgKi9cbiAgICAuLi5UYWJsZUNlbGwucHJvcFR5cGVzLFxuXG4gICAgLyoqXG4gICAgICogQWRkcyBmb250RmFtaWx5OiBtb25vLlxuICAgICAqL1xuICAgIGlzTnVtYmVyOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuXG4gICAgLyoqXG4gICAgICogUGFzcyBhZGRpdGlvbmFsIHByb3BzIHRvIHRoZSBUZXh0IGNvbXBvbmVudC5cbiAgICAgKi9cbiAgICB0ZXh0UHJvcHM6IFByb3BUeXBlcy5vYmplY3RcbiAgfVxuXG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgaXNOdW1iZXI6IGZhbHNlXG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBjaGlsZHJlbiwgdGV4dFByb3BzLCBpc051bWJlciwgcGxhY2Vob2xkZXIsIC4uLnByb3BzIH0gPSB0aGlzLnByb3BzXG5cbiAgICByZXR1cm4gKFxuICAgICAgPFRhYmxlQ2VsbCB7Li4ucHJvcHN9PlxuICAgICAgICA8VGV4dFxuICAgICAgICAgIHNpemU9ezMwMH1cbiAgICAgICAgICBmbGV4PVwiMVwiXG4gICAgICAgICAgey4uLmVsbGlwc2lzfVxuICAgICAgICAgIHsuLi4oaXNOdW1iZXIgPyB7IGZvbnRGYW1pbHk6ICdtb25vJyB9IDoge30pfVxuICAgICAgICAgIHsuLi50ZXh0UHJvcHN9XG4gICAgICAgID5cbiAgICAgICAgICB7Y2hpbGRyZW59XG4gICAgICAgIDwvVGV4dD5cbiAgICAgIDwvVGFibGVDZWxsPlxuICAgIClcbiAgfVxufVxuIl19