import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import { Icon } from '../../icon';
import Text from './Text';

var ListItem =
/*#__PURE__*/
function (_PureComponent) {
  _inherits(ListItem, _PureComponent);

  function ListItem() {
    _classCallCheck(this, ListItem);

    return _possibleConstructorReturn(this, _getPrototypeOf(ListItem).apply(this, arguments));
  }

  _createClass(ListItem, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          children = _this$props.children,
          size = _this$props.size,
          icon = _this$props.icon,
          iconColor = _this$props.iconColor,
          props = _objectWithoutProperties(_this$props, ["children", "size", "icon", "iconColor"]);

      var paddingLeft;
      if (size === 300) paddingLeft = 4;
      if (size === 400) paddingLeft = 8;
      if (size === 500) paddingLeft = 8;
      if (size === 600) paddingLeft = 12;
      var iconTop;
      if (size === 300) iconTop = 1;
      if (size === 400) iconTop = 3;
      if (size === 500) iconTop = 3;
      if (size === 600) iconTop = 4;
      var iconSize;
      if (size === 300) iconSize = 12;
      if (size === 400) iconSize = 14;
      if (size === 500) iconSize = 14;
      if (size === 600) iconSize = 16;
      var iconLeft = -iconSize - 4;
      if (size === 600) iconLeft = -iconSize;
      return React.createElement(Text, _extends({
        is: "li",
        position: "relative",
        marginY: "0.5em",
        size: size,
        listStyleType: icon ? 'none' : null,
        paddingLeft: icon ? paddingLeft : null
      }, props), icon && React.createElement(Icon, {
        icon: icon,
        color: iconColor,
        position: "absolute",
        size: iconSize,
        left: iconLeft,
        top: iconTop
      }), children);
    }
  }]);

  return ListItem;
}(PureComponent);

ListItem.displayName = "ListItem";

_defineProperty(ListItem, "propTypes", _objectSpread({}, Text.propTypes, {
  /**
   * When passed, adds a icon before the list item.
   * See Evergreen `Icon` for documentation.
   */
  icon: PropTypes.string,

  /**
   * The color of the icon.
   */
  iconColor: PropTypes.string
}));

export { ListItem as default };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90eXBvZ3JhcGh5L3NyYy9MaXN0SXRlbS5qcyJdLCJuYW1lcyI6WyJSZWFjdCIsIlB1cmVDb21wb25lbnQiLCJQcm9wVHlwZXMiLCJJY29uIiwiVGV4dCIsIkxpc3RJdGVtIiwicHJvcHMiLCJjaGlsZHJlbiIsInNpemUiLCJpY29uIiwiaWNvbkNvbG9yIiwicGFkZGluZ0xlZnQiLCJpY29uVG9wIiwiaWNvblNpemUiLCJpY29uTGVmdCIsInByb3BUeXBlcyIsInN0cmluZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBLE9BQU9BLEtBQVAsSUFBZ0JDLGFBQWhCLFFBQXFDLE9BQXJDO0FBQ0EsT0FBT0MsU0FBUCxNQUFzQixZQUF0QjtBQUNBLFNBQVNDLElBQVQsUUFBcUIsWUFBckI7QUFDQSxPQUFPQyxJQUFQLE1BQWlCLFFBQWpCOztJQUVxQkMsUTs7Ozs7Ozs7Ozs7Ozs2QkFnQlY7QUFBQSx3QkFDK0MsS0FBS0MsS0FEcEQ7QUFBQSxVQUNDQyxRQURELGVBQ0NBLFFBREQ7QUFBQSxVQUNXQyxJQURYLGVBQ1dBLElBRFg7QUFBQSxVQUNpQkMsSUFEakIsZUFDaUJBLElBRGpCO0FBQUEsVUFDdUJDLFNBRHZCLGVBQ3VCQSxTQUR2QjtBQUFBLFVBQ3FDSixLQURyQzs7QUFHUCxVQUFJSyxXQUFKO0FBQ0EsVUFBSUgsSUFBSSxLQUFLLEdBQWIsRUFBa0JHLFdBQVcsR0FBRyxDQUFkO0FBQ2xCLFVBQUlILElBQUksS0FBSyxHQUFiLEVBQWtCRyxXQUFXLEdBQUcsQ0FBZDtBQUNsQixVQUFJSCxJQUFJLEtBQUssR0FBYixFQUFrQkcsV0FBVyxHQUFHLENBQWQ7QUFDbEIsVUFBSUgsSUFBSSxLQUFLLEdBQWIsRUFBa0JHLFdBQVcsR0FBRyxFQUFkO0FBRWxCLFVBQUlDLE9BQUo7QUFDQSxVQUFJSixJQUFJLEtBQUssR0FBYixFQUFrQkksT0FBTyxHQUFHLENBQVY7QUFDbEIsVUFBSUosSUFBSSxLQUFLLEdBQWIsRUFBa0JJLE9BQU8sR0FBRyxDQUFWO0FBQ2xCLFVBQUlKLElBQUksS0FBSyxHQUFiLEVBQWtCSSxPQUFPLEdBQUcsQ0FBVjtBQUNsQixVQUFJSixJQUFJLEtBQUssR0FBYixFQUFrQkksT0FBTyxHQUFHLENBQVY7QUFFbEIsVUFBSUMsUUFBSjtBQUNBLFVBQUlMLElBQUksS0FBSyxHQUFiLEVBQWtCSyxRQUFRLEdBQUcsRUFBWDtBQUNsQixVQUFJTCxJQUFJLEtBQUssR0FBYixFQUFrQkssUUFBUSxHQUFHLEVBQVg7QUFDbEIsVUFBSUwsSUFBSSxLQUFLLEdBQWIsRUFBa0JLLFFBQVEsR0FBRyxFQUFYO0FBQ2xCLFVBQUlMLElBQUksS0FBSyxHQUFiLEVBQWtCSyxRQUFRLEdBQUcsRUFBWDtBQUVsQixVQUFJQyxRQUFRLEdBQUcsQ0FBQ0QsUUFBRCxHQUFZLENBQTNCO0FBQ0EsVUFBSUwsSUFBSSxLQUFLLEdBQWIsRUFBa0JNLFFBQVEsR0FBRyxDQUFDRCxRQUFaO0FBRWxCLGFBQ0Usb0JBQUMsSUFBRDtBQUNFLFFBQUEsRUFBRSxFQUFDLElBREw7QUFFRSxRQUFBLFFBQVEsRUFBQyxVQUZYO0FBR0UsUUFBQSxPQUFPLEVBQUMsT0FIVjtBQUlFLFFBQUEsSUFBSSxFQUFFTCxJQUpSO0FBS0UsUUFBQSxhQUFhLEVBQUVDLElBQUksR0FBRyxNQUFILEdBQVksSUFMakM7QUFNRSxRQUFBLFdBQVcsRUFBRUEsSUFBSSxHQUFHRSxXQUFILEdBQWlCO0FBTnBDLFNBT01MLEtBUE4sR0FTR0csSUFBSSxJQUNILG9CQUFDLElBQUQ7QUFDRSxRQUFBLElBQUksRUFBRUEsSUFEUjtBQUVFLFFBQUEsS0FBSyxFQUFFQyxTQUZUO0FBR0UsUUFBQSxRQUFRLEVBQUMsVUFIWDtBQUlFLFFBQUEsSUFBSSxFQUFFRyxRQUpSO0FBS0UsUUFBQSxJQUFJLEVBQUVDLFFBTFI7QUFNRSxRQUFBLEdBQUcsRUFBRUY7QUFOUCxRQVZKLEVBbUJHTCxRQW5CSCxDQURGO0FBdUJEOzs7O0VBL0RtQ04sYTs7QUFBakJJLFE7O2dCQUFBQSxRLGlDQUVkRCxJQUFJLENBQUNXLFM7QUFFUjs7OztBQUlBTixFQUFBQSxJQUFJLEVBQUVQLFNBQVMsQ0FBQ2MsTTs7QUFFaEI7OztBQUdBTixFQUFBQSxTQUFTLEVBQUVSLFNBQVMsQ0FBQ2M7OztTQWJKWCxRIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IFB1cmVDb21wb25lbnQgfSBmcm9tICdyZWFjdCdcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcbmltcG9ydCB7IEljb24gfSBmcm9tICcuLi8uLi9pY29uJ1xuaW1wb3J0IFRleHQgZnJvbSAnLi9UZXh0J1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMaXN0SXRlbSBleHRlbmRzIFB1cmVDb21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIC4uLlRleHQucHJvcFR5cGVzLFxuXG4gICAgLyoqXG4gICAgICogV2hlbiBwYXNzZWQsIGFkZHMgYSBpY29uIGJlZm9yZSB0aGUgbGlzdCBpdGVtLlxuICAgICAqIFNlZSBFdmVyZ3JlZW4gYEljb25gIGZvciBkb2N1bWVudGF0aW9uLlxuICAgICAqL1xuICAgIGljb246IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgICAvKipcbiAgICAgKiBUaGUgY29sb3Igb2YgdGhlIGljb24uXG4gICAgICovXG4gICAgaWNvbkNvbG9yOiBQcm9wVHlwZXMuc3RyaW5nXG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBjaGlsZHJlbiwgc2l6ZSwgaWNvbiwgaWNvbkNvbG9yLCAuLi5wcm9wcyB9ID0gdGhpcy5wcm9wc1xuXG4gICAgbGV0IHBhZGRpbmdMZWZ0XG4gICAgaWYgKHNpemUgPT09IDMwMCkgcGFkZGluZ0xlZnQgPSA0XG4gICAgaWYgKHNpemUgPT09IDQwMCkgcGFkZGluZ0xlZnQgPSA4XG4gICAgaWYgKHNpemUgPT09IDUwMCkgcGFkZGluZ0xlZnQgPSA4XG4gICAgaWYgKHNpemUgPT09IDYwMCkgcGFkZGluZ0xlZnQgPSAxMlxuXG4gICAgbGV0IGljb25Ub3BcbiAgICBpZiAoc2l6ZSA9PT0gMzAwKSBpY29uVG9wID0gMVxuICAgIGlmIChzaXplID09PSA0MDApIGljb25Ub3AgPSAzXG4gICAgaWYgKHNpemUgPT09IDUwMCkgaWNvblRvcCA9IDNcbiAgICBpZiAoc2l6ZSA9PT0gNjAwKSBpY29uVG9wID0gNFxuXG4gICAgbGV0IGljb25TaXplXG4gICAgaWYgKHNpemUgPT09IDMwMCkgaWNvblNpemUgPSAxMlxuICAgIGlmIChzaXplID09PSA0MDApIGljb25TaXplID0gMTRcbiAgICBpZiAoc2l6ZSA9PT0gNTAwKSBpY29uU2l6ZSA9IDE0XG4gICAgaWYgKHNpemUgPT09IDYwMCkgaWNvblNpemUgPSAxNlxuXG4gICAgbGV0IGljb25MZWZ0ID0gLWljb25TaXplIC0gNFxuICAgIGlmIChzaXplID09PSA2MDApIGljb25MZWZ0ID0gLWljb25TaXplXG5cbiAgICByZXR1cm4gKFxuICAgICAgPFRleHRcbiAgICAgICAgaXM9XCJsaVwiXG4gICAgICAgIHBvc2l0aW9uPVwicmVsYXRpdmVcIlxuICAgICAgICBtYXJnaW5ZPVwiMC41ZW1cIlxuICAgICAgICBzaXplPXtzaXplfVxuICAgICAgICBsaXN0U3R5bGVUeXBlPXtpY29uID8gJ25vbmUnIDogbnVsbH1cbiAgICAgICAgcGFkZGluZ0xlZnQ9e2ljb24gPyBwYWRkaW5nTGVmdCA6IG51bGx9XG4gICAgICAgIHsuLi5wcm9wc31cbiAgICAgID5cbiAgICAgICAge2ljb24gJiYgKFxuICAgICAgICAgIDxJY29uXG4gICAgICAgICAgICBpY29uPXtpY29ufVxuICAgICAgICAgICAgY29sb3I9e2ljb25Db2xvcn1cbiAgICAgICAgICAgIHBvc2l0aW9uPVwiYWJzb2x1dGVcIlxuICAgICAgICAgICAgc2l6ZT17aWNvblNpemV9XG4gICAgICAgICAgICBsZWZ0PXtpY29uTGVmdH1cbiAgICAgICAgICAgIHRvcD17aWNvblRvcH1cbiAgICAgICAgICAvPlxuICAgICAgICApfVxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICA8L1RleHQ+XG4gICAgKVxuICB9XG59XG4iXX0=