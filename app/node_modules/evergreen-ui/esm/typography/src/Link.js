import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import cx from 'classnames';
import { withTheme } from '../../theme';
import Text from './Text';

var Link =
/*#__PURE__*/
function (_PureComponent) {
  _inherits(Link, _PureComponent);

  function Link() {
    _classCallCheck(this, Link);

    return _possibleConstructorReturn(this, _getPrototypeOf(Link).apply(this, arguments));
  }

  _createClass(Link, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          theme = _this$props.theme,
          className = _this$props.className,
          color = _this$props.color,
          props = _objectWithoutProperties(_this$props, ["theme", "className", "color"]);

      var themedClassName = theme.getLinkClassName(color);
      return React.createElement(Text, _extends({
        is: "a",
        className: cx(className, themedClassName),
        textDecoration: "underline",
        color: null
      }, props));
    }
  }]);

  return Link;
}(PureComponent);

Link.displayName = "Link";

_defineProperty(Link, "propTypes", _objectSpread({}, Text.propTypes, {
  /**
   * This attribute names a relationship of the linked document to the current document.
   * Common use case is: rel="noopener noreferrer".
   */
  rel: PropTypes.string,

  /**
   * Specifies the URL of the linked resource. A URL might be absolute or relative.
   */
  href: PropTypes.string,

  /**
   * Target atrribute, common use case is target="_blank."
   */
  target: PropTypes.string,

  /**
   * The color (and styling) of the Link. Can be default, blue, green or neutral.
   */
  color: PropTypes.string.isRequired,

  /**
   * Theme provided by ThemeProvider.
   */
  theme: PropTypes.object.isRequired,

  /**
   * Class name passed to the link.
   * Only use if you know what you are doing.
   */
  className: PropTypes.string
}));

_defineProperty(Link, "defaultProps", {
  color: 'default'
});

export default withTheme(Link);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90eXBvZ3JhcGh5L3NyYy9MaW5rLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwiUHVyZUNvbXBvbmVudCIsIlByb3BUeXBlcyIsImN4Iiwid2l0aFRoZW1lIiwiVGV4dCIsIkxpbmsiLCJwcm9wcyIsInRoZW1lIiwiY2xhc3NOYW1lIiwiY29sb3IiLCJ0aGVtZWRDbGFzc05hbWUiLCJnZXRMaW5rQ2xhc3NOYW1lIiwicHJvcFR5cGVzIiwicmVsIiwic3RyaW5nIiwiaHJlZiIsInRhcmdldCIsImlzUmVxdWlyZWQiLCJvYmplY3QiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQSxPQUFPQSxLQUFQLElBQWdCQyxhQUFoQixRQUFxQyxPQUFyQztBQUNBLE9BQU9DLFNBQVAsTUFBc0IsWUFBdEI7QUFDQSxPQUFPQyxFQUFQLE1BQWUsWUFBZjtBQUNBLFNBQVNDLFNBQVQsUUFBMEIsYUFBMUI7QUFDQSxPQUFPQyxJQUFQLE1BQWlCLFFBQWpCOztJQUVNQyxJOzs7Ozs7Ozs7Ozs7OzZCQXlDSztBQUFBLHdCQUN1QyxLQUFLQyxLQUQ1QztBQUFBLFVBQ0NDLEtBREQsZUFDQ0EsS0FERDtBQUFBLFVBQ1FDLFNBRFIsZUFDUUEsU0FEUjtBQUFBLFVBQ21CQyxLQURuQixlQUNtQkEsS0FEbkI7QUFBQSxVQUM2QkgsS0FEN0I7O0FBR1AsVUFBTUksZUFBZSxHQUFHSCxLQUFLLENBQUNJLGdCQUFOLENBQXVCRixLQUF2QixDQUF4QjtBQUVBLGFBQ0Usb0JBQUMsSUFBRDtBQUNFLFFBQUEsRUFBRSxFQUFDLEdBREw7QUFFRSxRQUFBLFNBQVMsRUFBRVAsRUFBRSxDQUFDTSxTQUFELEVBQVlFLGVBQVosQ0FGZjtBQUdFLFFBQUEsY0FBYyxFQUFDLFdBSGpCO0FBSUUsUUFBQSxLQUFLLEVBQUU7QUFKVCxTQUtNSixLQUxOLEVBREY7QUFTRDs7OztFQXZEZ0JOLGE7O0FBQWJLLEk7O2dCQUFBQSxJLGlDQUVDRCxJQUFJLENBQUNRLFM7QUFFUjs7OztBQUlBQyxFQUFBQSxHQUFHLEVBQUVaLFNBQVMsQ0FBQ2EsTTs7QUFFZjs7O0FBR0FDLEVBQUFBLElBQUksRUFBRWQsU0FBUyxDQUFDYSxNOztBQUVoQjs7O0FBR0FFLEVBQUFBLE1BQU0sRUFBRWYsU0FBUyxDQUFDYSxNOztBQUVsQjs7O0FBR0FMLEVBQUFBLEtBQUssRUFBRVIsU0FBUyxDQUFDYSxNQUFWLENBQWlCRyxVOztBQUV4Qjs7O0FBR0FWLEVBQUFBLEtBQUssRUFBRU4sU0FBUyxDQUFDaUIsTUFBVixDQUFpQkQsVTs7QUFFeEI7Ozs7QUFJQVQsRUFBQUEsU0FBUyxFQUFFUCxTQUFTLENBQUNhOzs7Z0JBbENuQlQsSSxrQkFxQ2tCO0FBQ3BCSSxFQUFBQSxLQUFLLEVBQUU7QUFEYSxDOztBQXFCeEIsZUFBZU4sU0FBUyxDQUFDRSxJQUFELENBQXhCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IFB1cmVDb21wb25lbnQgfSBmcm9tICdyZWFjdCdcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcbmltcG9ydCBjeCBmcm9tICdjbGFzc25hbWVzJ1xuaW1wb3J0IHsgd2l0aFRoZW1lIH0gZnJvbSAnLi4vLi4vdGhlbWUnXG5pbXBvcnQgVGV4dCBmcm9tICcuL1RleHQnXG5cbmNsYXNzIExpbmsgZXh0ZW5kcyBQdXJlQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICAuLi5UZXh0LnByb3BUeXBlcyxcblxuICAgIC8qKlxuICAgICAqIFRoaXMgYXR0cmlidXRlIG5hbWVzIGEgcmVsYXRpb25zaGlwIG9mIHRoZSBsaW5rZWQgZG9jdW1lbnQgdG8gdGhlIGN1cnJlbnQgZG9jdW1lbnQuXG4gICAgICogQ29tbW9uIHVzZSBjYXNlIGlzOiByZWw9XCJub29wZW5lciBub3JlZmVycmVyXCIuXG4gICAgICovXG4gICAgcmVsOiBQcm9wVHlwZXMuc3RyaW5nLFxuXG4gICAgLyoqXG4gICAgICogU3BlY2lmaWVzIHRoZSBVUkwgb2YgdGhlIGxpbmtlZCByZXNvdXJjZS4gQSBVUkwgbWlnaHQgYmUgYWJzb2x1dGUgb3IgcmVsYXRpdmUuXG4gICAgICovXG4gICAgaHJlZjogUHJvcFR5cGVzLnN0cmluZyxcblxuICAgIC8qKlxuICAgICAqIFRhcmdldCBhdHJyaWJ1dGUsIGNvbW1vbiB1c2UgY2FzZSBpcyB0YXJnZXQ9XCJfYmxhbmsuXCJcbiAgICAgKi9cbiAgICB0YXJnZXQ6IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgICAvKipcbiAgICAgKiBUaGUgY29sb3IgKGFuZCBzdHlsaW5nKSBvZiB0aGUgTGluay4gQ2FuIGJlIGRlZmF1bHQsIGJsdWUsIGdyZWVuIG9yIG5ldXRyYWwuXG4gICAgICovXG4gICAgY29sb3I6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcblxuICAgIC8qKlxuICAgICAqIFRoZW1lIHByb3ZpZGVkIGJ5IFRoZW1lUHJvdmlkZXIuXG4gICAgICovXG4gICAgdGhlbWU6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcblxuICAgIC8qKlxuICAgICAqIENsYXNzIG5hbWUgcGFzc2VkIHRvIHRoZSBsaW5rLlxuICAgICAqIE9ubHkgdXNlIGlmIHlvdSBrbm93IHdoYXQgeW91IGFyZSBkb2luZy5cbiAgICAgKi9cbiAgICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmdcbiAgfVxuXG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgY29sb3I6ICdkZWZhdWx0J1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgdGhlbWUsIGNsYXNzTmFtZSwgY29sb3IsIC4uLnByb3BzIH0gPSB0aGlzLnByb3BzXG5cbiAgICBjb25zdCB0aGVtZWRDbGFzc05hbWUgPSB0aGVtZS5nZXRMaW5rQ2xhc3NOYW1lKGNvbG9yKVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxUZXh0XG4gICAgICAgIGlzPVwiYVwiXG4gICAgICAgIGNsYXNzTmFtZT17Y3goY2xhc3NOYW1lLCB0aGVtZWRDbGFzc05hbWUpfVxuICAgICAgICB0ZXh0RGVjb3JhdGlvbj1cInVuZGVybGluZVwiXG4gICAgICAgIGNvbG9yPXtudWxsfVxuICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAvPlxuICAgIClcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCB3aXRoVGhlbWUoTGluaylcbiJdfQ==