import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import Box from 'ui-box';

var UnorderedList =
/*#__PURE__*/
function (_PureComponent) {
  _inherits(UnorderedList, _PureComponent);

  function UnorderedList() {
    _classCallCheck(this, UnorderedList);

    return _possibleConstructorReturn(this, _getPrototypeOf(UnorderedList).apply(this, arguments));
  }

  _createClass(UnorderedList, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          children = _this$props.children,
          size = _this$props.size,
          icon = _this$props.icon,
          iconColor = _this$props.iconColor,
          props = _objectWithoutProperties(_this$props, ["children", "size", "icon", "iconColor"]); // Only pass down icon-related props if specified


      var inheritedProps = icon ? {
        size: size,
        icon: icon,
        iconColor: iconColor
      } : {
        size: size
      };
      var finalChildren = React.Children.map(children, function (child) {
        if (!React.isValidElement(child)) {
          return child;
        }

        return React.cloneElement(child, _objectSpread({}, inheritedProps, {}, child.props));
      });
      return React.createElement(Box, _extends({}, UnorderedList.styles, props), finalChildren);
    }
  }]);

  return UnorderedList;
}(PureComponent);

UnorderedList.displayName = "UnorderedList";

_defineProperty(UnorderedList, "propTypes", _objectSpread({}, Box.propTypes, {
  /**
   * Size of the text used in a list item.
   * Can be: 300, 400, 500, 600.
   */
  size: PropTypes.oneOf([300, 400, 500, 600]).isRequired,

  /**
   * When passed, adds a icon before each list item in the list
   * You can override this on a individual list item.
   */
  icon: PropTypes.string,

  /**
   * The color of the icon in each list item in the list.
   */
  iconColor: PropTypes.string
}));

_defineProperty(UnorderedList, "defaultProps", {
  size: 400
});

_defineProperty(UnorderedList, "styles", {
  is: 'ul',
  margin: 0,
  marginLeft: '1.1em',
  padding: 0,
  listStyle: 'disc'
});

export { UnorderedList as default };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90eXBvZ3JhcGh5L3NyYy9Vbm9yZGVyZWRMaXN0LmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwiUHVyZUNvbXBvbmVudCIsIlByb3BUeXBlcyIsIkJveCIsIlVub3JkZXJlZExpc3QiLCJwcm9wcyIsImNoaWxkcmVuIiwic2l6ZSIsImljb24iLCJpY29uQ29sb3IiLCJpbmhlcml0ZWRQcm9wcyIsImZpbmFsQ2hpbGRyZW4iLCJDaGlsZHJlbiIsIm1hcCIsImNoaWxkIiwiaXNWYWxpZEVsZW1lbnQiLCJjbG9uZUVsZW1lbnQiLCJzdHlsZXMiLCJwcm9wVHlwZXMiLCJvbmVPZiIsImlzUmVxdWlyZWQiLCJzdHJpbmciLCJpcyIsIm1hcmdpbiIsIm1hcmdpbkxlZnQiLCJwYWRkaW5nIiwibGlzdFN0eWxlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUEsT0FBT0EsS0FBUCxJQUFnQkMsYUFBaEIsUUFBcUMsT0FBckM7QUFDQSxPQUFPQyxTQUFQLE1BQXNCLFlBQXRCO0FBQ0EsT0FBT0MsR0FBUCxNQUFnQixRQUFoQjs7SUFFcUJDLGE7Ozs7Ozs7Ozs7Ozs7NkJBa0NWO0FBQUEsd0JBQytDLEtBQUtDLEtBRHBEO0FBQUEsVUFDQ0MsUUFERCxlQUNDQSxRQUREO0FBQUEsVUFDV0MsSUFEWCxlQUNXQSxJQURYO0FBQUEsVUFDaUJDLElBRGpCLGVBQ2lCQSxJQURqQjtBQUFBLFVBQ3VCQyxTQUR2QixlQUN1QkEsU0FEdkI7QUFBQSxVQUNxQ0osS0FEckMscUZBR1A7OztBQUNBLFVBQU1LLGNBQWMsR0FBR0YsSUFBSSxHQUFHO0FBQUVELFFBQUFBLElBQUksRUFBSkEsSUFBRjtBQUFRQyxRQUFBQSxJQUFJLEVBQUpBLElBQVI7QUFBY0MsUUFBQUEsU0FBUyxFQUFUQTtBQUFkLE9BQUgsR0FBK0I7QUFBRUYsUUFBQUEsSUFBSSxFQUFKQTtBQUFGLE9BQTFEO0FBRUEsVUFBTUksYUFBYSxHQUFHWCxLQUFLLENBQUNZLFFBQU4sQ0FBZUMsR0FBZixDQUFtQlAsUUFBbkIsRUFBNkIsVUFBQVEsS0FBSyxFQUFJO0FBQzFELFlBQUksQ0FBQ2QsS0FBSyxDQUFDZSxjQUFOLENBQXFCRCxLQUFyQixDQUFMLEVBQWtDO0FBQ2hDLGlCQUFPQSxLQUFQO0FBQ0Q7O0FBRUQsZUFBT2QsS0FBSyxDQUFDZ0IsWUFBTixDQUFtQkYsS0FBbkIsb0JBQ0ZKLGNBREUsTUFHRkksS0FBSyxDQUFDVCxLQUhKLEVBQVA7QUFLRCxPQVZxQixDQUF0QjtBQVlBLGFBQ0Usb0JBQUMsR0FBRCxlQUFTRCxhQUFhLENBQUNhLE1BQXZCLEVBQW1DWixLQUFuQyxHQUNHTSxhQURILENBREY7QUFLRDs7OztFQXpEd0NWLGE7O0FBQXRCRyxhOztnQkFBQUEsYSxpQ0FFZEQsR0FBRyxDQUFDZSxTO0FBRVA7Ozs7QUFJQVgsRUFBQUEsSUFBSSxFQUFFTCxTQUFTLENBQUNpQixLQUFWLENBQWdCLENBQUMsR0FBRCxFQUFNLEdBQU4sRUFBVyxHQUFYLEVBQWdCLEdBQWhCLENBQWhCLEVBQXNDQyxVOztBQUU1Qzs7OztBQUlBWixFQUFBQSxJQUFJLEVBQUVOLFNBQVMsQ0FBQ21CLE07O0FBRWhCOzs7QUFHQVosRUFBQUEsU0FBUyxFQUFFUCxTQUFTLENBQUNtQjs7O2dCQW5CSmpCLGEsa0JBc0JHO0FBQ3BCRyxFQUFBQSxJQUFJLEVBQUU7QUFEYyxDOztnQkF0QkhILGEsWUEwQkg7QUFDZGtCLEVBQUFBLEVBQUUsRUFBRSxJQURVO0FBRWRDLEVBQUFBLE1BQU0sRUFBRSxDQUZNO0FBR2RDLEVBQUFBLFVBQVUsRUFBRSxPQUhFO0FBSWRDLEVBQUFBLE9BQU8sRUFBRSxDQUpLO0FBS2RDLEVBQUFBLFNBQVMsRUFBRTtBQUxHLEM7O1NBMUJHdEIsYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBQdXJlQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgQm94IGZyb20gJ3VpLWJveCdcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVW5vcmRlcmVkTGlzdCBleHRlbmRzIFB1cmVDb21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIC4uLkJveC5wcm9wVHlwZXMsXG5cbiAgICAvKipcbiAgICAgKiBTaXplIG9mIHRoZSB0ZXh0IHVzZWQgaW4gYSBsaXN0IGl0ZW0uXG4gICAgICogQ2FuIGJlOiAzMDAsIDQwMCwgNTAwLCA2MDAuXG4gICAgICovXG4gICAgc2l6ZTogUHJvcFR5cGVzLm9uZU9mKFszMDAsIDQwMCwgNTAwLCA2MDBdKS5pc1JlcXVpcmVkLFxuXG4gICAgLyoqXG4gICAgICogV2hlbiBwYXNzZWQsIGFkZHMgYSBpY29uIGJlZm9yZSBlYWNoIGxpc3QgaXRlbSBpbiB0aGUgbGlzdFxuICAgICAqIFlvdSBjYW4gb3ZlcnJpZGUgdGhpcyBvbiBhIGluZGl2aWR1YWwgbGlzdCBpdGVtLlxuICAgICAqL1xuICAgIGljb246IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgICAvKipcbiAgICAgKiBUaGUgY29sb3Igb2YgdGhlIGljb24gaW4gZWFjaCBsaXN0IGl0ZW0gaW4gdGhlIGxpc3QuXG4gICAgICovXG4gICAgaWNvbkNvbG9yOiBQcm9wVHlwZXMuc3RyaW5nXG4gIH1cblxuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIHNpemU6IDQwMFxuICB9XG5cbiAgc3RhdGljIHN0eWxlcyA9IHtcbiAgICBpczogJ3VsJyxcbiAgICBtYXJnaW46IDAsXG4gICAgbWFyZ2luTGVmdDogJzEuMWVtJyxcbiAgICBwYWRkaW5nOiAwLFxuICAgIGxpc3RTdHlsZTogJ2Rpc2MnXG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBjaGlsZHJlbiwgc2l6ZSwgaWNvbiwgaWNvbkNvbG9yLCAuLi5wcm9wcyB9ID0gdGhpcy5wcm9wc1xuXG4gICAgLy8gT25seSBwYXNzIGRvd24gaWNvbi1yZWxhdGVkIHByb3BzIGlmIHNwZWNpZmllZFxuICAgIGNvbnN0IGluaGVyaXRlZFByb3BzID0gaWNvbiA/IHsgc2l6ZSwgaWNvbiwgaWNvbkNvbG9yIH0gOiB7IHNpemUgfVxuXG4gICAgY29uc3QgZmluYWxDaGlsZHJlbiA9IFJlYWN0LkNoaWxkcmVuLm1hcChjaGlsZHJlbiwgY2hpbGQgPT4ge1xuICAgICAgaWYgKCFSZWFjdC5pc1ZhbGlkRWxlbWVudChjaGlsZCkpIHtcbiAgICAgICAgcmV0dXJuIGNoaWxkXG4gICAgICB9XG5cbiAgICAgIHJldHVybiBSZWFjdC5jbG9uZUVsZW1lbnQoY2hpbGQsIHtcbiAgICAgICAgLi4uaW5oZXJpdGVkUHJvcHMsXG4gICAgICAgIC8vIFByZWZlciBtb3JlIGdyYW51bGFybHkgZGVmaW5lZCBpY29uIGlmIHByZXNlbnRcbiAgICAgICAgLi4uY2hpbGQucHJvcHNcbiAgICAgIH0pXG4gICAgfSlcblxuICAgIHJldHVybiAoXG4gICAgICA8Qm94IHsuLi5Vbm9yZGVyZWRMaXN0LnN0eWxlc30gey4uLnByb3BzfT5cbiAgICAgICAge2ZpbmFsQ2hpbGRyZW59XG4gICAgICA8L0JveD5cbiAgICApXG4gIH1cbn1cbiJdfQ==