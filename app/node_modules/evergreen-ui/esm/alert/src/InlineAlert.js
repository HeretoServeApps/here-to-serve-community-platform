import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import _extends from "@babel/runtime/helpers/esm/extends";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _assertThisInitialized from "@babel/runtime/helpers/esm/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import { spacing, dimensions, position, layout } from 'ui-box';
import { withTheme } from '../../theme';
import { Pane } from '../../layers';
import { Text } from '../../typography';
import { Icon } from '../../icon';

var InlineAlert =
/*#__PURE__*/
function (_PureComponent) {
  _inherits(InlineAlert, _PureComponent);

  function InlineAlert() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, InlineAlert);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(InlineAlert)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "getIconForIntent", function (intent) {
      var theme = _this.props.theme;
      return React.createElement(Icon, _extends({
        size: 14,
        marginTop: 2
      }, theme.getIconForIntent(intent)));
    });

    return _this;
  }

  _createClass(InlineAlert, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          theme = _this$props.theme,
          children = _this$props.children,
          intent = _this$props.intent,
          hasIcon = _this$props.hasIcon,
          size = _this$props.size,
          props = _objectWithoutProperties(_this$props, ["theme", "children", "intent", "hasIcon", "size"]);

      return React.createElement(Pane, _extends({
        alignItems: "center",
        display: "flex"
      }, props), hasIcon && React.createElement(Pane, {
        display: "inline",
        marginRight: 8
      }, this.getIconForIntent(intent)), React.createElement(Text, {
        size: size,
        fontWeight: 500
      }, children));
    }
  }]);

  return InlineAlert;
}(PureComponent);

InlineAlert.displayName = "InlineAlert";

_defineProperty(InlineAlert, "propTypes", _objectSpread({}, spacing.propTypes, {}, position.propTypes, {}, layout.propTypes, {}, dimensions.propTypes, {
  /**
   * The content of the alert.
   */
  children: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),

  /**
   * The intent of the alert. This should always be set explicitly.
   */
  intent: PropTypes.oneOf(['none', 'success', 'warning', 'danger']).isRequired,

  /**
   * When true, show a icon on the left matching the type.
   * There is no point not showing this.
   */
  hasIcon: PropTypes.bool,

  /**
   * The size of the Text.
   */
  size: PropTypes.number,

  /**
   * Theme provided by ThemeProvider.
   */
  theme: PropTypes.object.isRequired
}));

_defineProperty(InlineAlert, "defaultProps", {
  intent: 'none',
  hasIcon: true,
  size: 400
});

export default withTheme(InlineAlert);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hbGVydC9zcmMvSW5saW5lQWxlcnQuanMiXSwibmFtZXMiOlsiUmVhY3QiLCJQdXJlQ29tcG9uZW50IiwiUHJvcFR5cGVzIiwic3BhY2luZyIsImRpbWVuc2lvbnMiLCJwb3NpdGlvbiIsImxheW91dCIsIndpdGhUaGVtZSIsIlBhbmUiLCJUZXh0IiwiSWNvbiIsIklubGluZUFsZXJ0IiwiaW50ZW50IiwidGhlbWUiLCJwcm9wcyIsImdldEljb25Gb3JJbnRlbnQiLCJjaGlsZHJlbiIsImhhc0ljb24iLCJzaXplIiwicHJvcFR5cGVzIiwib25lT2ZUeXBlIiwic3RyaW5nIiwibm9kZSIsIm9uZU9mIiwiaXNSZXF1aXJlZCIsImJvb2wiLCJudW1iZXIiLCJvYmplY3QiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUEsT0FBT0EsS0FBUCxJQUFnQkMsYUFBaEIsUUFBcUMsT0FBckM7QUFDQSxPQUFPQyxTQUFQLE1BQXNCLFlBQXRCO0FBQ0EsU0FBU0MsT0FBVCxFQUFrQkMsVUFBbEIsRUFBOEJDLFFBQTlCLEVBQXdDQyxNQUF4QyxRQUFzRCxRQUF0RDtBQUNBLFNBQVNDLFNBQVQsUUFBMEIsYUFBMUI7QUFDQSxTQUFTQyxJQUFULFFBQXFCLGNBQXJCO0FBQ0EsU0FBU0MsSUFBVCxRQUFxQixrQkFBckI7QUFDQSxTQUFTQyxJQUFULFFBQXFCLFlBQXJCOztJQUVNQyxXOzs7Ozs7Ozs7Ozs7Ozs7Ozs7dUVBNENlLFVBQUFDLE1BQU0sRUFBSTtBQUFBLFVBQ25CQyxLQURtQixHQUNULE1BQUtDLEtBREksQ0FDbkJELEtBRG1CO0FBRzNCLGFBQU8sb0JBQUMsSUFBRDtBQUFNLFFBQUEsSUFBSSxFQUFFLEVBQVo7QUFBZ0IsUUFBQSxTQUFTLEVBQUU7QUFBM0IsU0FBa0NBLEtBQUssQ0FBQ0UsZ0JBQU4sQ0FBdUJILE1BQXZCLENBQWxDLEVBQVA7QUFDRCxLOzs7Ozs7OzZCQUVRO0FBQUEsd0JBQ3NELEtBQUtFLEtBRDNEO0FBQUEsVUFDQ0QsS0FERCxlQUNDQSxLQUREO0FBQUEsVUFDUUcsUUFEUixlQUNRQSxRQURSO0FBQUEsVUFDa0JKLE1BRGxCLGVBQ2tCQSxNQURsQjtBQUFBLFVBQzBCSyxPQUQxQixlQUMwQkEsT0FEMUI7QUFBQSxVQUNtQ0MsSUFEbkMsZUFDbUNBLElBRG5DO0FBQUEsVUFDNENKLEtBRDVDOztBQUdQLGFBQ0Usb0JBQUMsSUFBRDtBQUFNLFFBQUEsVUFBVSxFQUFDLFFBQWpCO0FBQTBCLFFBQUEsT0FBTyxFQUFDO0FBQWxDLFNBQTZDQSxLQUE3QyxHQUNHRyxPQUFPLElBQ04sb0JBQUMsSUFBRDtBQUFNLFFBQUEsT0FBTyxFQUFDLFFBQWQ7QUFBdUIsUUFBQSxXQUFXLEVBQUU7QUFBcEMsU0FDRyxLQUFLRixnQkFBTCxDQUFzQkgsTUFBdEIsQ0FESCxDQUZKLEVBTUUsb0JBQUMsSUFBRDtBQUFNLFFBQUEsSUFBSSxFQUFFTSxJQUFaO0FBQWtCLFFBQUEsVUFBVSxFQUFFO0FBQTlCLFNBQ0dGLFFBREgsQ0FORixDQURGO0FBWUQ7Ozs7RUFqRXVCZixhOztBQUFwQlUsVzs7Z0JBQUFBLFcsaUNBS0NSLE9BQU8sQ0FBQ2dCLFMsTUFDUmQsUUFBUSxDQUFDYyxTLE1BQ1RiLE1BQU0sQ0FBQ2EsUyxNQUNQZixVQUFVLENBQUNlLFM7QUFFZDs7O0FBR0FILEVBQUFBLFFBQVEsRUFBRWQsU0FBUyxDQUFDa0IsU0FBVixDQUFvQixDQUFDbEIsU0FBUyxDQUFDbUIsTUFBWCxFQUFtQm5CLFNBQVMsQ0FBQ29CLElBQTdCLENBQXBCLEM7O0FBRVY7OztBQUdBVixFQUFBQSxNQUFNLEVBQUVWLFNBQVMsQ0FBQ3FCLEtBQVYsQ0FBZ0IsQ0FBQyxNQUFELEVBQVMsU0FBVCxFQUFvQixTQUFwQixFQUErQixRQUEvQixDQUFoQixFQUNMQyxVOztBQUVIOzs7O0FBSUFQLEVBQUFBLE9BQU8sRUFBRWYsU0FBUyxDQUFDdUIsSTs7QUFFbkI7OztBQUdBUCxFQUFBQSxJQUFJLEVBQUVoQixTQUFTLENBQUN3QixNOztBQUVoQjs7O0FBR0FiLEVBQUFBLEtBQUssRUFBRVgsU0FBUyxDQUFDeUIsTUFBVixDQUFpQkg7OztnQkFuQ3RCYixXLGtCQXNDa0I7QUFDcEJDLEVBQUFBLE1BQU0sRUFBRSxNQURZO0FBRXBCSyxFQUFBQSxPQUFPLEVBQUUsSUFGVztBQUdwQkMsRUFBQUEsSUFBSSxFQUFFO0FBSGMsQzs7QUE4QnhCLGVBQWVYLFNBQVMsQ0FBQ0ksV0FBRCxDQUF4QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBQdXJlQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgeyBzcGFjaW5nLCBkaW1lbnNpb25zLCBwb3NpdGlvbiwgbGF5b3V0IH0gZnJvbSAndWktYm94J1xuaW1wb3J0IHsgd2l0aFRoZW1lIH0gZnJvbSAnLi4vLi4vdGhlbWUnXG5pbXBvcnQgeyBQYW5lIH0gZnJvbSAnLi4vLi4vbGF5ZXJzJ1xuaW1wb3J0IHsgVGV4dCB9IGZyb20gJy4uLy4uL3R5cG9ncmFwaHknXG5pbXBvcnQgeyBJY29uIH0gZnJvbSAnLi4vLi4vaWNvbidcblxuY2xhc3MgSW5saW5lQWxlcnQgZXh0ZW5kcyBQdXJlQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICAvKipcbiAgICAgKiBDb21wb3NlcyBzb21lIEJveCBBUElzLlxuICAgICAqL1xuICAgIC4uLnNwYWNpbmcucHJvcFR5cGVzLFxuICAgIC4uLnBvc2l0aW9uLnByb3BUeXBlcyxcbiAgICAuLi5sYXlvdXQucHJvcFR5cGVzLFxuICAgIC4uLmRpbWVuc2lvbnMucHJvcFR5cGVzLFxuXG4gICAgLyoqXG4gICAgICogVGhlIGNvbnRlbnQgb2YgdGhlIGFsZXJ0LlxuICAgICAqL1xuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMubm9kZV0pLFxuXG4gICAgLyoqXG4gICAgICogVGhlIGludGVudCBvZiB0aGUgYWxlcnQuIFRoaXMgc2hvdWxkIGFsd2F5cyBiZSBzZXQgZXhwbGljaXRseS5cbiAgICAgKi9cbiAgICBpbnRlbnQ6IFByb3BUeXBlcy5vbmVPZihbJ25vbmUnLCAnc3VjY2VzcycsICd3YXJuaW5nJywgJ2RhbmdlciddKVxuICAgICAgLmlzUmVxdWlyZWQsXG5cbiAgICAvKipcbiAgICAgKiBXaGVuIHRydWUsIHNob3cgYSBpY29uIG9uIHRoZSBsZWZ0IG1hdGNoaW5nIHRoZSB0eXBlLlxuICAgICAqIFRoZXJlIGlzIG5vIHBvaW50IG5vdCBzaG93aW5nIHRoaXMuXG4gICAgICovXG4gICAgaGFzSWNvbjogUHJvcFR5cGVzLmJvb2wsXG5cbiAgICAvKipcbiAgICAgKiBUaGUgc2l6ZSBvZiB0aGUgVGV4dC5cbiAgICAgKi9cbiAgICBzaXplOiBQcm9wVHlwZXMubnVtYmVyLFxuXG4gICAgLyoqXG4gICAgICogVGhlbWUgcHJvdmlkZWQgYnkgVGhlbWVQcm92aWRlci5cbiAgICAgKi9cbiAgICB0aGVtZTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkXG4gIH1cblxuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIGludGVudDogJ25vbmUnLFxuICAgIGhhc0ljb246IHRydWUsXG4gICAgc2l6ZTogNDAwXG4gIH1cblxuICBnZXRJY29uRm9ySW50ZW50ID0gaW50ZW50ID0+IHtcbiAgICBjb25zdCB7IHRoZW1lIH0gPSB0aGlzLnByb3BzXG5cbiAgICByZXR1cm4gPEljb24gc2l6ZT17MTR9IG1hcmdpblRvcD17Mn0gey4uLnRoZW1lLmdldEljb25Gb3JJbnRlbnQoaW50ZW50KX0gLz5cbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IHRoZW1lLCBjaGlsZHJlbiwgaW50ZW50LCBoYXNJY29uLCBzaXplLCAuLi5wcm9wcyB9ID0gdGhpcy5wcm9wc1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxQYW5lIGFsaWduSXRlbXM9XCJjZW50ZXJcIiBkaXNwbGF5PVwiZmxleFwiIHsuLi5wcm9wc30+XG4gICAgICAgIHtoYXNJY29uICYmIChcbiAgICAgICAgICA8UGFuZSBkaXNwbGF5PVwiaW5saW5lXCIgbWFyZ2luUmlnaHQ9ezh9PlxuICAgICAgICAgICAge3RoaXMuZ2V0SWNvbkZvckludGVudChpbnRlbnQpfVxuICAgICAgICAgIDwvUGFuZT5cbiAgICAgICAgKX1cbiAgICAgICAgPFRleHQgc2l6ZT17c2l6ZX0gZm9udFdlaWdodD17NTAwfT5cbiAgICAgICAgICB7Y2hpbGRyZW59XG4gICAgICAgIDwvVGV4dD5cbiAgICAgIDwvUGFuZT5cbiAgICApXG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgd2l0aFRoZW1lKElubGluZUFsZXJ0KVxuIl19