/**
 * Function to help with focus management for selectable table cells.
 * @param {Object} key - React `event.key`.
 * @param {Element} ref - the cell to manage focus interaction for.
 */
export default function manageTableCellFocusInteraction(key, ref) {
  // eslint-disable-next-line unicorn/prefer-spread
  var tableRowChildren = Array.from(ref.parentElement.children);
  var columnIndex = tableRowChildren.indexOf(ref);
  var nextItemToFocus;

  if (key === 'ArrowLeft' || key === 'ArrowRight') {
    if (key === 'ArrowLeft' && columnIndex - 1 >= 0) {
      nextItemToFocus = tableRowChildren[columnIndex - 1];
    } else if (key === 'ArrowRight' && columnIndex + 1 < tableRowChildren.length) {
      nextItemToFocus = tableRowChildren[columnIndex + 1];
    }
  } else if (key === 'ArrowUp' || key === 'ArrowDown') {
    // eslint-disable-next-line unicorn/prefer-spread
    var tableBodyChildren = Array.from(ref.parentElement.parentElement.children);
    var rowIndex = tableBodyChildren.indexOf(ref.parentElement);
    var nextRow;

    if (key === 'ArrowUp' && rowIndex - 1 >= 0) {
      nextRow = tableBodyChildren[rowIndex - 1];
    } else if (key === 'ArrowDown' && rowIndex + 1 < tableBodyChildren.length) {
      nextRow = tableBodyChildren[rowIndex + 1];
    }

    if (nextRow && nextRow.children) {
      nextItemToFocus = nextRow.children[columnIndex];
    }
  }

  if (nextItemToFocus && nextItemToFocus.hasAttribute('tabindex')) {
    nextItemToFocus.focus();
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90YWJsZS9zcmMvbWFuYWdlVGFibGVDZWxsRm9jdXNJbnRlcmFjdGlvbi5qcyJdLCJuYW1lcyI6WyJtYW5hZ2VUYWJsZUNlbGxGb2N1c0ludGVyYWN0aW9uIiwia2V5IiwicmVmIiwidGFibGVSb3dDaGlsZHJlbiIsIkFycmF5IiwiZnJvbSIsInBhcmVudEVsZW1lbnQiLCJjaGlsZHJlbiIsImNvbHVtbkluZGV4IiwiaW5kZXhPZiIsIm5leHRJdGVtVG9Gb2N1cyIsImxlbmd0aCIsInRhYmxlQm9keUNoaWxkcmVuIiwicm93SW5kZXgiLCJuZXh0Um93IiwiaGFzQXR0cmlidXRlIiwiZm9jdXMiXSwibWFwcGluZ3MiOiJBQUFBOzs7OztBQUtBLGVBQWUsU0FBU0EsK0JBQVQsQ0FBeUNDLEdBQXpDLEVBQThDQyxHQUE5QyxFQUFtRDtBQUNoRTtBQUNBLE1BQU1DLGdCQUFnQixHQUFHQyxLQUFLLENBQUNDLElBQU4sQ0FBV0gsR0FBRyxDQUFDSSxhQUFKLENBQWtCQyxRQUE3QixDQUF6QjtBQUNBLE1BQU1DLFdBQVcsR0FBR0wsZ0JBQWdCLENBQUNNLE9BQWpCLENBQXlCUCxHQUF6QixDQUFwQjtBQUVBLE1BQUlRLGVBQUo7O0FBQ0EsTUFBSVQsR0FBRyxLQUFLLFdBQVIsSUFBdUJBLEdBQUcsS0FBSyxZQUFuQyxFQUFpRDtBQUMvQyxRQUFJQSxHQUFHLEtBQUssV0FBUixJQUF1Qk8sV0FBVyxHQUFHLENBQWQsSUFBbUIsQ0FBOUMsRUFBaUQ7QUFDL0NFLE1BQUFBLGVBQWUsR0FBR1AsZ0JBQWdCLENBQUNLLFdBQVcsR0FBRyxDQUFmLENBQWxDO0FBQ0QsS0FGRCxNQUVPLElBQ0xQLEdBQUcsS0FBSyxZQUFSLElBQ0FPLFdBQVcsR0FBRyxDQUFkLEdBQWtCTCxnQkFBZ0IsQ0FBQ1EsTUFGOUIsRUFHTDtBQUNBRCxNQUFBQSxlQUFlLEdBQUdQLGdCQUFnQixDQUFDSyxXQUFXLEdBQUcsQ0FBZixDQUFsQztBQUNEO0FBQ0YsR0FURCxNQVNPLElBQUlQLEdBQUcsS0FBSyxTQUFSLElBQXFCQSxHQUFHLEtBQUssV0FBakMsRUFBOEM7QUFDbkQ7QUFDQSxRQUFNVyxpQkFBaUIsR0FBR1IsS0FBSyxDQUFDQyxJQUFOLENBQ3hCSCxHQUFHLENBQUNJLGFBQUosQ0FBa0JBLGFBQWxCLENBQWdDQyxRQURSLENBQTFCO0FBR0EsUUFBTU0sUUFBUSxHQUFHRCxpQkFBaUIsQ0FBQ0gsT0FBbEIsQ0FBMEJQLEdBQUcsQ0FBQ0ksYUFBOUIsQ0FBakI7QUFFQSxRQUFJUSxPQUFKOztBQUNBLFFBQUliLEdBQUcsS0FBSyxTQUFSLElBQXFCWSxRQUFRLEdBQUcsQ0FBWCxJQUFnQixDQUF6QyxFQUE0QztBQUMxQ0MsTUFBQUEsT0FBTyxHQUFHRixpQkFBaUIsQ0FBQ0MsUUFBUSxHQUFHLENBQVosQ0FBM0I7QUFDRCxLQUZELE1BRU8sSUFBSVosR0FBRyxLQUFLLFdBQVIsSUFBdUJZLFFBQVEsR0FBRyxDQUFYLEdBQWVELGlCQUFpQixDQUFDRCxNQUE1RCxFQUFvRTtBQUN6RUcsTUFBQUEsT0FBTyxHQUFHRixpQkFBaUIsQ0FBQ0MsUUFBUSxHQUFHLENBQVosQ0FBM0I7QUFDRDs7QUFFRCxRQUFJQyxPQUFPLElBQUlBLE9BQU8sQ0FBQ1AsUUFBdkIsRUFBaUM7QUFDL0JHLE1BQUFBLGVBQWUsR0FBR0ksT0FBTyxDQUFDUCxRQUFSLENBQWlCQyxXQUFqQixDQUFsQjtBQUNEO0FBQ0Y7O0FBRUQsTUFBSUUsZUFBZSxJQUFJQSxlQUFlLENBQUNLLFlBQWhCLENBQTZCLFVBQTdCLENBQXZCLEVBQWlFO0FBQy9ETCxJQUFBQSxlQUFlLENBQUNNLEtBQWhCO0FBQ0Q7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRnVuY3Rpb24gdG8gaGVscCB3aXRoIGZvY3VzIG1hbmFnZW1lbnQgZm9yIHNlbGVjdGFibGUgdGFibGUgY2VsbHMuXG4gKiBAcGFyYW0ge09iamVjdH0ga2V5IC0gUmVhY3QgYGV2ZW50LmtleWAuXG4gKiBAcGFyYW0ge0VsZW1lbnR9IHJlZiAtIHRoZSBjZWxsIHRvIG1hbmFnZSBmb2N1cyBpbnRlcmFjdGlvbiBmb3IuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG1hbmFnZVRhYmxlQ2VsbEZvY3VzSW50ZXJhY3Rpb24oa2V5LCByZWYpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHVuaWNvcm4vcHJlZmVyLXNwcmVhZFxuICBjb25zdCB0YWJsZVJvd0NoaWxkcmVuID0gQXJyYXkuZnJvbShyZWYucGFyZW50RWxlbWVudC5jaGlsZHJlbilcbiAgY29uc3QgY29sdW1uSW5kZXggPSB0YWJsZVJvd0NoaWxkcmVuLmluZGV4T2YocmVmKVxuXG4gIGxldCBuZXh0SXRlbVRvRm9jdXNcbiAgaWYgKGtleSA9PT0gJ0Fycm93TGVmdCcgfHwga2V5ID09PSAnQXJyb3dSaWdodCcpIHtcbiAgICBpZiAoa2V5ID09PSAnQXJyb3dMZWZ0JyAmJiBjb2x1bW5JbmRleCAtIDEgPj0gMCkge1xuICAgICAgbmV4dEl0ZW1Ub0ZvY3VzID0gdGFibGVSb3dDaGlsZHJlbltjb2x1bW5JbmRleCAtIDFdXG4gICAgfSBlbHNlIGlmIChcbiAgICAgIGtleSA9PT0gJ0Fycm93UmlnaHQnICYmXG4gICAgICBjb2x1bW5JbmRleCArIDEgPCB0YWJsZVJvd0NoaWxkcmVuLmxlbmd0aFxuICAgICkge1xuICAgICAgbmV4dEl0ZW1Ub0ZvY3VzID0gdGFibGVSb3dDaGlsZHJlbltjb2x1bW5JbmRleCArIDFdXG4gICAgfVxuICB9IGVsc2UgaWYgKGtleSA9PT0gJ0Fycm93VXAnIHx8IGtleSA9PT0gJ0Fycm93RG93bicpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgdW5pY29ybi9wcmVmZXItc3ByZWFkXG4gICAgY29uc3QgdGFibGVCb2R5Q2hpbGRyZW4gPSBBcnJheS5mcm9tKFxuICAgICAgcmVmLnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudC5jaGlsZHJlblxuICAgIClcbiAgICBjb25zdCByb3dJbmRleCA9IHRhYmxlQm9keUNoaWxkcmVuLmluZGV4T2YocmVmLnBhcmVudEVsZW1lbnQpXG5cbiAgICBsZXQgbmV4dFJvd1xuICAgIGlmIChrZXkgPT09ICdBcnJvd1VwJyAmJiByb3dJbmRleCAtIDEgPj0gMCkge1xuICAgICAgbmV4dFJvdyA9IHRhYmxlQm9keUNoaWxkcmVuW3Jvd0luZGV4IC0gMV1cbiAgICB9IGVsc2UgaWYgKGtleSA9PT0gJ0Fycm93RG93bicgJiYgcm93SW5kZXggKyAxIDwgdGFibGVCb2R5Q2hpbGRyZW4ubGVuZ3RoKSB7XG4gICAgICBuZXh0Um93ID0gdGFibGVCb2R5Q2hpbGRyZW5bcm93SW5kZXggKyAxXVxuICAgIH1cblxuICAgIGlmIChuZXh0Um93ICYmIG5leHRSb3cuY2hpbGRyZW4pIHtcbiAgICAgIG5leHRJdGVtVG9Gb2N1cyA9IG5leHRSb3cuY2hpbGRyZW5bY29sdW1uSW5kZXhdXG4gICAgfVxuICB9XG5cbiAgaWYgKG5leHRJdGVtVG9Gb2N1cyAmJiBuZXh0SXRlbVRvRm9jdXMuaGFzQXR0cmlidXRlKCd0YWJpbmRleCcpKSB7XG4gICAgbmV4dEl0ZW1Ub0ZvY3VzLmZvY3VzKClcbiAgfVxufVxuIl19