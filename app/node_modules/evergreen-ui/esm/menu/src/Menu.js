import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _assertThisInitialized from "@babel/runtime/helpers/esm/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import React from 'react';
import PropTypes from 'prop-types';
import { Pane } from '../../layers';
import MenuItem from './MenuItem';
import MenuDivider from './MenuDivider';
import MenuGroup from './MenuGroup';
import MenuOption from './MenuOption';
import MenuOptionsGroup from './MenuOptionsGroup';

var Menu =
/*#__PURE__*/
function (_React$PureComponent) {
  _inherits(Menu, _React$PureComponent);

  function Menu() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, Menu);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Menu)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "onMenuRef", function (ref) {
      _this.menuRef = ref;
    });

    return _this;
  }

  _createClass(Menu, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      // Get the menu item buttons
      // eslint-disable-next-line unicorn/prefer-spread
      this.menuItems = Array.from(this.menuRef.querySelectorAll('[role="menuitemradio"], [role="menuitem"]'));

      if (this.menuItems.length === 0) {
        throw new Error('The menu has no menu items');
      }

      this.firstItem = this.menuItems[0];
      this.lastItem = this.menuItems[this.menuItems.length - 1];

      var focusNext = function focusNext(currentItem, startItem) {
        // Determine which item is the startItem (first or last)
        var goingDown = startItem === _this2.firstItem; // Helper function for getting next legitimate element

        var move = function move(elem) {
          var indexOfItem = _this2.menuItems.indexOf(elem);

          if (goingDown) {
            if (indexOfItem < _this2.menuItems.length - 1) {
              return _this2.menuItems[indexOfItem + 1];
            }

            return startItem;
          }

          if (indexOfItem - 1 > -1) {
            return _this2.menuItems[indexOfItem - 1];
          }

          return startItem;
        }; // Make first move


        var nextItem = move(currentItem); // If the menuitem is disabled move on

        while (nextItem.disabled) {
          nextItem = move(nextItem);
        } // Focus the first one that's not disabled


        nextItem.focus();
      };

      this.menuItems.forEach(function (menuItem) {
        // Handle key presses for menuItem
        menuItem.addEventListener('keydown', function (e) {
          // Go to next/previous item if it exists
          // or loop around
          if (e.key === 'ArrowDown') {
            e.preventDefault();
            focusNext(menuItem, _this2.firstItem);
          }

          if (e.key === 'ArrowUp') {
            e.preventDefault();
            focusNext(menuItem, _this2.lastItem);
          }

          if (e.key === 'Home') {
            e.preventDefault();

            _this2.firstItem.focus();
          }

          if (e.key === 'End') {
            e.preventDefault();

            _this2.lastItem.focus();
          }
        });
      });
    }
  }, {
    key: "render",
    value: function render() {
      var children = this.props.children;
      return React.createElement(Pane, {
        is: "nav",
        innerRef: this.onMenuRef,
        role: "menu",
        outline: "none"
      }, children);
    }
  }]);

  return Menu;
}(React.PureComponent);

Menu.displayName = "Menu";

_defineProperty(Menu, "Item", MenuItem);

_defineProperty(Menu, "Divider", MenuDivider);

_defineProperty(Menu, "Group", MenuGroup);

_defineProperty(Menu, "Option", MenuOption);

_defineProperty(Menu, "OptionsGroup", MenuOptionsGroup);

_defineProperty(Menu, "propTypes", {
  /**
   * The children of the component.
   */
  children: PropTypes.node
});

export { Menu as default };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,