import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import { css } from 'glamor';
import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import Box from 'ui-box';
import { withTheme } from '../../theme';
var loadingKeyframes = css.keyframes('loading', {
  '0%': {
    transform: 'rotate(0)'
  },
  '100%': {
    transform: 'rotate(360deg)'
  }
});
var loadingCircleKeyframes = css.keyframes('loading-circle', {
  '0%': {
    strokeDashoffset: 600
  },
  '100%': {
    strokeDashoffset: 0
  }
});
var outerClass = css({
  animation: "".concat(loadingKeyframes, " 2s linear infinite")
}).toString();

var innerClass = function innerClass(color) {
  return css({
    strokeDashoffset: 600,
    strokeDasharray: 300,
    strokeWidth: 12,
    strokeMiterlimit: 10,
    strokeLinecap: 'round',
    animation: "".concat(loadingCircleKeyframes, " 1.6s cubic-bezier(0.4, 0.15, 0.6, 0.85) infinite"),
    stroke: color,
    fill: 'transparent'
  }).toString();
};

var Spinner =
/*#__PURE__*/
function (_PureComponent) {
  _inherits(Spinner, _PureComponent);

  function Spinner(_ref) {
    var _this;

    var delay = _ref.delay;

    _classCallCheck(this, Spinner);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Spinner).call(this));
    _this.state = {
      isVisible: delay === 0
    };
    return _this;
  }

  _createClass(Spinner, [{
    key: "render",
    value: function render() {
      if (!this.state.isVisible) {
        return null;
      }

      var _this$props = this.props,
          theme = _this$props.theme,
          size = _this$props.size,
          props = _objectWithoutProperties(_this$props, ["theme", "size"]);

      return React.createElement(Box, _extends({
        width: size,
        height: size,
        lineHeight: 0
      }, props), React.createElement(Box, {
        is: "svg",
        className: outerClass,
        x: "0px",
        y: "0px",
        viewBox: "0 0 150 150"
      }, React.createElement(Box, {
        is: "circle",
        className: innerClass(theme.spinnerColor),
        cx: "75",
        cy: "75",
        r: "60"
      })));
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      var delay = this.props.delay;

      if (delay > 0) {
        this.delayTimer = setTimeout(function () {
          _this2.setState({
            isVisible: true
          });
        }, delay);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      clearTimeout(this.delayTimer);
    }
  }]);

  return Spinner;
}(PureComponent);

Spinner.displayName = "Spinner";

_defineProperty(Spinner, "propTypes", _objectSpread({}, Box.propTypes, {
  /**
   * Delay after which spinner should be visible.
   */
  delay: PropTypes.number,

  /**
   * The size of the spinner.
   */
  size: PropTypes.number.isRequired,

  /**
   * Theme provided by ThemeProvider.
   */
  theme: PropTypes.object.isRequired
}));

_defineProperty(Spinner, "defaultProps", {
  size: 40,
  delay: 0
});

export default withTheme(Spinner);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zcGlubmVyL3NyYy9TcGlubmVyLmpzIl0sIm5hbWVzIjpbImNzcyIsIlJlYWN0IiwiUHVyZUNvbXBvbmVudCIsIlByb3BUeXBlcyIsIkJveCIsIndpdGhUaGVtZSIsImxvYWRpbmdLZXlmcmFtZXMiLCJrZXlmcmFtZXMiLCJ0cmFuc2Zvcm0iLCJsb2FkaW5nQ2lyY2xlS2V5ZnJhbWVzIiwic3Ryb2tlRGFzaG9mZnNldCIsIm91dGVyQ2xhc3MiLCJhbmltYXRpb24iLCJ0b1N0cmluZyIsImlubmVyQ2xhc3MiLCJjb2xvciIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZVdpZHRoIiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZUxpbmVjYXAiLCJzdHJva2UiLCJmaWxsIiwiU3Bpbm5lciIsImRlbGF5Iiwic3RhdGUiLCJpc1Zpc2libGUiLCJwcm9wcyIsInRoZW1lIiwic2l6ZSIsInNwaW5uZXJDb2xvciIsImRlbGF5VGltZXIiLCJzZXRUaW1lb3V0Iiwic2V0U3RhdGUiLCJjbGVhclRpbWVvdXQiLCJwcm9wVHlwZXMiLCJudW1iZXIiLCJpc1JlcXVpcmVkIiwib2JqZWN0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUEsU0FBU0EsR0FBVCxRQUFvQixRQUFwQjtBQUNBLE9BQU9DLEtBQVAsSUFBZ0JDLGFBQWhCLFFBQXFDLE9BQXJDO0FBQ0EsT0FBT0MsU0FBUCxNQUFzQixZQUF0QjtBQUNBLE9BQU9DLEdBQVAsTUFBZ0IsUUFBaEI7QUFDQSxTQUFTQyxTQUFULFFBQTBCLGFBQTFCO0FBRUEsSUFBTUMsZ0JBQWdCLEdBQUdOLEdBQUcsQ0FBQ08sU0FBSixDQUFjLFNBQWQsRUFBeUI7QUFDaEQsUUFBTTtBQUNKQyxJQUFBQSxTQUFTLEVBQUU7QUFEUCxHQUQwQztBQUloRCxVQUFRO0FBQ05BLElBQUFBLFNBQVMsRUFBRTtBQURMO0FBSndDLENBQXpCLENBQXpCO0FBU0EsSUFBTUMsc0JBQXNCLEdBQUdULEdBQUcsQ0FBQ08s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QUV4QixTQUFTLENBQUNrQyxNQUFWLENBQWlCRDs7O2dCQXBCdEJkLE8sa0JBdUJrQjtBQUNwQk0sRUFBQUEsSUFBSSxFQUFFLEVBRGM7QUFFcEJMLEVBQUFBLEtBQUssRUFBRTtBQUZhLEM7O0FBeUR4QixlQUFlbEIsU0FBUyxDQUFDaUIsT0FBRCxDQUF4QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNzcyB9IGZyb20gJ2dsYW1vcidcbmltcG9ydCBSZWFjdCwgeyBQdXJlQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgQm94IGZyb20gJ3VpLWJveCdcbmltcG9ydCB7IHdpdGhUaGVtZSB9IGZyb20gJy4uLy4uL3RoZW1lJ1xuXG5jb25zdCBsb2FkaW5nS2V5ZnJhbWVzID0gY3NzLmtleWZyYW1lcygnbG9hZGluZycsIHtcbiAgJzAlJzoge1xuICAgIHRyYW5zZm9ybTogJ3JvdGF0ZSgwKSdcbiAgfSxcbiAgJzEwMCUnOiB7XG4gICAgdHJhbnNmb3JtOiAncm90YXRlKDM2MGRlZyknXG4gIH1cbn0pXG5cbmNvbnN0IGxvYWRpbmdDaXJjbGVLZXlmcmFtZXMgPSBjc3Mua2V5ZnJhbWVzKCdsb2FkaW5nLWNpcmNsZScsIHtcbiAgJzAlJzoge1xuICAgIHN0cm9rZURhc2hvZmZzZXQ6IDYwMFxuICB9LFxuICAnMTAwJSc6IHtcbiAgICBzdHJva2VEYXNob2Zmc2V0OiAwXG4gIH1cbn0pXG5cbmNvbnN0IG91dGVyQ2xhc3MgPSBjc3Moe1xuICBhbmltYXRpb246IGAke2xvYWRpbmdLZXlmcmFtZXN9IDJzIGxpbmVhciBpbmZpbml0ZWBcbn0pLnRvU3RyaW5nKClcblxuY29uc3QgaW5uZXJDbGFzcyA9IGNvbG9yID0+XG4gIGNzcyh7XG4gICAgc3Ryb2tlRGFzaG9mZnNldDogNjAwLFxuICAgIHN0cm9rZURhc2hhcnJheTogMzAwLFxuICAgIHN0cm9rZVdpZHRoOiAxMixcbiAgICBzdHJva2VNaXRlcmxpbWl0OiAxMCxcbiAgICBzdHJva2VMaW5lY2FwOiAncm91bmQnLFxuICAgIGFuaW1hdGlvbjogYCR7bG9hZGluZ0NpcmNsZUtleWZyYW1lc30gMS42cyBjdWJpYy1iZXppZXIoMC40LCAwLjE1LCAwLjYsIDAuODUpIGluZmluaXRlYCxcbiAgICBzdHJva2U6IGNvbG9yLFxuICAgIGZpbGw6ICd0cmFuc3BhcmVudCdcbiAgfSkudG9TdHJpbmcoKVxuXG5jbGFzcyBTcGlubmVyIGV4dGVuZHMgUHVyZUNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgLyoqXG4gICAgICogQ29tcG9zZXMgdGhlIEJveCBjb21wb25lbnQgYXMgdGhlIGJhc2UuXG4gICAgICovXG4gICAgLi4uQm94LnByb3BUeXBlcyxcblxuICAgIC8qKlxuICAgICAqIERlbGF5IGFmdGVyIHdoaWNoIHNwaW5uZXIgc2hvdWxkIGJlIHZpc2libGUuXG4gICAgICovXG4gICAgZGVsYXk6IFByb3BUeXBlcy5udW1iZXIsXG5cbiAgICAvKipcbiAgICAgKiBUaGUgc2l6ZSBvZiB0aGUgc3Bpbm5lci5cbiAgICAgKi9cbiAgICBzaXplOiBQcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG5cbiAgICAvKipcbiAgICAgKiBUaGVtZSBwcm92aWRlZCBieSBUaGVtZVByb3ZpZGVyLlxuICAgICAqL1xuICAgIHRoZW1lOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWRcbiAgfVxuXG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgc2l6ZTogNDAsXG4gICAgZGVsYXk6IDBcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHsgZGVsYXkgfSkge1xuICAgIHN1cGVyKClcblxuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICBpc1Zpc2libGU6IGRlbGF5ID09PSAwXG4gICAgfVxuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGlmICghdGhpcy5zdGF0ZS5pc1Zpc2libGUpIHtcbiAgICAgIHJldHVybiBudWxsXG4gICAgfVxuXG4gICAgY29uc3QgeyB0aGVtZSwgc2l6ZSwgLi4ucHJvcHMgfSA9IHRoaXMucHJvcHNcbiAgICByZXR1cm4gKFxuICAgICAgPEJveCB3aWR0aD17c2l6ZX0gaGVpZ2h0PXtzaXplfSBsaW5lSGVpZ2h0PXswfSB7Li4ucHJvcHN9PlxuICAgICAgICA8Qm94XG4gICAgICAgICAgaXM9XCJzdmdcIlxuICAgICAgICAgIGNsYXNzTmFtZT17b3V0ZXJDbGFzc31cbiAgICAgICAgICB4PVwiMHB4XCJcbiAgICAgICAgICB5PVwiMHB4XCJcbiAgICAgICAgICB2aWV3Qm94PVwiMCAwIDE1MCAxNTBcIlxuICAgICAgICA+XG4gICAgICAgICAgPEJveFxuICAgICAgICAgICAgaXM9XCJjaXJjbGVcIlxuICAgICAgICAgICAgY2xhc3NOYW1lPXtpbm5lckNsYXNzKHRoZW1lLnNwaW5uZXJDb2xvcil9XG4gICAgICAgICAgICBjeD1cIjc1XCJcbiAgICAgICAgICAgIGN5PVwiNzVcIlxuICAgICAgICAgICAgcj1cIjYwXCJcbiAgICAgICAgICAvPlxuICAgICAgICA8L0JveD5cbiAgICAgIDwvQm94PlxuICAgIClcbiAgfVxuXG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIGNvbnN0IHsgZGVsYXkgfSA9IHRoaXMucHJvcHNcblxuICAgIGlmIChkZWxheSA+IDApIHtcbiAgICAgIHRoaXMuZGVsYXlUaW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICBpc1Zpc2libGU6IHRydWVcbiAgICAgICAgfSlcbiAgICAgIH0sIGRlbGF5KVxuICAgIH1cbiAgfVxuXG4gIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIGNsZWFyVGltZW91dCh0aGlzLmRlbGF5VGltZXIpXG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgd2l0aFRoZW1lKFNwaW5uZXIpXG4iXX0=